Run command:
./bin/aff3ct --sim-type "BFER" -p "8" --sim-cde-type "UNCODED" -K "12" -m "5" -M "5" -s "0.5" --chn-type "RAYLEIGH" -t "1" --mdm-type "SCMA" --mdm-ite "4" --mnt-max-fe "100" -F "6" --sim-debug-hex --sim-pyber "Dump Test"
Curve name:
Dump Test
# ----------------------------------------------------
# ---- A FAST FORWARD ERROR CORRECTION TOOLBOX >> ----
# ----------------------------------------------------
# Parameters :
# * Simulation ------------------------------------
#    ** Type                  = BFER
#    ** Type of bits          = int8
#    ** Type of reals         = float32
#    ** Type of quant. reals  = int8
#    ** Date (UTC)            = 2018-02-03 01:29:19
#    ** Git version           = v1.3.2-10-g746b3d7
#    ** Code type (C)         = UNCODED
#    ** SNR min (m)           = 5.000000 dB
#    ** SNR max (M)           = 5.000100 dB
#    ** SNR step (s)          = 0.500000 dB
#    ** Seed                  = 0
#    ** Statistics            = off
#    ** Debug mode            = on
#    ** Debug precision       = 2
#    ** Multi-threading (t)   = 1 thread(s)
#    ** SNR type              = EB
#    ** Coset approach (c)    = no
#    ** Coded monitoring      = no
#    ** Bad frames tracking   = off
#    ** Bad frames replay     = off
#    ** Bit rate              = 1.000000
#    ** Inter frame level     = 6
# * Source ----------------------------------------
#    ** Type                  = RAND
#    ** Info. bits (K_info)   = 12
# * Codec -----------------------------------------
#    ** Type                  = UNCODED
#    ** Info. bits (K)        = 12
#    ** Codeword size (N_cw)  = 12
#    ** Frame size (N)        = 12
#    ** Code rate             = 1.000000
# * Decoder ---------------------------------------
#    ** Type (D)              = NONE
#    ** Implementation        = HARD_DECISION
#    ** Systematic            = yes
# * Modem -----------------------------------------
#    ** Type                  = SCMA
#    ** Bits per symbol       = 3
#    ** Sampling factor       = 1
#    ** Sigma square          = on
#    ** Number of iterations  = 4
#    ** Psi function          = PSI0
# * Channel ---------------------------------------
#    ** Type                  = RAYLEIGH
#    ** Implementation        = STD
#    ** Block fading policy   = NO
#    ** Complex               = on
#    ** Add users             = on
# * Quantizer -------------------------------------
#    ** Type                  = STD
#    ** Fixed-point config.   = {8, 3}
# * Monitor ---------------------------------------
#    ** Frame error count (e) = 100
# * Terminal --------------------------------------
#    ** Type                  = STD
#    ** Enabled               = yes
#    ** Frequency (ms)        = 500
#
# The simulation is running...
#
# -------------------------------
# New communication (nÂ°0)
# -------------------------------
#
# Source_random::generate(int8 U_K[6x12])
# {OUT} U_K = [f1:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1),
#              f2:(0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#              f3:(0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0),
#              f4:(0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0),
#              f5:(0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0),
#              f6:(0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0)]
# Returned status: 0
#
# CRC_NO::build(const int8 U_K1[6x12], int8 U_K2[6x12])
# {IN}  U_K1 = [f1:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1),
#               f2:(0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#               f3:(0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0),
#               f4:(0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0),
#               f5:(0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0),
#               f6:(0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0)]
# {OUT} U_K2 = [f1:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1),
#               f2:(0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#               f3:(0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0),
#               f4:(0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0),
#               f5:(0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0),
#               f6:(0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0)]
# Returned status: 0
#
# Encoder_NO::encode(const int8 U_K[6x12], int8 X_N[6x12])
# {IN}  U_K = [f1:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1),
#              f2:(0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#              f3:(0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0),
#              f4:(0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0),
#              f5:(0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0),
#              f6:(0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0)]
# {OUT} X_N = [f1:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1),
#              f2:(0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#              f3:(0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0),
#              f4:(0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0),
#              f5:(0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0),
#              f6:(0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0)]
# Returned status: 0
#
# Puncturer_NO::puncture(const int8 X_N1[6x12], int8 X_N2[6x12])
# {IN}  X_N1 = [f1:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1),
#               f2:(0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#               f3:(0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0),
#               f4:(0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0),
#               f5:(0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0),
#               f6:(0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0)]
# {OUT} X_N2 = [f1:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1),
#               f2:(0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#               f3:(0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0),
#               f4:(0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0),
#               f5:(0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0),
#               f6:(0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0)]
# Returned status: 0
#
# Modem_SCMA::modulate(const int8 X_N1[6x12], float32 X_N2[6x48])
# {IN}  X_N1 = [f1:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1),
#               f2:(0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#               f3:(0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0),
#               f4:(0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0),
#               f5:(0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0),
#               f6:(0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0)]
# {OUT} X_N2 = [f1:(0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0),
#               f2:(-0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0),
#               f3:(-0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3),
#               f5:(0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2),
#               f6:(0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Channel_Rayleigh_LLR::add_noise_wg(const float32 X_N[6x48], float32 H_N[6x48], float32 Y_N[6x48])
# {IN}  X_N = [f1:(0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0),
#              f2:(-0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0),
#              f3:(-0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3),
#              f5:(0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2),
#              f6:(0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0)]
# {OUT} H_N = [f1:(0x1.207f8ap-1, 0x1.349a86p-1, 0x1.bfeb2ap-2, 0x1.590ee4p-2, 0x1.0f08eep-1, 0x1.8e7b22p-2, -0x1.46cd2ap-3, -0x1.7e88p+0, -0x1.5aa522p-1, 0x1.d7879ap-3, -0x1.5762b4p-1, 0x1.197c48p-1, -0x1.9ee0bap-1, 0x1.96d3f8p-2, 0x1.b2a794p-1, -0x1.4eae6ap-3, -0x1.b16d9p-6, 0x1.3a43d8p-2, -0x1.5027b2p-6, -0x1.a287ccp-1, 0x1.08f904p-2, -0x1.32b04p-4, 0x1.beae2cp-2, 0x1.8a0ebp-4, 0x1.fd0758p-2, -0x1.a3797ap+0, 0x1.8e8002p-2, -0x1.93a2ep-5, 0x1.3fd664p-1, 0x1.1e40dp-2, 0x1.88cfe8p-5, -0x1.c67b2ep-6, 0x1.5a1a9ap-2, -0x1.cef92ep-2, -0x1.9fe216p-2, 0x1.d58c2cp-1, -0x1.7662fcp-1, 0x1.1b88cp-1, -0x1.081422p-1, 0x1.76fda2p-1, -0x1.c686dcp-4, 0x1.4d6cd4p+0, 0x1.b16ab6p-1, -0x1.dc0452p-5, 0x1.8407f6p-3, -0x1.b3143p-6, 0x1.26fbf6p-1, 0x1.fe7e0ap-3),
#              f2:(-0x1.e526a4p-4, -0x1.d784aep-2, 0x1.50bd92p-2, 0x1.725cdap-4, 0x1.7e23f4p-1, -0x1.f85d22p+0, -0x1.0bff64p-1, -0x1.5db42ep-2, 0x1.040d4ep-4, -0x1.6a4012p-1, 0x1.dab4acp-2, 0x1.1ab4c6p-1, 0x1.e998a4p-3, 0x1.16ce76p+0, 0x1.281534p+0, -0x1.06fbc4p-2, 0x1.610b0cp-3, -0x1.cc9b7ap-2, -0x1.8e8544p-2, 0x1.d52174p-3, 0x1.0e0f72p-2, 0x1.0d7f82p-1, 0x1.ebd22cp-1, -0x1.274e76p-1, -0x1.818778p-1, -0x1.7b8646p-3, 0x1.144cb6p-1, 0x1.1f212cp+0, 0x1.792dacp-3, -0x1.118fa2p-1, 0x1.f963a2p-2, -0x1.180fc8p+0, -0x1.6f1144p+0, 0x1.8f00ap-1, -0x1.f16faap-2, -0x1.44e874p-3, 0x1.2678dp-1, -0x1.0d0144p+0, -0x1.11bc2ap-3, 0x1.6ed312p-2, 0x1.03c274p-3, -0x1.10bd44p-1, -0x1.d99a16p-2, -0x1.48ff24p-2, -0x1.abcff4p-4, 0x1.5e2294p-6, -0x1.27e7a4p-6, 0x1.57d1a8p-2),
#              f3:(0x1.1a0242p-1, -0x1.7c837p-1, -0x1.a725ep-4, -0x1.551892p-5, -0x1.9b60d8p-1, -0x1.69a2a2p-1, 0x1.83f2e8p-1, -0x1.188924p-1, -0x1.61d058p-1, -0x1.00517cp-4, 0x1.81e6b4p+0, -0x1.453738p-2, -0x1.86043cp+0, 0x1.4bba6ep-1, 0x1.3af136p-5, 0x1.604c14p+0, 0x1.b56678p-3, 0x1.dbe83ep-1, 0x1.26121cp-2, 0x1.61ada6p-1, 0x1.288b88p-1, -0x1.78a788p-1, 0x1.2cd3cap-4, 0x1.b64b8ep-6, -0x1.4e7704p-2, 0x1.09a90ap+0, 0x1.3cf1f8p-2, 0x1.3564cp-1, -0x1.dc19p-3, -0x1.299f6p-3, -0x1.2772aap-1, -0x1.1b6fbcp+0, -0x1.0f0a8ap-4, 0x1.fed132p-3, 0x1.21fde6p-1, -0x1.1b72b8p+0, 0x1.1ea04cp-2, 0x1.56771ap+0, -0x1.36c45cp-2, -0x1.71e454p-1, -0x1.25659p+0, -0x1.a1879ep-1, -0x1.aa1c78p-2, 0x1.fd7fc4p-4, 0x1.5aa9d2p-1, 0x1.723a02p+0, -0x1.24b7d2p+0, 0x1.515a7p-2),
#              f4:(-0x1.b84dfap+0, -0x1.334ef2p-2, 0x1.bae5d2p-3, 0x1.b63c2ap-3, -0x1.f3e0cp-3, -0x1.0b4d0ap-1, -0x1.4bb272p-1, -0x1.1f5878p-4, -0x1.279cap-4, -0x1.4ed5fp-1, 0x1.60f232p-2, -0x1.82af92p-3, 0x1.b28aaep-2, 0x1.4ecbc8p+0, 0x1.27967ap+0, -0x1.158818p-1, -0x1.3232c4p+0, 0x1.d12a68p-3, -0x1.782866p-4, -0x1.1a334p-1, 0x1.1820cap-3, 0x1.9eab1ap-2, 0x1.271a1ap-1, 0x1.fd534ep-2, 0x1.4c2e2p-5, -0x1.33e966p-2, -0x1.1993e8p-5, 0x1.353e7cp-2, 0x1.c20edap+0, 0x1.07dcc2p+0, 0x1.3c18bap-5, 0x1.5739f2p-1, -0x1.19c166p-1, -0x1.371ea6p-3, -0x1.9647dp-2, 0x1.6aad08p+0, 0x1.40d39ep-2, -0x1.ad6ae6p-8, 0x1.8196dp+0, -0x1.074bf6p-1, -0x1.abebecp-3, -0x1.1f4ee4p-1, 0x1.3729c8p-1, 0x1.b6c318p+0, 0x1.bff75p-2, 0x1.67a8f6p-3, 0x1.75d83ap-5, -0x1.33a06cp+0),
#              f5:(0x1.60a558p+0, 0x1.3b5452p-2, -0x1.53a074p+0, 0x1.93bc32p-2, -0x1.056062p-1, 0x1.315fa8p-3, 0x1.8d9c6ap-7, 0x1.c7355ap-4, -0x1.80738ap-1, 0x1.886b2ep-1, -0x1.03a4a6p-1, -0x1.c260c4p-2, -0x1.03ff3ep-1, 0x1.1786b6p-2, 0x1.aed8ecp-2, -0x1.7df33ep-2, -0x1.892d3ap-3, -0x1.3644f4p-2, 0x1.37fbacp-1, 0x1.dfb8f8p-2, 0x1.172d54p+0, -0x1.da3becp-1, 0x1.70806p-1, 0x1.b8bea4p-2, 0x1.a0ad6cp-1, 0x1.591404p-5, -0x1.f5a2c2p-2, -0x1.282a62p-1, 0x1.901ec4p-2, 0x1.85cbbap-4, -0x1.37accep-1, -0x1.a0be62p+0, 0x1.42d7dcp+0, -0x1.ea96dp-3, 0x1.03382ep-1, -0x1.69b8d4p-3, 0x1.092248p-2, 0x1.8be888p-1, 0x1.072448p-2, 0x1.035038p-1, 0x1.2ac8aap-1, -0x1.4eba7ap+0, 0x1.307d6ep-1, -0x1.19f272p-3, -0x1.73a7dep+0, 0x1.f8db66p-3, 0x1.402978p+0, -0x1.11e26ep-3),
#              f6:(0x1.0fe106p-2, -0x1.71bac6p-1, -0x1.16c54p-3, 0x1.22dd1p+0, 0x1.28d96cp+0, -0x1.95b382p-2, -0x1.6df9fp-4, 0x1.55cafcp-3, 0x1.35101ep-2, -0x1.5d7c06p-2, 0x1.9fb3f8p-4, 0x1.b79ebap-3, 0x1.d2d7b2p-1, 0x1.1fe51cp-7, -0x1.f693d8p-3, 0x1.ae5c78p-2, 0x1.e719d4p-2, -0x1.93cc58p-3, 0x1.86142ep-3, 0x1.d20d6ep-2, 0x1.272b96p-1, -0x1.d06cf2p-2, -0x1.c01a0ap-1, 0x1.3beb4ap+0, 0x1.b9d442p-7, -0x1.05e2dap-2, -0x1.3fcb52p-2, -0x1.623a36p-2, -0x1.e45b48p-1, -0x1.11af98p-3, -0x1.d5cd12p-5, 0x1.d383dap-2, -0x1.e393d2p-2, 0x1.3b1eccp-2, 0x1.50e05ap-1, -0x1.9b51d6p-3, -0x1.cb96e4p-1, -0x1.7e3bf6p-3, 0x1.178eeap-1, -0x1.0ea82ep-2, -0x1.f9b95cp-5, -0x1.81d8acp+0, 0x1.26a736p+0, 0x1.f1ec86p-3, -0x1.66b78ep+0, -0x1.6eb13ap-1, 0x1.45a866p-1, -0x1.164504p-1)]
# {OUT} Y_N = [f1:(-0x1.fc5128p-5, 0x1.1d7e1p+1, -0x1.9477ccp-5, 0x1.64f2cep-1, -0x1.484444p+0, 0x1.47e1a6p-2, 0x1.1195c4p-3, 0x1.bb2464p+0, 0x1.d580cap-2, 0x1.b18938p-3, -0x1.7d9ba2p-3, -0x1.efdbf4p-1, 0x1.3f278ep-1, 0x1.09cfe2p-2, -0x1.9c279p-4, -0x1.86f7acp-1, -0x1.7404dcp-2, -0x1.4fc124p+0, 0x1.01de04p-2, -0x1.2f73e4p-1, 0x1.6f592p-2, -0x1.247504p-1, -0x1.8af7fp-1, 0x1.78bd84p-2, 0x1.dde772p-1, 0x1.863ebp-1, 0x1.5a9c62p-2, -0x1.0457fep-1, 0x1.38ecc8p+0, 0x1.66b1e2p+0, 0x1.8819e4p+0, 0x1.0d51c8p+0, -0x1.530a6ep+0, -0x1.fb9262p-2, -0x1.e43874p-2, -0x1.816e54p-1, 0x1.409824p-4, 0x1.c5bd9p-5, 0x1.6a085cp-4, -0x1.85119ep+0, -0x1.205a64p-1, 0x1.514e3p-3, -0x1.d3bbacp-2, 0x1.92f46p-4, -0x1.92d5eap-1, 0x1.31e6a8p-1, -0x1.89f35ep+0, 0x1.de54d6p-2),
#              f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Modem_SCMA::filter(const float32 Y_N1[6x48], float32 Y_N2[6x48])
# {IN}  Y_N1 = [f1:(-0x1.fc5128p-5, 0x1.1d7e1p+1, -0x1.9477ccp-5, 0x1.64f2cep-1, -0x1.484444p+0, 0x1.47e1a6p-2, 0x1.1195c4p-3, 0x1.bb2464p+0, 0x1.d580cap-2, 0x1.b18938p-3, -0x1.7d9ba2p-3, -0x1.efdbf4p-1, 0x1.3f278ep-1, 0x1.09cfe2p-2, -0x1.9c279p-4, -0x1.86f7acp-1, -0x1.7404dcp-2, -0x1.4fc124p+0, 0x1.01de04p-2, -0x1.2f73e4p-1, 0x1.6f592p-2, -0x1.247504p-1, -0x1.8af7fp-1, 0x1.78bd84p-2, 0x1.dde772p-1, 0x1.863ebp-1, 0x1.5a9c62p-2, -0x1.0457fep-1, 0x1.38ecc8p+0, 0x1.66b1e2p+0, 0x1.8819e4p+0, 0x1.0d51c8p+0, -0x1.530a6ep+0, -0x1.fb9262p-2, -0x1.e43874p-2, -0x1.816e54p-1, 0x1.409824p-4, 0x1.c5bd9p-5, 0x1.6a085cp-4, -0x1.85119ep+0, -0x1.205a64p-1, 0x1.514e3p-3, -0x1.d3bbacp-2, 0x1.92f46p-4, -0x1.92d5eap-1, 0x1.31e6a8p-1, -0x1.89f35ep+0, 0x1.de54d6p-2),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# {OUT} Y_N2 = [f1:(-0x1.fc5128p-5, 0x1.1d7e1p+1, -0x1.9477ccp-5, 0x1.64f2cep-1, -0x1.484444p+0, 0x1.47e1a6p-2, 0x1.1195c4p-3, 0x1.bb2464p+0, 0x1.d580cap-2, 0x1.b18938p-3, -0x1.7d9ba2p-3, -0x1.efdbf4p-1, 0x1.3f278ep-1, 0x1.09cfe2p-2, -0x1.9c279p-4, -0x1.86f7acp-1, -0x1.7404dcp-2, -0x1.4fc124p+0, 0x1.01de04p-2, -0x1.2f73e4p-1, 0x1.6f592p-2, -0x1.247504p-1, -0x1.8af7fp-1, 0x1.78bd84p-2, 0x1.dde772p-1, 0x1.863ebp-1, 0x1.5a9c62p-2, -0x1.0457fep-1, 0x1.38ecc8p+0, 0x1.66b1e2p+0, 0x1.8819e4p+0, 0x1.0d51c8p+0, -0x1.530a6ep+0, -0x1.fb9262p-2, -0x1.e43874p-2, -0x1.816e54p-1, 0x1.409824p-4, 0x1.c5bd9p-5, 0x1.6a085cp-4, -0x1.85119ep+0, -0x1.205a64p-1, 0x1.514e3p-3, -0x1.d3bbacp-2, 0x1.92f46p-4, -0x1.92d5eap-1, 0x1.31e6a8p-1, -0x1.89f35ep+0, 0x1.de54d6p-2),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Modem_SCMA::demodulate_wg(const float32 H_N[6x48], const float32 Y_N1[6x48], float32 Y_N2[6x12])
# {IN}  H_N  = [f1:(0x1.207f8ap-1, 0x1.349a86p-1, 0x1.bfeb2ap-2, 0x1.590ee4p-2, 0x1.0f08eep-1, 0x1.8e7b22p-2, -0x1.46cd2ap-3, -0x1.7e88p+0, -0x1.5aa522p-1, 0x1.d7879ap-3, -0x1.5762b4p-1, 0x1.197c48p-1, -0x1.9ee0bap-1, 0x1.96d3f8p-2, 0x1.b2a794p-1, -0x1.4eae6ap-3, -0x1.b16d9p-6, 0x1.3a43d8p-2, -0x1.5027b2p-6, -0x1.a287ccp-1, 0x1.08f904p-2, -0x1.32b04p-4, 0x1.beae2cp-2, 0x1.8a0ebp-4, 0x1.fd0758p-2, -0x1.a3797ap+0, 0x1.8e8002p-2, -0x1.93a2ep-5, 0x1.3fd664p-1, 0x1.1e40dp-2, 0x1.88cfe8p-5, -0x1.c67b2ep-6, 0x1.5a1a9ap-2, -0x1.cef92ep-2, -0x1.9fe216p-2, 0x1.d58c2cp-1, -0x1.7662fcp-1, 0x1.1b88cp-1, -0x1.081422p-1, 0x1.76fda2p-1, -0x1.c686dcp-4, 0x1.4d6cd4p+0, 0x1.b16ab6p-1, -0x1.dc0452p-5, 0x1.8407f6p-3, -0x1.b3143p-6, 0x1.26fbf6p-1, 0x1.fe7e0ap-3),
#               f2:(-0x1.e526a4p-4, -0x1.d784aep-2, 0x1.50bd92p-2, 0x1.725cdap-4, 0x1.7e23f4p-1, -0x1.f85d22p+0, -0x1.0bff64p-1, -0x1.5db42ep-2, 0x1.040d4ep-4, -0x1.6a4012p-1, 0x1.dab4acp-2, 0x1.1ab4c6p-1, 0x1.e998a4p-3, 0x1.16ce76p+0, 0x1.281534p+0, -0x1.06fbc4p-2, 0x1.610b0cp-3, -0x1.cc9b7ap-2, -0x1.8e8544p-2, 0x1.d52174p-3, 0x1.0e0f72p-2, 0x1.0d7f82p-1, 0x1.ebd22cp-1, -0x1.274e76p-1, -0x1.818778p-1, -0x1.7b8646p-3, 0x1.144cb6p-1, 0x1.1f212cp+0, 0x1.792dacp-3, -0x1.118fa2p-1, 0x1.f963a2p-2, -0x1.180fc8p+0, -0x1.6f1144p+0, 0x1.8f00ap-1, -0x1.f16faap-2, -0x1.44e874p-3, 0x1.2678dp-1, -0x1.0d0144p+0, -0x1.11bc2ap-3, 0x1.6ed312p-2, 0x1.03c274p-3, -0x1.10bd44p-1, -0x1.d99a16p-2, -0x1.48ff24p-2, -0x1.abcff4p-4, 0x1.5e2294p-6, -0x1.27e7a4p-6, 0x1.57d1a8p-2),
#               f3:(0x1.1a0242p-1, -0x1.7c837p-1, -0x1.a725ep-4, -0x1.551892p-5, -0x1.9b60d8p-1, -0x1.69a2a2p-1, 0x1.83f2e8p-1, -0x1.188924p-1, -0x1.61d058p-1, -0x1.00517cp-4, 0x1.81e6b4p+0, -0x1.453738p-2, -0x1.86043cp+0, 0x1.4bba6ep-1, 0x1.3af136p-5, 0x1.604c14p+0, 0x1.b56678p-3, 0x1.dbe83ep-1, 0x1.26121cp-2, 0x1.61ada6p-1, 0x1.288b88p-1, -0x1.78a788p-1, 0x1.2cd3cap-4, 0x1.b64b8ep-6, -0x1.4e7704p-2, 0x1.09a90ap+0, 0x1.3cf1f8p-2, 0x1.3564cp-1, -0x1.dc19p-3, -0x1.299f6p-3, -0x1.2772aap-1, -0x1.1b6fbcp+0, -0x1.0f0a8ap-4, 0x1.fed132p-3, 0x1.21fde6p-1, -0x1.1b72b8p+0, 0x1.1ea04cp-2, 0x1.56771ap+0, -0x1.36c45cp-2, -0x1.71e454p-1, -0x1.25659p+0, -0x1.a1879ep-1, -0x1.aa1c78p-2, 0x1.fd7fc4p-4, 0x1.5aa9d2p-1, 0x1.723a02p+0, -0x1.24b7d2p+0, 0x1.515a7p-2),
#               f4:(-0x1.b84dfap+0, -0x1.334ef2p-2, 0x1.bae5d2p-3, 0x1.b63c2ap-3, -0x1.f3e0cp-3, -0x1.0b4d0ap-1, -0x1.4bb272p-1, -0x1.1f5878p-4, -0x1.279cap-4, -0x1.4ed5fp-1, 0x1.60f232p-2, -0x1.82af92p-3, 0x1.b28aaep-2, 0x1.4ecbc8p+0, 0x1.27967ap+0, -0x1.158818p-1, -0x1.3232c4p+0, 0x1.d12a68p-3, -0x1.782866p-4, -0x1.1a334p-1, 0x1.1820cap-3, 0x1.9eab1ap-2, 0x1.271a1ap-1, 0x1.fd534ep-2, 0x1.4c2e2p-5, -0x1.33e966p-2, -0x1.1993e8p-5, 0x1.353e7cp-2, 0x1.c20edap+0, 0x1.07dcc2p+0, 0x1.3c18bap-5, 0x1.5739f2p-1, -0x1.19c166p-1, -0x1.371ea6p-3, -0x1.9647dp-2, 0x1.6aad08p+0, 0x1.40d39ep-2, -0x1.ad6ae6p-8, 0x1.8196dp+0, -0x1.074bf6p-1, -0x1.abebecp-3, -0x1.1f4ee4p-1, 0x1.3729c8p-1, 0x1.b6c318p+0, 0x1.bff75p-2, 0x1.67a8f6p-3, 0x1.75d83ap-5, -0x1.33a06cp+0),
#               f5:(0x1.60a558p+0, 0x1.3b5452p-2, -0x1.53a074p+0, 0x1.93bc32p-2, -0x1.056062p-1, 0x1.315fa8p-3, 0x1.8d9c6ap-7, 0x1.c7355ap-4, -0x1.80738ap-1, 0x1.886b2ep-1, -0x1.03a4a6p-1, -0x1.c260c4p-2, -0x1.03ff3ep-1, 0x1.1786b6p-2, 0x1.aed8ecp-2, -0x1.7df33ep-2, -0x1.892d3ap-3, -0x1.3644f4p-2, 0x1.37fbacp-1, 0x1.dfb8f8p-2, 0x1.172d54p+0, -0x1.da3becp-1, 0x1.70806p-1, 0x1.b8bea4p-2, 0x1.a0ad6cp-1, 0x1.591404p-5, -0x1.f5a2c2p-2, -0x1.282a62p-1, 0x1.901ec4p-2, 0x1.85cbbap-4, -0x1.37accep-1, -0x1.a0be62p+0, 0x1.42d7dcp+0, -0x1.ea96dp-3, 0x1.03382ep-1, -0x1.69b8d4p-3, 0x1.092248p-2, 0x1.8be888p-1, 0x1.072448p-2, 0x1.035038p-1, 0x1.2ac8aap-1, -0x1.4eba7ap+0, 0x1.307d6ep-1, -0x1.19f272p-3, -0x1.73a7dep+0, 0x1.f8db66p-3, 0x1.402978p+0, -0x1.11e26ep-3),
#               f6:(0x1.0fe106p-2, -0x1.71bac6p-1, -0x1.16c54p-3, 0x1.22dd1p+0, 0x1.28d96cp+0, -0x1.95b382p-2, -0x1.6df9fp-4, 0x1.55cafcp-3, 0x1.35101ep-2, -0x1.5d7c06p-2, 0x1.9fb3f8p-4, 0x1.b79ebap-3, 0x1.d2d7b2p-1, 0x1.1fe51cp-7, -0x1.f693d8p-3, 0x1.ae5c78p-2, 0x1.e719d4p-2, -0x1.93cc58p-3, 0x1.86142ep-3, 0x1.d20d6ep-2, 0x1.272b96p-1, -0x1.d06cf2p-2, -0x1.c01a0ap-1, 0x1.3beb4ap+0, 0x1.b9d442p-7, -0x1.05e2dap-2, -0x1.3fcb52p-2, -0x1.623a36p-2, -0x1.e45b48p-1, -0x1.11af98p-3, -0x1.d5cd12p-5, 0x1.d383dap-2, -0x1.e393d2p-2, 0x1.3b1eccp-2, 0x1.50e05ap-1, -0x1.9b51d6p-3, -0x1.cb96e4p-1, -0x1.7e3bf6p-3, 0x1.178eeap-1, -0x1.0ea82ep-2, -0x1.f9b95cp-5, -0x1.81d8acp+0, 0x1.26a736p+0, 0x1.f1ec86p-3, -0x1.66b78ep+0, -0x1.6eb13ap-1, 0x1.45a866p-1, -0x1.164504p-1)]
# {IN}  Y_N1 = [f1:(-0x1.fc5128p-5, 0x1.1d7e1p+1, -0x1.9477ccp-5, 0x1.64f2cep-1, -0x1.484444p+0, 0x1.47e1a6p-2, 0x1.1195c4p-3, 0x1.bb2464p+0, 0x1.d580cap-2, 0x1.b18938p-3, -0x1.7d9ba2p-3, -0x1.efdbf4p-1, 0x1.3f278ep-1, 0x1.09cfe2p-2, -0x1.9c279p-4, -0x1.86f7acp-1, -0x1.7404dcp-2, -0x1.4fc124p+0, 0x1.01de04p-2, -0x1.2f73e4p-1, 0x1.6f592p-2, -0x1.247504p-1, -0x1.8af7fp-1, 0x1.78bd84p-2, 0x1.dde772p-1, 0x1.863ebp-1, 0x1.5a9c62p-2, -0x1.0457fep-1, 0x1.38ecc8p+0, 0x1.66b1e2p+0, 0x1.8819e4p+0, 0x1.0d51c8p+0, -0x1.530a6ep+0, -0x1.fb9262p-2, -0x1.e43874p-2, -0x1.816e54p-1, 0x1.409824p-4, 0x1.c5bd9p-5, 0x1.6a085cp-4, -0x1.85119ep+0, -0x1.205a64p-1, 0x1.514e3p-3, -0x1.d3bbacp-2, 0x1.92f46p-4, -0x1.92d5eap-1, 0x1.31e6a8p-1, -0x1.89f35ep+0, 0x1.de54d6p-2),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# {OUT} Y_N2 = [f1:(-0x1.a48424p+3, -0x1.1ef53cp+2, 0x1.af01eep+1, -0x1.fb9ea4p+1, 0x1.fd8ap-4, -0x1.a04cc6p+1, 0x1.99cf2p-3, -0x1.44cd5p-2, -0x1.e2204cp+1, -0x1.0d1d54p+0, -0x1.b2ae6p+0, -0x1.56e2ap-1),
#               f2:(-0x1.30511ap+2, 0x1.944a1cp+2, 0x1.4f7f28p-1, 0x1.ebfc34p+0, 0x1.22a66ap+1, 0x1.5dd98cp+1, -0x1.12d88ep+2, -0x1.857d7cp+0, 0x1.80eabp+3, 0x1.b13dd4p+1, -0x1.286c7p+0, -0x1.9142p-3),
#               f3:(0x1.c50f14p+2, 0x1.5a886cp+1, -0x1.2c9fe6p+1, 0x1.057148p+3, 0x1.0668fp+3, 0x1.fb9484p+1, -0x1.ff2a28p+2, -0x1.08d354p+0, -0x1.5a385p+0, 0x1.954ed4p+2, -0x1.5be962p+1, 0x1.0bdfd4p+1),
#               f4:(-0x1.aa058p-3, 0x1.0fa608p+2, 0x1.140402p+1, 0x1.5978bp+3, 0x1.9e445p-1, -0x1.1f0cb4p+1, 0x1.8037cap+4, 0x1.8a0b26p+3, -0x1.3f2d1cp+1, 0x1.176ae8p+3, 0x1.a407f8p-1, 0x1.1cdd98p+2),
#               f5:(0x1.3de82p+2, -0x1.b4358p+3, -0x1.60de44p+1, 0x1.c40148p+0, 0x1.69e28ep+1, -0x1.028f18p-1, 0x1.61c8a2p+4, 0x1.fdf17cp+2, -0x1.df2d9ap+1, 0x1.0690ccp+3, 0x1.ab5aep+2, 0x1.b92efp+1),
#               f6:(0x1.744a02p+1, 0x1.2573acp+2, -0x1.2547d8p-1, 0x1.53e71p+0, -0x1.3165b8p+1, 0x1.f6c694p-1, -0x1.6e682p-3, 0x1.909fep+1, 0x1.560a8p-2, -0x1.a0482cp+0, -0x1.17f92cp+2, 0x1.f5a42cp+2)]
# Returned status: 0
#
# Quantizer_standard::process(const float32 Y_N1[6x12], int8 Y_N2[6x12])
# {IN}  Y_N1 = [f1:(-0x1.a48424p+3, -0x1.1ef53cp+2, 0x1.af01eep+1, -0x1.fb9ea4p+1, 0x1.fd8ap-4, -0x1.a04cc6p+1, 0x1.99cf2p-3, -0x1.44cd5p-2, -0x1.e2204cp+1, -0x1.0d1d54p+0, -0x1.b2ae6p+0, -0x1.56e2ap-1),
#               f2:(-0x1.30511ap+2, 0x1.944a1cp+2, 0x1.4f7f28p-1, 0x1.ebfc34p+0, 0x1.22a66ap+1, 0x1.5dd98cp+1, -0x1.12d88ep+2, -0x1.857d7cp+0, 0x1.80eabp+3, 0x1.b13dd4p+1, -0x1.286c7p+0, -0x1.9142p-3),
#               f3:(0x1.c50f14p+2, 0x1.5a886cp+1, -0x1.2c9fe6p+1, 0x1.057148p+3, 0x1.0668fp+3, 0x1.fb9484p+1, -0x1.ff2a28p+2, -0x1.08d354p+0, -0x1.5a385p+0, 0x1.954ed4p+2, -0x1.5be962p+1, 0x1.0bdfd4p+1),
#               f4:(-0x1.aa058p-3, 0x1.0fa608p+2, 0x1.140402p+1, 0x1.5978bp+3, 0x1.9e445p-1, -0x1.1f0cb4p+1, 0x1.8037cap+4, 0x1.8a0b26p+3, -0x1.3f2d1cp+1, 0x1.176ae8p+3, 0x1.a407f8p-1, 0x1.1cdd98p+2),
#               f5:(0x1.3de82p+2, -0x1.b4358p+3, -0x1.60de44p+1, 0x1.c40148p+0, 0x1.69e28ep+1, -0x1.028f18p-1, 0x1.61c8a2p+4, 0x1.fdf17cp+2, -0x1.df2d9ap+1, 0x1.0690ccp+3, 0x1.ab5aep+2, 0x1.b92efp+1),
#               f6:(0x1.744a02p+1, 0x1.2573acp+2, -0x1.2547d8p-1, 0x1.53e71p+0, -0x1.3165b8p+1, 0x1.f6c694p-1, -0x1.6e682p-3, 0x1.909fep+1, 0x1.560a8p-2, -0x1.a0482cp+0, -0x1.17f92cp+2, 0x1.f5a42cp+2)]
# {OUT} Y_N2 = [f1:(0xffffff97, 0xffffffdc, 0x1b, 0xffffffe0, 0x1, 0xffffffe6, 0x2, 0xfffffffd, 0xffffffe2, 0xfffffff8, 0xfffffff2, 0xfffffffb),
#               f2:(0xffffffda, 0x33, 0x5, 0xf, 0x12, 0x16, 0xffffffde, 0xfffffff4, 0x60, 0x1b, 0xfffffff7, 0xfffffffe),
#               f3:(0x39, 0x16, 0xffffffed, 0x41, 0x42, 0x20, 0xffffffc0, 0xfffffff8, 0xfffffff5, 0x33, 0xffffffea, 0x11),
#               f4:(0xfffffffe, 0x22, 0x11, 0x56, 0x6, 0xffffffee, 0x7f, 0x63, 0xffffffec, 0x46, 0x7, 0x24),
#               f5:(0x28, 0xffffff93, 0xffffffea, 0xe, 0x17, 0xfffffffc, 0x7f, 0x40, 0xffffffe2, 0x42, 0x35, 0x1c),
#               f6:(0x17, 0x25, 0xfffffffb, 0xb, 0xffffffed, 0x8, 0xffffffff, 0x19, 0x3, 0xfffffff3, 0xffffffdd, 0x3f)]
# Returned status: 0
#
# Puncturer_NO::depuncture(const int8 Y_N1[6x12], int8 Y_N2[6x12])
# {IN}  Y_N1 = [f1:(0xffffff97, 0xffffffdc, 0x1b, 0xffffffe0, 0x1, 0xffffffe6, 0x2, 0xfffffffd, 0xffffffe2, 0xfffffff8, 0xfffffff2, 0xfffffffb),
#               f2:(0xffffffda, 0x33, 0x5, 0xf, 0x12, 0x16, 0xffffffde, 0xfffffff4, 0x60, 0x1b, 0xfffffff7, 0xfffffffe),
#               f3:(0x39, 0x16, 0xffffffed, 0x41, 0x42, 0x20, 0xffffffc0, 0xfffffff8, 0xfffffff5, 0x33, 0xffffffea, 0x11),
#               f4:(0xfffffffe, 0x22, 0x11, 0x56, 0x6, 0xffffffee, 0x7f, 0x63, 0xffffffec, 0x46, 0x7, 0x24),
#               f5:(0x28, 0xffffff93, 0xffffffea, 0xe, 0x17, 0xfffffffc, 0x7f, 0x40, 0xffffffe2, 0x42, 0x35, 0x1c),
#               f6:(0x17, 0x25, 0xfffffffb, 0xb, 0xffffffed, 0x8, 0xffffffff, 0x19, 0x3, 0xfffffff3, 0xffffffdd, 0x3f)]
# {OUT} Y_N2 = [f1:(0xffffff97, 0xffffffdc, 0x1b, 0xffffffe0, 0x1, 0xffffffe6, 0x2, 0xfffffffd, 0xffffffe2, 0xfffffff8, 0xfffffff2, 0xfffffffb),
#               f2:(0xffffffda, 0x33, 0x5, 0xf, 0x12, 0x16, 0xffffffde, 0xfffffff4, 0x60, 0x1b, 0xfffffff7, 0xfffffffe),
#               f3:(0x39, 0x16, 0xffffffed, 0x41, 0x42, 0x20, 0xffffffc0, 0xfffffff8, 0xfffffff5, 0x33, 0xffffffea, 0x11),
#               f4:(0xfffffffe, 0x22, 0x11, 0x56, 0x6, 0xffffffee, 0x7f, 0x63, 0xffffffec, 0x46, 0x7, 0x24),
#               f5:(0x28, 0xffffff93, 0xffffffea, 0xe, 0x17, 0xfffffffc, 0x7f, 0x40, 0xffffffe2, 0x42, 0x35, 0x1c),
#               f6:(0x17, 0x25, 0xfffffffb, 0xb, 0xffffffed, 0x8, 0xffffffff, 0x19, 0x3, 0xfffffff3, 0xffffffdd, 0x3f)]
# Returned status: 0
#
# Decoder_NO::decode_siho(const int8 Y_N[6x12], int8 V_K[6x12])
# {IN}  Y_N = [f1:(0xffffff97, 0xffffffdc, 0x1b, 0xffffffe0, 0x1, 0xffffffe6, 0x2, 0xfffffffd, 0xffffffe2, 0xfffffff8, 0xfffffff2, 0xfffffffb),
#              f2:(0xffffffda, 0x33, 0x5, 0xf, 0x12, 0x16, 0xffffffde, 0xfffffff4, 0x60, 0x1b, 0xfffffff7, 0xfffffffe),
#              f3:(0x39, 0x16, 0xffffffed, 0x41, 0x42, 0x20, 0xffffffc0, 0xfffffff8, 0xfffffff5, 0x33, 0xffffffea, 0x11),
#              f4:(0xfffffffe, 0x22, 0x11, 0x56, 0x6, 0xffffffee, 0x7f, 0x63, 0xffffffec, 0x46, 0x7, 0x24),
#              f5:(0x28, 0xffffff93, 0xffffffea, 0xe, 0x17, 0xfffffffc, 0x7f, 0x40, 0xffffffe2, 0x42, 0x35, 0x1c),
#              f6:(0x17, 0x25, 0xfffffffb, 0xb, 0xffffffed, 0x8, 0xffffffff, 0x19, 0x3, 0xfffffff3, 0xffffffdd, 0x3f)]
# {OUT} V_K = [f1:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1),
#              f2:(0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#              f3:(0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0),
#              f4:(0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0),
#              f5:(0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0),
#              f6:(0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0)]
# Returned status: 0
#
# CRC_NO::extract(const int8 V_K1[6x12], int8 V_K2[6x12])
# {IN}  V_K1 = [f1:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1),
#               f2:(0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#               f3:(0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0),
#               f4:(0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0),
#               f5:(0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0),
#               f6:(0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0)]
# {OUT} V_K2 = [f1:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1),
#               f2:(0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#               f3:(0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0),
#               f4:(0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0),
#               f5:(0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0),
#               f6:(0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0)]
# Returned status: 0
#
# Monitor_BFER::check_errors(const int8 U[6x12], const int8 V[6x12])
# {IN}  U = [f1:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1),
#            f2:(0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#            f3:(0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0),
#            f4:(0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0),
#            f5:(0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0),
#            f6:(0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0)]
# {IN}  V = [f1:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1),
#            f2:(0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#            f3:(0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0),
#            f4:(0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0),
#            f5:(0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0),
#            f6:(0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0)]
# Returned status: 6
#
# -------------------------------
# New communication (nÂ°1)
# -------------------------------
#
# Source_random::generate(int8 U_K[6x12])
# {OUT} U_K = [f1:(0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0),
#              f2:(0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0),
#              f3:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1),
#              f4:(0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0),
#              f5:(0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0),
#              f6:(0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0)]
# Returned status: 0
#
# CRC_NO::build(const int8 U_K1[6x12], int8 U_K2[6x12])
# {IN}  U_K1 = [f1:(0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0),
#               f2:(0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0),
#               f3:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1),
#               f4:(0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0),
#               f5:(0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0),
#               f6:(0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0)]
# {OUT} U_K2 = [f1:(0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0),
#               f2:(0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0),
#               f3:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1),
#               f4:(0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0),
#               f5:(0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0),
#               f6:(0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0)]
# Returned status: 0
#
# Encoder_NO::encode(const int8 U_K[6x12], int8 X_N[6x12])
# {IN}  U_K = [f1:(0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0),
#              f2:(0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0),
#              f3:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1),
#              f4:(0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0),
#              f5:(0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0),
#              f6:(0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0)]
# {OUT} X_N = [f1:(0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0),
#              f2:(0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0),
#              f3:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1),
#              f4:(0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0),
#              f5:(0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0),
#              f6:(0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0)]
# Returned status: 0
#
# Puncturer_NO::puncture(const int8 X_N1[6x12], int8 X_N2[6x12])
# {IN}  X_N1 = [f1:(0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0),
#               f2:(0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0),
#               f3:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1),
#               f4:(0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0),
#               f5:(0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0),
#               f6:(0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0)]
# {OUT} X_N2 = [f1:(0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0),
#               f2:(0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0),
#               f3:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1),
#               f4:(0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0),
#               f5:(0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0),
#               f6:(0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0)]
# Returned status: 0
#
# Modem_SCMA::modulate(const int8 X_N1[6x12], float32 X_N2[6x48])
# {IN}  X_N1 = [f1:(0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0),
#               f2:(0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0),
#               f3:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1),
#               f4:(0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0),
#               f5:(0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0),
#               f6:(0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0)]
# {OUT} X_N2 = [f1:(0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0),
#               f2:(0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0),
#               f3:(-0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1),
#               f5:(0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3),
#               f6:(0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Channel_Rayleigh_LLR::add_noise_wg(const float32 X_N[6x48], float32 H_N[6x48], float32 Y_N[6x48])
# {IN}  X_N = [f1:(0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0),
#              f2:(0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0),
#              f3:(-0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1),
#              f5:(0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3),
#              f6:(0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0)]
# {OUT} H_N = [f1:(-0x1.c9df1ap-3, 0x1.9d2506p-1, 0x1.8143d6p-2, -0x1.83208cp-1, 0x1.499c46p+0, -0x1.240c1ep-2, -0x1.1b9ee4p-3, -0x1.27f59ap+0, 0x1.8bd31cp-2, 0x1.85a234p+0, 0x1.bb8102p-5, 0x1.0be25ap-1, 0x1.65c8a8p-1, -0x1.1e8926p-2, 0x1.ab3224p-1, -0x1.992b2ap-7, 0x1.e1997ep-2, -0x1.f9f44p-2, 0x1.5641f8p-2, -0x1.97667p+0, -0x1.a15cc8p-4, -0x1.dae8bap-3, -0x1.6b5fe6p-2, -0x1.28c8a6p+0, -0x1.a0d8c6p-1, -0x1.e7bb18p-3, -0x1.77ed9p+0, -0x1.493e72p-1, -0x1.67e762p+0, -0x1.3cc0a6p+0, -0x1.afb02cp+0, 0x1.8db92p-4, 0x1.869f8ap-2, -0x1.09dd24p-7, -0x1.f16344p-1, 0x1.c6dabep-3, -0x1.71905ep+0, -0x1.dbfba8p-1, -0x1.52a7a8p-2, 0x1.4cbd8cp-1, 0x1.e77e3ep-2, 0x1.1bd6ccp+0, 0x1.6f4ebap+0, -0x1.8e3dp-3, -0x1.7fa4b6p-1, 0x1.87bc4ep-2, -0x1.1437ap+0, -0x1.dbd2ep-2),
#              f2:(-0x1.617e0cp-3, 0x1.0f379ep-1, -0x1.690804p-3, -0x1.55003ep-5, 0x1.d5b618p-3, 0x1.519d22p-1, -0x1.70c66ep-1, -0x1.edd62p-5, 0x1.e46bc2p-2, -0x1.b7786p-1, -0x1.feedb8p-6, -0x1.25c5bep-2, 0x1.9f96a4p-2, -0x1.00d56p-1, -0x1.3562c8p+0, 0x1.bd8b46p+0, 0x1.d681dep-1, 0x1.0715a4p-1, 0x1.e540f6p-2, -0x1.17230ap-3, 0x1.80fda8p-8, 0x1.34d7bep+0, -0x1.7baf92p-4, -0x1.3f2e0cp+0, 0x1.b11e1cp-1, 0x1.123904p-1, 0x1.1316a4p-4, 0x1.c42678p-3, -0x1.0cf3p-6, -0x1.77791ap-2, -0x1.c0cbfap-2, -0x1.d8cec8p-5, -0x1.54258ep-2, -0x1.212f0ep+1, -0x1.018f06p-3, 0x1.19edcp-1, -0x1.b2112p-1, 0x1.5dbc88p-2, -0x1.d689acp-1, -0x1.c140fep-3, -0x1.9a9c4ep-1, -0x1.484ffcp-3, 0x1.19319p-1, 0x1.ec9714p-3, -0x1.7ed066p-1, 0x1.a8fa02p-4, 0x1.f4ad74p-4, -0x1.d1095p+0),
#              f3:(0x1.67026ep-1, -0x1.21ec7p+0, -0x1.113c4cp+0, 0x1.20b11p-2, 0x1.2ee67ep-2, 0x1.61dccap-3, -0x1.9e3886p+0, -0x1.7a0744p-1, 0x1.5338bep-1, 0x1.068094p+0, 0x1.ffe874p-1, -0x1.b79c9p+0, 0x1.4aa198p-1, 0x1.c85294p-6, -0x1.65848ep-1, 0x1.92d3c2p-6, -0x1.bce20ap-1, -0x1.670cdcp-2, -0x1.fb83fcp+0, -0x1.07995ep-2, -0x1.695254p-3, -0x1.96c26ep-4, 0x1.263522p-5, -0x1.6f0c4ap-3, 0x1.7200a4p-2, 0x1.6d6e62p-4, 0x1.248c7p+0, -0x1.9efdf6p-2, -0x1.026084p+0, 0x1.870f84p-1, 0x1.9a2eap-2, 0x1.79b8e2p-2, -0x1.34fc38p+0, 0x1.5fd4ep+0, -0x1.2f1848p-3, -0x1.adf0fep-5, -0x1.2705e4p+0, 0x1.669bccp-3, -0x1.81b8a4p-1, -0x1.02b33ap+0, -0x1.3d599ap-1, -0x1.ed42c6p-3, -0x1.2b41d4p+0, 0x1.606464p+0, 0x1.3d7e86p-4, 0x1.aad9c6p-3, 0x1.05847ap+0, 0x1.4516e8p-1),
#              f4:(-0x1.85c54cp-1, 0x1.0fe53cp+0, -0x1.d2cafep-2, 0x1.6eefcap-5, -0x1.51586cp-2, 0x1.dca318p-2, 0x1.fcc42ap-8, -0x1.cef8bap-1, -0x1.d70e1cp-2, -0x1.485196p-6, -0x1.270db6p-2, 0x1.acfe0cp-4, -0x1.0187f8p-2, 0x1.eaabp-3, -0x1.223c3cp-3, 0x1.bc7106p-3, 0x1.6dd57ap-2, -0x1.7d9834p-2, -0x1.81c1fp-1, 0x1.31c48ap+0, 0x1.b2ce7ep-1, -0x1.818f68p-3, 0x1.0ede6cp-2, -0x1.2b729p-1, 0x1.7eb482p-2, 0x1.f0e384p-2, 0x1.907144p-1, 0x1.39a33ep+1, -0x1.58269ap-3, 0x1.0c2c2ap-1, 0x1.5090d4p-4, 0x1.27bc5ap-4, -0x1.1bd5e4p+0, -0x1.69fe12p-1, 0x1.0be918p-4, -0x1.5d3492p-6, 0x1.44ec02p+0, 0x1.cfc29ep-1, -0x1.023ab8p-1, 0x1.a9377cp+0, -0x1.3a6728p-1, 0x1.9a1948p-1, -0x1.4257b2p-1, 0x1.daa4b8p-2, -0x1.302646p-3, -0x1.353812p-1, -0x1.9d207ep-1, -0x1.60391cp-2),
#              f5:(-0x1.243f5ap+0, -0x1.eb045cp-4, -0x1.33ebf6p-1, -0x1.dbfeacp-2, -0x1.ade9bp-1, 0x1.e2679ap-1, 0x1.79046ap-3, 0x1.fa96cep-2, 0x1.e33246p-2, 0x1.540428p-2, -0x1.5a526ep-3, 0x1.cdff92p-3, 0x1.609644p+0, -0x1.a4588ep-3, -0x1.f2768ep-1, 0x1.795a3ep-1, 0x1.ce1604p-4, 0x1.8f25a8p-1, 0x1.17c3f6p-1, -0x1.0983bep-1, 0x1.61ee1p-2, 0x1.aa49ap-5, -0x1.ffd02p-1, -0x1.f6845ep-4, 0x1.154d88p-2, 0x1.b475ep-3, -0x1.d1078ep-1, 0x1.6572p-3, -0x1.3a155p+0, -0x1.5f2ec2p+0, -0x1.408112p-1, -0x1.0af2e8p+0, 0x1.620848p-1, -0x1.d3aa52p-3, 0x1.424a48p+0, -0x1.9f839cp+0, 0x1.939eacp-1, -0x1.32954ap-2, -0x1.2cb8ecp+0, -0x1.3512d8p-2, 0x1.14dbd8p+0, -0x1.6694f4p-3, 0x1.6d17ap+0, -0x1.3ab6cep-2, -0x1.dddd4p-3, 0x1.7302bap-1, 0x1.4fd9e2p-1, -0x1.fe84aep-4),
#              f6:(0x1.89913cp-1, 0x1.5b314cp-2, 0x1.c600c6p-2, 0x1.634a64p-1, 0x1.0e26cp-3, -0x1.49a63cp-4, 0x1.b51e22p-4, 0x1.896fe4p-4, 0x1.71fcp-2, -0x1.3886e8p-1, 0x1.be7f7ap-2, 0x1.8f9f7ap-1, -0x1.620a78p-1, -0x1.2b644p-1, 0x1.19ebe4p-2, -0x1.73d66ap-4, 0x1.b3cabp-2, -0x1.2af7p-1, -0x1.6d30a6p-5, 0x1.071114p-1, -0x1.abf89ap-1, 0x1.60a7d2p-1, -0x1.277e94p-6, -0x1.d8bfe6p-1, -0x1.51cb42p-2, -0x1.e416dcp-3, 0x1.ced392p-2, 0x1.79be76p-2, 0x1.bb2cd2p-1, 0x1.2038a2p+0, -0x1.d8bbp-1, -0x1.d7a6aep-2, -0x1.47766ap+0, -0x1.43adecp-1, -0x1.03f2ccp+1, 0x1.c0e5aap-1, 0x1.4e1612p-2, 0x1.6e7d22p-5, 0x1.1305cp-2, -0x1.d9b2f2p-2, -0x1.72000ep-1, -0x1.11bad4p-2, -0x1.975d44p-2, 0x1.42eba4p+0, -0x1.e103aap+0, 0x1.98ee9p-1, -0x1.85f83ep-1, -0x1.87cebep-2)]
# {OUT} Y_N = [f1:(-0x1.496c92p-3, 0x1.4a0324p-2, 0x1.7e5908p-4, 0x1.f0e614p-1, -0x1.214bd4p-1, 0x1.b81648p-1, -0x1.f98426p-3, -0x1.d224fcp-1, 0x1.061e12p+0, 0x1.a9d49cp-2, -0x1.9b68f2p-2, 0x1.16031ap-2, -0x1.36816p-5, -0x1.9eb9cp-6, 0x1.368f28p-2, 0x1.484798p-2, 0x1.7848acp+0, -0x1.81bd2p-2, -0x1.435314p-3, 0x1.2eb52p-1, -0x1.b124a6p-2, -0x1.cdbafp-6, -0x1.8a2fb8p-1, 0x1.63b1cap-1, -0x1.9051dp-5, 0x1.e106ccp-2, 0x1.afd694p-3, -0x1.243b0ap-2, 0x1.13fc8p-3, -0x1.76e66p-7, 0x1.09858ap+0, -0x1.f4e36p-6, -0x1.b27fe8p-3, 0x1.76c48ap+1, -0x1.f95b76p-2, -0x1.320d4cp-3, -0x1.1dcca4p+0, -0x1.e7f2eap-1, -0x1.c996aep-2, -0x1.6bdaa4p-3, 0x1.220bacp-2, -0x1.ac5f8cp-1, -0x1.afb148p+0, -0x1.c0ae9p-2, 0x1.c3f502p-2, 0x1.61c68cp-1, 0x1.225062p-4, -0x1.deaap-4),
#              f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Modem_SCMA::filter(const float32 Y_N1[6x48], float32 Y_N2[6x48])
# {IN}  Y_N1 = [f1:(-0x1.496c92p-3, 0x1.4a0324p-2, 0x1.7e5908p-4, 0x1.f0e614p-1, -0x1.214bd4p-1, 0x1.b81648p-1, -0x1.f98426p-3, -0x1.d224fcp-1, 0x1.061e12p+0, 0x1.a9d49cp-2, -0x1.9b68f2p-2, 0x1.16031ap-2, -0x1.36816p-5, -0x1.9eb9cp-6, 0x1.368f28p-2, 0x1.484798p-2, 0x1.7848acp+0, -0x1.81bd2p-2, -0x1.435314p-3, 0x1.2eb52p-1, -0x1.b124a6p-2, -0x1.cdbafp-6, -0x1.8a2fb8p-1, 0x1.63b1cap-1, -0x1.9051dp-5, 0x1.e106ccp-2, 0x1.afd694p-3, -0x1.243b0ap-2, 0x1.13fc8p-3, -0x1.76e66p-7, 0x1.09858ap+0, -0x1.f4e36p-6, -0x1.b27fe8p-3, 0x1.76c48ap+1, -0x1.f95b76p-2, -0x1.320d4cp-3, -0x1.1dcca4p+0, -0x1.e7f2eap-1, -0x1.c996aep-2, -0x1.6bdaa4p-3, 0x1.220bacp-2, -0x1.ac5f8cp-1, -0x1.afb148p+0, -0x1.c0ae9p-2, 0x1.c3f502p-2, 0x1.61c68cp-1, 0x1.225062p-4, -0x1.deaap-4),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# {OUT} Y_N2 = [f1:(-0x1.496c92p-3, 0x1.4a0324p-2, 0x1.7e5908p-4, 0x1.f0e614p-1, -0x1.214bd4p-1, 0x1.b81648p-1, -0x1.f98426p-3, -0x1.d224fcp-1, 0x1.061e12p+0, 0x1.a9d49cp-2, -0x1.9b68f2p-2, 0x1.16031ap-2, -0x1.36816p-5, -0x1.9eb9cp-6, 0x1.368f28p-2, 0x1.484798p-2, 0x1.7848acp+0, -0x1.81bd2p-2, -0x1.435314p-3, 0x1.2eb52p-1, -0x1.b124a6p-2, -0x1.cdbafp-6, -0x1.8a2fb8p-1, 0x1.63b1cap-1, -0x1.9051dp-5, 0x1.e106ccp-2, 0x1.afd694p-3, -0x1.243b0ap-2, 0x1.13fc8p-3, -0x1.76e66p-7, 0x1.09858ap+0, -0x1.f4e36p-6, -0x1.b27fe8p-3, 0x1.76c48ap+1, -0x1.f95b76p-2, -0x1.320d4cp-3, -0x1.1dcca4p+0, -0x1.e7f2eap-1, -0x1.c996aep-2, -0x1.6bdaa4p-3, 0x1.220bacp-2, -0x1.ac5f8cp-1, -0x1.afb148p+0, -0x1.c0ae9p-2, 0x1.c3f502p-2, 0x1.61c68cp-1, 0x1.225062p-4, -0x1.deaap-4),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Modem_SCMA::demodulate_wg(const float32 H_N[6x48], const float32 Y_N1[6x48], float32 Y_N2[6x12])
# {IN}  H_N  = [f1:(-0x1.c9df1ap-3, 0x1.9d2506p-1, 0x1.8143d6p-2, -0x1.83208cp-1, 0x1.499c46p+0, -0x1.240c1ep-2, -0x1.1b9ee4p-3, -0x1.27f59ap+0, 0x1.8bd31cp-2, 0x1.85a234p+0, 0x1.bb8102p-5, 0x1.0be25ap-1, 0x1.65c8a8p-1, -0x1.1e8926p-2, 0x1.ab3224p-1, -0x1.992b2ap-7, 0x1.e1997ep-2, -0x1.f9f44p-2, 0x1.5641f8p-2, -0x1.97667p+0, -0x1.a15cc8p-4, -0x1.dae8bap-3, -0x1.6b5fe6p-2, -0x1.28c8a6p+0, -0x1.a0d8c6p-1, -0x1.e7bb18p-3, -0x1.77ed9p+0, -0x1.493e72p-1, -0x1.67e762p+0, -0x1.3cc0a6p+0, -0x1.afb02cp+0, 0x1.8db92p-4, 0x1.869f8ap-2, -0x1.09dd24p-7, -0x1.f16344p-1, 0x1.c6dabep-3, -0x1.71905ep+0, -0x1.dbfba8p-1, -0x1.52a7a8p-2, 0x1.4cbd8cp-1, 0x1.e77e3ep-2, 0x1.1bd6ccp+0, 0x1.6f4ebap+0, -0x1.8e3dp-3, -0x1.7fa4b6p-1, 0x1.87bc4ep-2, -0x1.1437ap+0, -0x1.dbd2ep-2),
#               f2:(-0x1.617e0cp-3, 0x1.0f379ep-1, -0x1.690804p-3, -0x1.55003ep-5, 0x1.d5b618p-3, 0x1.519d22p-1, -0x1.70c66ep-1, -0x1.edd62p-5, 0x1.e46bc2p-2, -0x1.b7786p-1, -0x1.feedb8p-6, -0x1.25c5bep-2, 0x1.9f96a4p-2, -0x1.00d56p-1, -0x1.3562c8p+0, 0x1.bd8b46p+0, 0x1.d681dep-1, 0x1.0715a4p-1, 0x1.e540f6p-2, -0x1.17230ap-3, 0x1.80fda8p-8, 0x1.34d7bep+0, -0x1.7baf92p-4, -0x1.3f2e0cp+0, 0x1.b11e1cp-1, 0x1.123904p-1, 0x1.1316a4p-4, 0x1.c42678p-3, -0x1.0cf3p-6, -0x1.77791ap-2, -0x1.c0cbfap-2, -0x1.d8cec8p-5, -0x1.54258ep-2, -0x1.212f0ep+1, -0x1.018f06p-3, 0x1.19edcp-1, -0x1.b2112p-1, 0x1.5dbc88p-2, -0x1.d689acp-1, -0x1.c140fep-3, -0x1.9a9c4ep-1, -0x1.484ffcp-3, 0x1.19319p-1, 0x1.ec9714p-3, -0x1.7ed066p-1, 0x1.a8fa02p-4, 0x1.f4ad74p-4, -0x1.d1095p+0),
#               f3:(0x1.67026ep-1, -0x1.21ec7p+0, -0x1.113c4cp+0, 0x1.20b11p-2, 0x1.2ee67ep-2, 0x1.61dccap-3, -0x1.9e3886p+0, -0x1.7a0744p-1, 0x1.5338bep-1, 0x1.068094p+0, 0x1.ffe874p-1, -0x1.b79c9p+0, 0x1.4aa198p-1, 0x1.c85294p-6, -0x1.65848ep-1, 0x1.92d3c2p-6, -0x1.bce20ap-1, -0x1.670cdcp-2, -0x1.fb83fcp+0, -0x1.07995ep-2, -0x1.695254p-3, -0x1.96c26ep-4, 0x1.263522p-5, -0x1.6f0c4ap-3, 0x1.7200a4p-2, 0x1.6d6e62p-4, 0x1.248c7p+0, -0x1.9efdf6p-2, -0x1.026084p+0, 0x1.870f84p-1, 0x1.9a2eap-2, 0x1.79b8e2p-2, -0x1.34fc38p+0, 0x1.5fd4ep+0, -0x1.2f1848p-3, -0x1.adf0fep-5, -0x1.2705e4p+0, 0x1.669bccp-3, -0x1.81b8a4p-1, -0x1.02b33ap+0, -0x1.3d599ap-1, -0x1.ed42c6p-3, -0x1.2b41d4p+0, 0x1.606464p+0, 0x1.3d7e86p-4, 0x1.aad9c6p-3, 0x1.05847ap+0, 0x1.4516e8p-1),
#               f4:(-0x1.85c54cp-1, 0x1.0fe53cp+0, -0x1.d2cafep-2, 0x1.6eefcap-5, -0x1.51586cp-2, 0x1.dca318p-2, 0x1.fcc42ap-8, -0x1.cef8bap-1, -0x1.d70e1cp-2, -0x1.485196p-6, -0x1.270db6p-2, 0x1.acfe0cp-4, -0x1.0187f8p-2, 0x1.eaabp-3, -0x1.223c3cp-3, 0x1.bc7106p-3, 0x1.6dd57ap-2, -0x1.7d9834p-2, -0x1.81c1fp-1, 0x1.31c48ap+0, 0x1.b2ce7ep-1, -0x1.818f68p-3, 0x1.0ede6cp-2, -0x1.2b729p-1, 0x1.7eb482p-2, 0x1.f0e384p-2, 0x1.907144p-1, 0x1.39a33ep+1, -0x1.58269ap-3, 0x1.0c2c2ap-1, 0x1.5090d4p-4, 0x1.27bc5ap-4, -0x1.1bd5e4p+0, -0x1.69fe12p-1, 0x1.0be918p-4, -0x1.5d3492p-6, 0x1.44ec02p+0, 0x1.cfc29ep-1, -0x1.023ab8p-1, 0x1.a9377cp+0, -0x1.3a6728p-1, 0x1.9a1948p-1, -0x1.4257b2p-1, 0x1.daa4b8p-2, -0x1.302646p-3, -0x1.353812p-1, -0x1.9d207ep-1, -0x1.60391cp-2),
#               f5:(-0x1.243f5ap+0, -0x1.eb045cp-4, -0x1.33ebf6p-1, -0x1.dbfeacp-2, -0x1.ade9bp-1, 0x1.e2679ap-1, 0x1.79046ap-3, 0x1.fa96cep-2, 0x1.e33246p-2, 0x1.540428p-2, -0x1.5a526ep-3, 0x1.cdff92p-3, 0x1.609644p+0, -0x1.a4588ep-3, -0x1.f2768ep-1, 0x1.795a3ep-1, 0x1.ce1604p-4, 0x1.8f25a8p-1, 0x1.17c3f6p-1, -0x1.0983bep-1, 0x1.61ee1p-2, 0x1.aa49ap-5, -0x1.ffd02p-1, -0x1.f6845ep-4, 0x1.154d88p-2, 0x1.b475ep-3, -0x1.d1078ep-1, 0x1.6572p-3, -0x1.3a155p+0, -0x1.5f2ec2p+0, -0x1.408112p-1, -0x1.0af2e8p+0, 0x1.620848p-1, -0x1.d3aa52p-3, 0x1.424a48p+0, -0x1.9f839cp+0, 0x1.939eacp-1, -0x1.32954ap-2, -0x1.2cb8ecp+0, -0x1.3512d8p-2, 0x1.14dbd8p+0, -0x1.6694f4p-3, 0x1.6d17ap+0, -0x1.3ab6cep-2, -0x1.dddd4p-3, 0x1.7302bap-1, 0x1.4fd9e2p-1, -0x1.fe84aep-4),
#               f6:(0x1.89913cp-1, 0x1.5b314cp-2, 0x1.c600c6p-2, 0x1.634a64p-1, 0x1.0e26cp-3, -0x1.49a63cp-4, 0x1.b51e22p-4, 0x1.896fe4p-4, 0x1.71fcp-2, -0x1.3886e8p-1, 0x1.be7f7ap-2, 0x1.8f9f7ap-1, -0x1.620a78p-1, -0x1.2b644p-1, 0x1.19ebe4p-2, -0x1.73d66ap-4, 0x1.b3cabp-2, -0x1.2af7p-1, -0x1.6d30a6p-5, 0x1.071114p-1, -0x1.abf89ap-1, 0x1.60a7d2p-1, -0x1.277e94p-6, -0x1.d8bfe6p-1, -0x1.51cb42p-2, -0x1.e416dcp-3, 0x1.ced392p-2, 0x1.79be76p-2, 0x1.bb2cd2p-1, 0x1.2038a2p+0, -0x1.d8bbp-1, -0x1.d7a6aep-2, -0x1.47766ap+0, -0x1.43adecp-1, -0x1.03f2ccp+1, 0x1.c0e5aap-1, 0x1.4e1612p-2, 0x1.6e7d22p-5, 0x1.1305cp-2, -0x1.d9b2f2p-2, -0x1.72000ep-1, -0x1.11bad4p-2, -0x1.975d44p-2, 0x1.42eba4p+0, -0x1.e103aap+0, 0x1.98ee9p-1, -0x1.85f83ep-1, -0x1.87cebep-2)]
# {IN}  Y_N1 = [f1:(-0x1.496c92p-3, 0x1.4a0324p-2, 0x1.7e5908p-4, 0x1.f0e614p-1, -0x1.214bd4p-1, 0x1.b81648p-1, -0x1.f98426p-3, -0x1.d224fcp-1, 0x1.061e12p+0, 0x1.a9d49cp-2, -0x1.9b68f2p-2, 0x1.16031ap-2, -0x1.36816p-5, -0x1.9eb9cp-6, 0x1.368f28p-2, 0x1.484798p-2, 0x1.7848acp+0, -0x1.81bd2p-2, -0x1.435314p-3, 0x1.2eb52p-1, -0x1.b124a6p-2, -0x1.cdbafp-6, -0x1.8a2fb8p-1, 0x1.63b1cap-1, -0x1.9051dp-5, 0x1.e106ccp-2, 0x1.afd694p-3, -0x1.243b0ap-2, 0x1.13fc8p-3, -0x1.76e66p-7, 0x1.09858ap+0, -0x1.f4e36p-6, -0x1.b27fe8p-3, 0x1.76c48ap+1, -0x1.f95b76p-2, -0x1.320d4cp-3, -0x1.1dcca4p+0, -0x1.e7f2eap-1, -0x1.c996aep-2, -0x1.6bdaa4p-3, 0x1.220bacp-2, -0x1.ac5f8cp-1, -0x1.afb148p+0, -0x1.c0ae9p-2, 0x1.c3f502p-2, 0x1.61c68cp-1, 0x1.225062p-4, -0x1.deaap-4),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# {OUT} Y_N2 = [f1:(0x1.949fc2p+2, 0x1.0b79e4p+1, 0x1.d307f8p+1, -0x1.664f6cp+0, -0x1.1539acp+2, -0x1.65d036p+1, -0x1.35962p+2, -0x1.dfcb9p+0, 0x1.7ec5p-2, -0x1.6ca8acp+1, -0x1.6926ccp+2, 0x1.69e2dap+3),
#               f2:(0x1.56a8cp+0, -0x1.519b68p+1, -0x1.0887dp+0, 0x1.177c9p-3, 0x1.4d188cp+1, -0x1.20456p-1, 0x1.8859fp+0, -0x1.33e6ap-3, -0x1.6e42fp+3, -0x1.35d464p+2, -0x1.dea908p+1, 0x1.001cf4p+1),
#               f3:(-0x1.9968p-4, 0x1.71cac4p+1, -0x1.7a10aep+3, -0x1.867b7ap+2, 0x1.daf49ap+1, 0x1.4e091ap+1, 0x1.4cdd28p+0, 0x1.5a7dbp+1, -0x1.d84e08p+2, -0x1.8a1098p+0, 0x1.467f88p+1, -0x1.5fb44p+2),
#               f4:(0x1.8bbd3ap+1, 0x1.66010ap+1, -0x1.830508p-2, 0x1.bcb5ap-3, -0x1.86ff1p+1, 0x1.71628p+1, 0x1.a03f6p-2, -0x1.3255p-6, -0x1.9bc06ep+3, -0x1.7c1f2p+3, 0x1.eed6ep-3, -0x1.5cccf4p-1),
#               f5:(0x1.b5f6p-3, 0x1.3a658p-4, -0x1.a4a1b4p+0, 0x1.067bfcp+0, -0x1.8e910cp+2, 0x1.2f9238p+0, 0x1.cf0f4p-4, -0x1.25df6p-2, -0x1.42e3ap+0, 0x1.2219bcp+0, -0x1.053ba8p+0, 0x1.833f0ep+2),
#               f6:(0x1.6ff218p+1, 0x1.3530ep-1, -0x1.78c578p+1, -0x1.383e42p+0, 0x1.cd14e4p+1, -0x1.adcap-5, 0x1.af2f9cp+0, 0x1.b433c4p+0, -0x1.ed80ap-3, 0x1.013eep-2, 0x1.638bc8p+2, 0x1.e6d35ep+2)]
# Returned status: 0
#
# Quantizer_standard::process(const float32 Y_N1[6x12], int8 Y_N2[6x12])
# {IN}  Y_N1 = [f1:(0x1.949fc2p+2, 0x1.0b79e4p+1, 0x1.d307f8p+1, -0x1.664f6cp+0, -0x1.1539acp+2, -0x1.65d036p+1, -0x1.35962p+2, -0x1.dfcb9p+0, 0x1.7ec5p-2, -0x1.6ca8acp+1, -0x1.6926ccp+2, 0x1.69e2dap+3),
#               f2:(0x1.56a8cp+0, -0x1.519b68p+1, -0x1.0887dp+0, 0x1.177c9p-3, 0x1.4d188cp+1, -0x1.20456p-1, 0x1.8859fp+0, -0x1.33e6ap-3, -0x1.6e42fp+3, -0x1.35d464p+2, -0x1.dea908p+1, 0x1.001cf4p+1),
#               f3:(-0x1.9968p-4, 0x1.71cac4p+1, -0x1.7a10aep+3, -0x1.867b7ap+2, 0x1.daf49ap+1, 0x1.4e091ap+1, 0x1.4cdd28p+0, 0x1.5a7dbp+1, -0x1.d84e08p+2, -0x1.8a1098p+0, 0x1.467f88p+1, -0x1.5fb44p+2),
#               f4:(0x1.8bbd3ap+1, 0x1.66010ap+1, -0x1.830508p-2, 0x1.bcb5ap-3, -0x1.86ff1p+1, 0x1.71628p+1, 0x1.a03f6p-2, -0x1.3255p-6, -0x1.9bc06ep+3, -0x1.7c1f2p+3, 0x1.eed6ep-3, -0x1.5cccf4p-1),
#               f5:(0x1.b5f6p-3, 0x1.3a658p-4, -0x1.a4a1b4p+0, 0x1.067bfcp+0, -0x1.8e910cp+2, 0x1.2f9238p+0, 0x1.cf0f4p-4, -0x1.25df6p-2, -0x1.42e3ap+0, 0x1.2219bcp+0, -0x1.053ba8p+0, 0x1.833f0ep+2),
#               f6:(0x1.6ff218p+1, 0x1.3530ep-1, -0x1.78c578p+1, -0x1.383e42p+0, 0x1.cd14e4p+1, -0x1.adcap-5, 0x1.af2f9cp+0, 0x1.b433c4p+0, -0x1.ed80ap-3, 0x1.013eep-2, 0x1.638bc8p+2, 0x1.e6d35ep+2)]
# {OUT} Y_N2 = [f1:(0x33, 0x11, 0x1d, 0xfffffff5, 0xffffffdd, 0xffffffea, 0xffffffd9, 0xfffffff1, 0x3, 0xffffffe9, 0xffffffd3, 0x5a),
#               f2:(0xb, 0xffffffeb, 0xfffffff8, 0x1, 0x15, 0xfffffffb, 0xc, 0xffffffff, 0xffffffa4, 0xffffffd9, 0xffffffe2, 0x10),
#               f3:(0xffffffff, 0x17, 0xffffffa1, 0xffffffcf, 0x1e, 0x15, 0xa, 0x16, 0xffffffc5, 0xfffffff4, 0x14, 0xffffffd4),
#               f4:(0x19, 0x16, 0xfffffffd, 0x2, 0xffffffe8, 0x17, 0x3, 0x0, 0xffffff99, 0xffffffa1, 0x2, 0xfffffffb),
#               f5:(0x2, 0x1, 0xfffffff3, 0x8, 0xffffffce, 0x9, 0x1, 0xfffffffe, 0xfffffff6, 0x9, 0xfffffff8, 0x30),
#               f6:(0x17, 0x5, 0xffffffe8, 0xfffffff6, 0x1d, 0x0, 0xd, 0xe, 0xfffffffe, 0x2, 0x2c, 0x3d)]
# Returned status: 0
#
# Puncturer_NO::depuncture(const int8 Y_N1[6x12], int8 Y_N2[6x12])
# {IN}  Y_N1 = [f1:(0x33, 0x11, 0x1d, 0xfffffff5, 0xffffffdd, 0xffffffea, 0xffffffd9, 0xfffffff1, 0x3, 0xffffffe9, 0xffffffd3, 0x5a),
#               f2:(0xb, 0xffffffeb, 0xfffffff8, 0x1, 0x15, 0xfffffffb, 0xc, 0xffffffff, 0xffffffa4, 0xffffffd9, 0xffffffe2, 0x10),
#               f3:(0xffffffff, 0x17, 0xffffffa1, 0xffffffcf, 0x1e, 0x15, 0xa, 0x16, 0xffffffc5, 0xfffffff4, 0x14, 0xffffffd4),
#               f4:(0x19, 0x16, 0xfffffffd, 0x2, 0xffffffe8, 0x17, 0x3, 0x0, 0xffffff99, 0xffffffa1, 0x2, 0xfffffffb),
#               f5:(0x2, 0x1, 0xfffffff3, 0x8, 0xffffffce, 0x9, 0x1, 0xfffffffe, 0xfffffff6, 0x9, 0xfffffff8, 0x30),
#               f6:(0x17, 0x5, 0xffffffe8, 0xfffffff6, 0x1d, 0x0, 0xd, 0xe, 0xfffffffe, 0x2, 0x2c, 0x3d)]
# {OUT} Y_N2 = [f1:(0x33, 0x11, 0x1d, 0xfffffff5, 0xffffffdd, 0xffffffea, 0xffffffd9, 0xfffffff1, 0x3, 0xffffffe9, 0xffffffd3, 0x5a),
#               f2:(0xb, 0xffffffeb, 0xfffffff8, 0x1, 0x15, 0xfffffffb, 0xc, 0xffffffff, 0xffffffa4, 0xffffffd9, 0xffffffe2, 0x10),
#               f3:(0xffffffff, 0x17, 0xffffffa1, 0xffffffcf, 0x1e, 0x15, 0xa, 0x16, 0xffffffc5, 0xfffffff4, 0x14, 0xffffffd4),
#               f4:(0x19, 0x16, 0xfffffffd, 0x2, 0xffffffe8, 0x17, 0x3, 0x0, 0xffffff99, 0xffffffa1, 0x2, 0xfffffffb),
#               f5:(0x2, 0x1, 0xfffffff3, 0x8, 0xffffffce, 0x9, 0x1, 0xfffffffe, 0xfffffff6, 0x9, 0xfffffff8, 0x30),
#               f6:(0x17, 0x5, 0xffffffe8, 0xfffffff6, 0x1d, 0x0, 0xd, 0xe, 0xfffffffe, 0x2, 0x2c, 0x3d)]
# Returned status: 0
#
# Decoder_NO::decode_siho(const int8 Y_N[6x12], int8 V_K[6x12])
# {IN}  Y_N = [f1:(0x33, 0x11, 0x1d, 0xfffffff5, 0xffffffdd, 0xffffffea, 0xffffffd9, 0xfffffff1, 0x3, 0xffffffe9, 0xffffffd3, 0x5a),
#              f2:(0xb, 0xffffffeb, 0xfffffff8, 0x1, 0x15, 0xfffffffb, 0xc, 0xffffffff, 0xffffffa4, 0xffffffd9, 0xffffffe2, 0x10),
#              f3:(0xffffffff, 0x17, 0xffffffa1, 0xffffffcf, 0x1e, 0x15, 0xa, 0x16, 0xffffffc5, 0xfffffff4, 0x14, 0xffffffd4),
#              f4:(0x19, 0x16, 0xfffffffd, 0x2, 0xffffffe8, 0x17, 0x3, 0x0, 0xffffff99, 0xffffffa1, 0x2, 0xfffffffb),
#              f5:(0x2, 0x1, 0xfffffff3, 0x8, 0xffffffce, 0x9, 0x1, 0xfffffffe, 0xfffffff6, 0x9, 0xfffffff8, 0x30),
#              f6:(0x17, 0x5, 0xffffffe8, 0xfffffff6, 0x1d, 0x0, 0xd, 0xe, 0xfffffffe, 0x2, 0x2c, 0x3d)]
# {OUT} V_K = [f1:(0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0),
#              f2:(0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0),
#              f3:(0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1),
#              f4:(0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1),
#              f5:(0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0),
#              f6:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0)]
# Returned status: 0
#
# CRC_NO::extract(const int8 V_K1[6x12], int8 V_K2[6x12])
# {IN}  V_K1 = [f1:(0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0),
#               f2:(0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0),
#               f3:(0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1),
#               f4:(0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1),
#               f5:(0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0),
#               f6:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0)]
# {OUT} V_K2 = [f1:(0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0),
#               f2:(0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0),
#               f3:(0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1),
#               f4:(0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1),
#               f5:(0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0),
#               f6:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0)]
# Returned status: 0
#
# Monitor_BFER::check_errors(const int8 U[6x12], const int8 V[6x12])
# {IN}  U = [f1:(0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0),
#            f2:(0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0),
#            f3:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1),
#            f4:(0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0),
#            f5:(0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0),
#            f6:(0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0)]
# {IN}  V = [f1:(0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0),
#            f2:(0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0),
#            f3:(0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1),
#            f4:(0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1),
#            f5:(0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0),
#            f6:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0)]
# Returned status: 10
#
# -------------------------------
# New communication (nÂ°2)
# -------------------------------
#
# Source_random::generate(int8 U_K[6x12])
# {OUT} U_K = [f1:(0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1),
#              f2:(0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#              f3:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0),
#              f4:(0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1),
#              f5:(0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1),
#              f6:(0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0)]
# Returned status: 0
#
# CRC_NO::build(const int8 U_K1[6x12], int8 U_K2[6x12])
# {IN}  U_K1 = [f1:(0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1),
#               f2:(0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#               f3:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0),
#               f4:(0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1),
#               f5:(0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1),
#               f6:(0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0)]
# {OUT} U_K2 = [f1:(0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1),
#               f2:(0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#               f3:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0),
#               f4:(0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1),
#               f5:(0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1),
#               f6:(0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0)]
# Returned status: 0
#
# Encoder_NO::encode(const int8 U_K[6x12], int8 X_N[6x12])
# {IN}  U_K = [f1:(0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1),
#              f2:(0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#              f3:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0),
#              f4:(0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1),
#              f5:(0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1),
#              f6:(0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0)]
# {OUT} X_N = [f1:(0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1),
#              f2:(0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#              f3:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0),
#              f4:(0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1),
#              f5:(0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1),
#              f6:(0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0)]
# Returned status: 0
#
# Puncturer_NO::puncture(const int8 X_N1[6x12], int8 X_N2[6x12])
# {IN}  X_N1 = [f1:(0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1),
#               f2:(0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#               f3:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0),
#               f4:(0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1),
#               f5:(0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1),
#               f6:(0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0)]
# {OUT} X_N2 = [f1:(0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1),
#               f2:(0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#               f3:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0),
#               f4:(0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1),
#               f5:(0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1),
#               f6:(0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0)]
# Returned status: 0
#
# Modem_SCMA::modulate(const int8 X_N1[6x12], float32 X_N2[6x48])
# {IN}  X_N1 = [f1:(0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1),
#               f2:(0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#               f3:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0),
#               f4:(0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1),
#               f5:(0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1),
#               f6:(0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0)]
# {OUT} X_N2 = [f1:(0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0),
#               f2:(0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0),
#               f3:(-0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1),
#               f5:(0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3),
#               f6:(0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Channel_Rayleigh_LLR::add_noise_wg(const float32 X_N[6x48], float32 H_N[6x48], float32 Y_N[6x48])
# {IN}  X_N = [f1:(0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0),
#              f2:(0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0),
#              f3:(-0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1),
#              f5:(0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3),
#              f6:(0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0)]
# {OUT} H_N = [f1:(0x1.9e1a7cp-5, -0x1.a2168ap-2, 0x1.570262p-2, 0x1.b663p-1, 0x1.ac88d2p-2, 0x1.4fe79p-1, 0x1.724d08p-1, -0x1.974cdep-1, 0x1.15c9dep+0, 0x1.e68886p-2, -0x1.751ddcp-1, 0x1.7e5d9p-2, -0x1.40dd62p-4, 0x1.8b9c2cp-6, -0x1.820bep-1, 0x1.05b40ep-1, 0x1.6bfb24p-3, 0x1.2b1a12p-2, 0x1.657998p-5, 0x1.1dba66p-4, 0x1.55135ap+0, 0x1.802ab2p-1, 0x1.c530d2p-5, 0x1.56602ep-3, 0x1.a27b7p+0, -0x1.f40378p-2, -0x1.effcf4p-3, 0x1.6124a8p-1, 0x1.9ca63ap-1, -0x1.401efp-2, -0x1.0f043cp+0, 0x1.806038p-1, -0x1.d8f5cap-1, -0x1.e4763ap+0, -0x1.4f3b78p-1, 0x1.7e0174p+0, -0x1.5f236p+0, -0x1.f21442p-1, 0x1.5cfa12p-2, -0x1.e9fd56p-1, -0x1.ae4ec6p-3, 0x1.c27f7ep-2, 0x1.f01236p-1, -0x1.046e8p-2, -0x1.d801fcp-2, -0x1.689476p-3, -0x1.3416ccp-4, -0x1.dd701cp-4),
#              f2:(-0x1.c6366ap-6, -0x1.79b58ap-1, 0x1.2dde48p-6, -0x1.0e0674p-1, 0x1.7fe914p-1, 0x1.2b6adep+1, 0x1.25c31ep-1, -0x1.1ba304p-1, 0x1.319f5cp-6, -0x1.de0ed8p-2, 0x1.a957ap-2, 0x1.009a14p+0, 0x1.27bc1p-1, 0x1.c6f312p-6, 0x1.2c3a3ap+0, -0x1.83d528p-1, -0x1.fb2b74p-1, -0x1.31b922p-1, 0x1.63c362p-1, -0x1.511cbcp-1, 0x1.742f7ap-4, -0x1.0b4cc2p-3, -0x1.2016bep-2, 0x1.3d9c88p-2, 0x1.c6378p-6, 0x1.18895ep+0, -0x1.24a5bap-1, -0x1.76696ep-10, 0x1.9cea4ap-5, 0x1.b918bp-4, 0x1.2b4478p+0, -0x1.0b908p-4, 0x1.e0f0aep-2, 0x1.a8aaa6p-2, -0x1.06fcc8p-2, 0x1.1efefap-1, 0x1.b2e182p-2, -0x1.ed1cb8p-1, -0x1.f42d48p-2, 0x1.d65b2ep-1, -0x1.35ba1ap-2, 0x1.422412p-3, 0x1.cb28ecp-1, -0x1.565b24p-4, 0x1.123f1cp+0, 0x1.3db05ep-1, 0x1.79f9e2p-3, -0x1.75c4acp+0),
#              f3:(0x1.0dd03p+0, 0x1.4a411cp+0, -0x1.b54df6p-3, 0x1.00bf08p-1, -0x1.da558cp-1, 0x1.8d8628p-2, -0x1.1aee72p-5, -0x1.29e486p-2, -0x1.2a58b8p-2, -0x1.37b9aep-1, -0x1.883a34p-2, -0x1.cec93ep-3, 0x1.61ecc8p-1, -0x1.6694c8p-1, 0x1.5160bep+0, -0x1.44cf0cp-2, -0x1.0e42f8p+0, 0x1.04897cp-2, -0x1.b1472ep-3, -0x1.fda836p-2, 0x1.1798e4p+0, 0x1.505a9cp-1, -0x1.7d5246p-2, 0x1.6088f6p-2, -0x1.65a36ap-1, -0x1.0a4b7ep+0, -0x1.9751p-1, -0x1.06d354p-1, -0x1.53f75p-2, 0x1.10bfe8p-2, -0x1.6d172ap-3, -0x1.3077b8p-1, 0x1.26cc7p-4, -0x1.22cf2ap-2, 0x1.e90aecp-2, -0x1.089cfcp-4, -0x1.173b4cp-4, -0x1.5f639ep+0, 0x1.d2d48ep-3, 0x1.919794p-1, -0x1.3da608p+1, -0x1.9eed18p-5, 0x1.0896dep-1, -0x1.51c6d8p-1, 0x1.c20272p-1, 0x1.3e0922p-1, 0x1.2f40dp-2, -0x1.ccd14cp-2),
#              f4:(-0x1.245c0cp-1, 0x1.f4c58ep-4, 0x1.9ea342p-1, -0x1.bfae0ap-1, -0x1.eb2cbp-1, 0x1.1b46a4p-2, 0x1.b8a20cp+0, 0x1.866e76p-1, -0x1.3392dp-2, 0x1.aef33ep-2, -0x1.420778p-1, 0x1.dcb192p-1, 0x1.6c437cp-2, -0x1.b7a7bcp-1, -0x1.ddd9d6p-3, 0x1.940748p-4, -0x1.0a7aaap+0, 0x1.71c4a4p-5, 0x1.853fc4p-2, -0x1.57dd0ep-1, -0x1.4aa9b4p-2, -0x1.1a101ep-1, 0x1.629f9ap-2, 0x1.1f4ee6p-1, -0x1.d34bap-1, 0x1.d0d226p-1, 0x1.984a9cp-3, 0x1.09c44cp+0, -0x1.6999c2p-1, -0x1.a4ab96p-2, 0x1.b49708p-1, -0x1.631ed6p+0, 0x1.89ac92p-1, -0x1.a58016p-2, 0x1.a3f428p-2, 0x1.a5f198p-1, -0x1.9d28b2p-2, -0x1.44be66p-2, 0x1.eac1c6p-1, 0x1.c762c2p-1, -0x1.7c2e2cp+0, -0x1.6e3676p+0, -0x1.69318cp-2, -0x1.313384p-1, 0x1.bf355ap-3, -0x1.30ce6cp+0, -0x1.16b666p+0, -0x1.fccadcp-1),
#              f5:(-0x1.af5272p-2, -0x1.d548cap-5, 0x1.563faep-2, -0x1.1e531cp-4, 0x1.3567dcp-2, -0x1.277162p-3, -0x1.057d66p-1, 0x1.2abe4ep+1, -0x1.8f4a92p-6, 0x1.3c9558p-2, 0x1.3cd68cp-1, 0x1.4b1ea8p-1, 0x1.c27c1ap-1, -0x1.f07386p-4, 0x1.19262ap+0, -0x1.6e747ep-2, 0x1.f75402p-2, 0x1.699f32p-8, 0x1.e521bap-1, 0x1.af223ap-2, 0x1.e7d53cp-1, 0x1.a62242p-1, -0x1.908706p-2, 0x1.752404p-7, -0x1.7f511ep-5, 0x1.5c5252p+0, 0x1.ef3406p-3, -0x1.f259ep-1, -0x1.21326p-1, -0x1.e0f018p-2, 0x1.086a46p+1, -0x1.9dcfa2p-9, -0x1.8406f2p-3, -0x1.322734p-1, 0x1.1d7bfp-1, -0x1.45343ap-1, 0x1.1659bap-1, 0x1.0cc3c4p-2, -0x1.250f8ap-3, -0x1.f9e972p-4, -0x1.ed1d2cp-4, 0x1.ccf284p-6, -0x1.821e3ap-2, -0x1.11f296p-1, 0x1.536b3ap-2, -0x1.a4713ap-3, 0x1.1cfdbcp+0, -0x1.b19a04p+0),
#              f6:(0x1.1669cp-1, 0x1.1d18bep+0, -0x1.ea0b8ep+0, -0x1.5c1f36p-2, -0x1.2e8c04p-1, -0x1.eabd08p-5, 0x1.3c14bcp-4, -0x1.447062p-3, -0x1.11eaa6p-1, 0x1.2d76c2p+0, -0x1.10b8e2p-1, -0x1.1e44a6p-1, 0x1.7e5906p-8, -0x1.50a694p-1, 0x1.34c1fap-2, -0x1.9879dep-1, 0x1.45575p-4, 0x1.030e14p-1, 0x1.fa1066p-1, 0x1.12d8a8p-2, 0x1.c41134p-3, 0x1.869598p-4, -0x1.00a7e8p-1, -0x1.22c3ecp+0, -0x1.753d34p-1, 0x1.07e0eep+0, -0x1.7be164p-2, 0x1.e52feap-2, 0x1.ec47bp-2, 0x1.09b678p-1, -0x1.1ae768p-1, 0x1.83bb18p-2, -0x1.1adf36p-2, 0x1.173712p-2, 0x1.089256p-1, -0x1.304274p-2, 0x1.01a24ep-1, -0x1.0c887ep+0, -0x1.5cb93ep-1, -0x1.ceab0ep+0, 0x1.240e38p-5, 0x1.6abc34p-1, 0x1.ca7b26p-4, 0x1.85c3cap-2, 0x1.7b1698p-1, 0x1.0cc7b2p-1, 0x1.793a72p-1, -0x1.b520c2p-2)]
# {OUT} Y_N = [f1:(-0x1.2cc384p+0, -0x1.f0a6ap-1, 0x1.a548f8p+0, -0x1.9a77ep-2, -0x1.f2f884p-4, 0x1.78bb78p+0, 0x1.421d04p-2, -0x1.8cf984p+0, -0x1.a21104p-2, -0x1.740f9cp-1, -0x1.231e6cp-1, 0x1.c459bcp-6, -0x1.c524d8p-2, -0x1.ec6738p-1, -0x1.728feap-1, 0x1.aafb42p-1, 0x1.70144cp-2, -0x1.3cdbdcp-2, 0x1.7cfb58p-1, 0x1.4fb4ecp-2, -0x1.036906p-1, -0x1.60c5ccp-3, 0x1.0901p-1, -0x1.3f2538p-2, -0x1.ce8c6ep-1, -0x1.fb87f2p-1, 0x1.f7de26p-1, -0x1.c89782p-2, -0x1.a1cedp-2, -0x1.5671fap-4, 0x1.016652p-1, 0x1.f0732p-1, -0x1.dd00c2p-8, 0x1.9f6ee4p-1, -0x1.921a8p-8, -0x1.3261ep-2, -0x1.1ee34cp-1, -0x1.e6005p-3, -0x1.158b2ep+0, 0x1.978654p+0, -0x1.01d5a8p-1, 0x1.a45734p-2, 0x1.fdee2cp-3, -0x1.52b614p-1, 0x1.ab3fbep-1, -0x1.399dccp-2, 0x1.0bf42p-1, -0x1.0242eap-2),
#              f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Modem_SCMA::filter(const float32 Y_N1[6x48], float32 Y_N2[6x48])
# {IN}  Y_N1 = [f1:(-0x1.2cc384p+0, -0x1.f0a6ap-1, 0x1.a548f8p+0, -0x1.9a77ep-2, -0x1.f2f884p-4, 0x1.78bb78p+0, 0x1.421d04p-2, -0x1.8cf984p+0, -0x1.a21104p-2, -0x1.740f9cp-1, -0x1.231e6cp-1, 0x1.c459bcp-6, -0x1.c524d8p-2, -0x1.ec6738p-1, -0x1.728feap-1, 0x1.aafb42p-1, 0x1.70144cp-2, -0x1.3cdbdcp-2, 0x1.7cfb58p-1, 0x1.4fb4ecp-2, -0x1.036906p-1, -0x1.60c5ccp-3, 0x1.0901p-1, -0x1.3f2538p-2, -0x1.ce8c6ep-1, -0x1.fb87f2p-1, 0x1.f7de26p-1, -0x1.c89782p-2, -0x1.a1cedp-2, -0x1.5671fap-4, 0x1.016652p-1, 0x1.f0732p-1, -0x1.dd00c2p-8, 0x1.9f6ee4p-1, -0x1.921a8p-8, -0x1.3261ep-2, -0x1.1ee34cp-1, -0x1.e6005p-3, -0x1.158b2ep+0, 0x1.978654p+0, -0x1.01d5a8p-1, 0x1.a45734p-2, 0x1.fdee2cp-3, -0x1.52b614p-1, 0x1.ab3fbep-1, -0x1.399dccp-2, 0x1.0bf42p-1, -0x1.0242eap-2),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# {OUT} Y_N2 = [f1:(-0x1.2cc384p+0, -0x1.f0a6ap-1, 0x1.a548f8p+0, -0x1.9a77ep-2, -0x1.f2f884p-4, 0x1.78bb78p+0, 0x1.421d04p-2, -0x1.8cf984p+0, -0x1.a21104p-2, -0x1.740f9cp-1, -0x1.231e6cp-1, 0x1.c459bcp-6, -0x1.c524d8p-2, -0x1.ec6738p-1, -0x1.728feap-1, 0x1.aafb42p-1, 0x1.70144cp-2, -0x1.3cdbdcp-2, 0x1.7cfb58p-1, 0x1.4fb4ecp-2, -0x1.036906p-1, -0x1.60c5ccp-3, 0x1.0901p-1, -0x1.3f2538p-2, -0x1.ce8c6ep-1, -0x1.fb87f2p-1, 0x1.f7de26p-1, -0x1.c89782p-2, -0x1.a1cedp-2, -0x1.5671fap-4, 0x1.016652p-1, 0x1.f0732p-1, -0x1.dd00c2p-8, 0x1.9f6ee4p-1, -0x1.921a8p-8, -0x1.3261ep-2, -0x1.1ee34cp-1, -0x1.e6005p-3, -0x1.158b2ep+0, 0x1.978654p+0, -0x1.01d5a8p-1, 0x1.a45734p-2, 0x1.fdee2cp-3, -0x1.52b614p-1, 0x1.ab3fbep-1, -0x1.399dccp-2, 0x1.0bf42p-1, -0x1.0242eap-2),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Modem_SCMA::demodulate_wg(const float32 H_N[6x48], const float32 Y_N1[6x48], float32 Y_N2[6x12])
# {IN}  H_N  = [f1:(0x1.9e1a7cp-5, -0x1.a2168ap-2, 0x1.570262p-2, 0x1.b663p-1, 0x1.ac88d2p-2, 0x1.4fe79p-1, 0x1.724d08p-1, -0x1.974cdep-1, 0x1.15c9dep+0, 0x1.e68886p-2, -0x1.751ddcp-1, 0x1.7e5d9p-2, -0x1.40dd62p-4, 0x1.8b9c2cp-6, -0x1.820bep-1, 0x1.05b40ep-1, 0x1.6bfb24p-3, 0x1.2b1a12p-2, 0x1.657998p-5, 0x1.1dba66p-4, 0x1.55135ap+0, 0x1.802ab2p-1, 0x1.c530d2p-5, 0x1.56602ep-3, 0x1.a27b7p+0, -0x1.f40378p-2, -0x1.effcf4p-3, 0x1.6124a8p-1, 0x1.9ca63ap-1, -0x1.401efp-2, -0x1.0f043cp+0, 0x1.806038p-1, -0x1.d8f5cap-1, -0x1.e4763ap+0, -0x1.4f3b78p-1, 0x1.7e0174p+0, -0x1.5f236p+0, -0x1.f21442p-1, 0x1.5cfa12p-2, -0x1.e9fd56p-1, -0x1.ae4ec6p-3, 0x1.c27f7ep-2, 0x1.f01236p-1, -0x1.046e8p-2, -0x1.d801fcp-2, -0x1.689476p-3, -0x1.3416ccp-4, -0x1.dd701cp-4),
#               f2:(-0x1.c6366ap-6, -0x1.79b58ap-1, 0x1.2dde48p-6, -0x1.0e0674p-1, 0x1.7fe914p-1, 0x1.2b6adep+1, 0x1.25c31ep-1, -0x1.1ba304p-1, 0x1.319f5cp-6, -0x1.de0ed8p-2, 0x1.a957ap-2, 0x1.009a14p+0, 0x1.27bc1p-1, 0x1.c6f312p-6, 0x1.2c3a3ap+0, -0x1.83d528p-1, -0x1.fb2b74p-1, -0x1.31b922p-1, 0x1.63c362p-1, -0x1.511cbcp-1, 0x1.742f7ap-4, -0x1.0b4cc2p-3, -0x1.2016bep-2, 0x1.3d9c88p-2, 0x1.c6378p-6, 0x1.18895ep+0, -0x1.24a5bap-1, -0x1.76696ep-10, 0x1.9cea4ap-5, 0x1.b918bp-4, 0x1.2b4478p+0, -0x1.0b908p-4, 0x1.e0f0aep-2, 0x1.a8aaa6p-2, -0x1.06fcc8p-2, 0x1.1efefap-1, 0x1.b2e182p-2, -0x1.ed1cb8p-1, -0x1.f42d48p-2, 0x1.d65b2ep-1, -0x1.35ba1ap-2, 0x1.422412p-3, 0x1.cb28ecp-1, -0x1.565b24p-4, 0x1.123f1cp+0, 0x1.3db05ep-1, 0x1.79f9e2p-3, -0x1.75c4acp+0),
#               f3:(0x1.0dd03p+0, 0x1.4a411cp+0, -0x1.b54df6p-3, 0x1.00bf08p-1, -0x1.da558cp-1, 0x1.8d8628p-2, -0x1.1aee72p-5, -0x1.29e486p-2, -0x1.2a58b8p-2, -0x1.37b9aep-1, -0x1.883a34p-2, -0x1.cec93ep-3, 0x1.61ecc8p-1, -0x1.6694c8p-1, 0x1.5160bep+0, -0x1.44cf0cp-2, -0x1.0e42f8p+0, 0x1.04897cp-2, -0x1.b1472ep-3, -0x1.fda836p-2, 0x1.1798e4p+0, 0x1.505a9cp-1, -0x1.7d5246p-2, 0x1.6088f6p-2, -0x1.65a36ap-1, -0x1.0a4b7ep+0, -0x1.9751p-1, -0x1.06d354p-1, -0x1.53f75p-2, 0x1.10bfe8p-2, -0x1.6d172ap-3, -0x1.3077b8p-1, 0x1.26cc7p-4, -0x1.22cf2ap-2, 0x1.e90aecp-2, -0x1.089cfcp-4, -0x1.173b4cp-4, -0x1.5f639ep+0, 0x1.d2d48ep-3, 0x1.919794p-1, -0x1.3da608p+1, -0x1.9eed18p-5, 0x1.0896dep-1, -0x1.51c6d8p-1, 0x1.c20272p-1, 0x1.3e0922p-1, 0x1.2f40dp-2, -0x1.ccd14cp-2),
#               f4:(-0x1.245c0cp-1, 0x1.f4c58ep-4, 0x1.9ea342p-1, -0x1.bfae0ap-1, -0x1.eb2cbp-1, 0x1.1b46a4p-2, 0x1.b8a20cp+0, 0x1.866e76p-1, -0x1.3392dp-2, 0x1.aef33ep-2, -0x1.420778p-1, 0x1.dcb192p-1, 0x1.6c437cp-2, -0x1.b7a7bcp-1, -0x1.ddd9d6p-3, 0x1.940748p-4, -0x1.0a7aaap+0, 0x1.71c4a4p-5, 0x1.853fc4p-2, -0x1.57dd0ep-1, -0x1.4aa9b4p-2, -0x1.1a101ep-1, 0x1.629f9ap-2, 0x1.1f4ee6p-1, -0x1.d34bap-1, 0x1.d0d226p-1, 0x1.984a9cp-3, 0x1.09c44cp+0, -0x1.6999c2p-1, -0x1.a4ab96p-2, 0x1.b49708p-1, -0x1.631ed6p+0, 0x1.89ac92p-1, -0x1.a58016p-2, 0x1.a3f428p-2, 0x1.a5f198p-1, -0x1.9d28b2p-2, -0x1.44be66p-2, 0x1.eac1c6p-1, 0x1.c762c2p-1, -0x1.7c2e2cp+0, -0x1.6e3676p+0, -0x1.69318cp-2, -0x1.313384p-1, 0x1.bf355ap-3, -0x1.30ce6cp+0, -0x1.16b666p+0, -0x1.fccadcp-1),
#               f5:(-0x1.af5272p-2, -0x1.d548cap-5, 0x1.563faep-2, -0x1.1e531cp-4, 0x1.3567dcp-2, -0x1.277162p-3, -0x1.057d66p-1, 0x1.2abe4ep+1, -0x1.8f4a92p-6, 0x1.3c9558p-2, 0x1.3cd68cp-1, 0x1.4b1ea8p-1, 0x1.c27c1ap-1, -0x1.f07386p-4, 0x1.19262ap+0, -0x1.6e747ep-2, 0x1.f75402p-2, 0x1.699f32p-8, 0x1.e521bap-1, 0x1.af223ap-2, 0x1.e7d53cp-1, 0x1.a62242p-1, -0x1.908706p-2, 0x1.752404p-7, -0x1.7f511ep-5, 0x1.5c5252p+0, 0x1.ef3406p-3, -0x1.f259ep-1, -0x1.21326p-1, -0x1.e0f018p-2, 0x1.086a46p+1, -0x1.9dcfa2p-9, -0x1.8406f2p-3, -0x1.322734p-1, 0x1.1d7bfp-1, -0x1.45343ap-1, 0x1.1659bap-1, 0x1.0cc3c4p-2, -0x1.250f8ap-3, -0x1.f9e972p-4, -0x1.ed1d2cp-4, 0x1.ccf284p-6, -0x1.821e3ap-2, -0x1.11f296p-1, 0x1.536b3ap-2, -0x1.a4713ap-3, 0x1.1cfdbcp+0, -0x1.b19a04p+0),
#               f6:(0x1.1669cp-1, 0x1.1d18bep+0, -0x1.ea0b8ep+0, -0x1.5c1f36p-2, -0x1.2e8c04p-1, -0x1.eabd08p-5, 0x1.3c14bcp-4, -0x1.447062p-3, -0x1.11eaa6p-1, 0x1.2d76c2p+0, -0x1.10b8e2p-1, -0x1.1e44a6p-1, 0x1.7e5906p-8, -0x1.50a694p-1, 0x1.34c1fap-2, -0x1.9879dep-1, 0x1.45575p-4, 0x1.030e14p-1, 0x1.fa1066p-1, 0x1.12d8a8p-2, 0x1.c41134p-3, 0x1.869598p-4, -0x1.00a7e8p-1, -0x1.22c3ecp+0, -0x1.753d34p-1, 0x1.07e0eep+0, -0x1.7be164p-2, 0x1.e52feap-2, 0x1.ec47bp-2, 0x1.09b678p-1, -0x1.1ae768p-1, 0x1.83bb18p-2, -0x1.1adf36p-2, 0x1.173712p-2, 0x1.089256p-1, -0x1.304274p-2, 0x1.01a24ep-1, -0x1.0c887ep+0, -0x1.5cb93ep-1, -0x1.ceab0ep+0, 0x1.240e38p-5, 0x1.6abc34p-1, 0x1.ca7b26p-4, 0x1.85c3cap-2, 0x1.7b1698p-1, 0x1.0cc7b2p-1, 0x1.793a72p-1, -0x1.b520c2p-2)]
# {IN}  Y_N1 = [f1:(-0x1.2cc384p+0, -0x1.f0a6ap-1, 0x1.a548f8p+0, -0x1.9a77ep-2, -0x1.f2f884p-4, 0x1.78bb78p+0, 0x1.421d04p-2, -0x1.8cf984p+0, -0x1.a21104p-2, -0x1.740f9cp-1, -0x1.231e6cp-1, 0x1.c459bcp-6, -0x1.c524d8p-2, -0x1.ec6738p-1, -0x1.728feap-1, 0x1.aafb42p-1, 0x1.70144cp-2, -0x1.3cdbdcp-2, 0x1.7cfb58p-1, 0x1.4fb4ecp-2, -0x1.036906p-1, -0x1.60c5ccp-3, 0x1.0901p-1, -0x1.3f2538p-2, -0x1.ce8c6ep-1, -0x1.fb87f2p-1, 0x1.f7de26p-1, -0x1.c89782p-2, -0x1.a1cedp-2, -0x1.5671fap-4, 0x1.016652p-1, 0x1.f0732p-1, -0x1.dd00c2p-8, 0x1.9f6ee4p-1, -0x1.921a8p-8, -0x1.3261ep-2, -0x1.1ee34cp-1, -0x1.e6005p-3, -0x1.158b2ep+0, 0x1.978654p+0, -0x1.01d5a8p-1, 0x1.a45734p-2, 0x1.fdee2cp-3, -0x1.52b614p-1, 0x1.ab3fbep-1, -0x1.399dccp-2, 0x1.0bf42p-1, -0x1.0242eap-2),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# {OUT} Y_N2 = [f1:(-0x1.1f22a6p+2, 0x1.7d1104p+2, 0x1.fe9bc8p+1, -0x1.7c9dc2p+0, 0x1.9d228p-6, -0x1.0fb3ap-3, -0x1.20d408p+0, 0x1.5bc1p-3, -0x1.1a9558p+3, -0x1.628394p+2, -0x1.1ba3dp-2, -0x1.0c0d3ep+1),
#               f2:(0x1.18ba14p+3, -0x1.18ab42p+4, 0x1.72b7ccp+0, 0x1.9c4522p+1, -0x1.152bdcp+0, 0x1.dc2b78p-1, -0x1.552118p+2, -0x1.e20758p+0, 0x1.887ef6p+1, 0x1.746e88p+2, -0x1.61608p-3, -0x1.528e9p-1),
#               f3:(0x1.bb6e78p+3, 0x1.2a7684p+2, -0x1.9f47d4p+1, -0x1.71cf6p-1, 0x1.8f38b8p+1, -0x1.e50fe8p-1, 0x1.796eap-1, -0x1.560cc6p+2, 0x1.440a3cp-1, 0x1.81d1ecp+0, -0x1.7b0bc4p+3, 0x1.ee53dcp+2),
#               f4:(-0x1.080e42p+3, 0x1.25f812p+2, 0x1.7e9254p+1, 0x1.6b8108p-1, 0x1.7d74cp-1, 0x1.e2efe8p+1, 0x1.325cb4p+2, -0x1.2d0028p+3, 0x1.1f7cdp+2, -0x1.3bf6ccp+3, 0x1.57fba8p+1, -0x1.d767e8p+0),
#               f5:(0x1.aedcfp+2, -0x1.62d4p+2, 0x1.213afp+2, 0x1.3ae26cp+0, 0x1.dc4aa8p-1, 0x1.fc102cp-1, 0x1.652a2ep+2, -0x1.483f9p-1, -0x1.160268p+0, 0x1.131e3cp+1, 0x1.841238p+0, -0x1.741cc8p+0),
#               f6:(-0x1.fdaa6ep+3, -0x1.e0ed12p+2, -0x1.b345d4p+0, 0x1.bbcf18p+1, 0x1.a05b1cp+1, -0x1.2f78e8p-2, -0x1.8dcbb4p-1, -0x1.170688p+1, 0x1.120654p+1, 0x1.1b99a6p+2, -0x1.d23edcp+0, 0x1.a502fp+1)]
# Returned status: 0
#
# Quantizer_standard::process(const float32 Y_N1[6x12], int8 Y_N2[6x12])
# {IN}  Y_N1 = [f1:(-0x1.1f22a6p+2, 0x1.7d1104p+2, 0x1.fe9bc8p+1, -0x1.7c9dc2p+0, 0x1.9d228p-6, -0x1.0fb3ap-3, -0x1.20d408p+0, 0x1.5bc1p-3, -0x1.1a9558p+3, -0x1.628394p+2, -0x1.1ba3dp-2, -0x1.0c0d3ep+1),
#               f2:(0x1.18ba14p+3, -0x1.18ab42p+4, 0x1.72b7ccp+0, 0x1.9c4522p+1, -0x1.152bdcp+0, 0x1.dc2b78p-1, -0x1.552118p+2, -0x1.e20758p+0, 0x1.887ef6p+1, 0x1.746e88p+2, -0x1.61608p-3, -0x1.528e9p-1),
#               f3:(0x1.bb6e78p+3, 0x1.2a7684p+2, -0x1.9f47d4p+1, -0x1.71cf6p-1, 0x1.8f38b8p+1, -0x1.e50fe8p-1, 0x1.796eap-1, -0x1.560cc6p+2, 0x1.440a3cp-1, 0x1.81d1ecp+0, -0x1.7b0bc4p+3, 0x1.ee53dcp+2),
#               f4:(-0x1.080e42p+3, 0x1.25f812p+2, 0x1.7e9254p+1, 0x1.6b8108p-1, 0x1.7d74cp-1, 0x1.e2efe8p+1, 0x1.325cb4p+2, -0x1.2d0028p+3, 0x1.1f7cdp+2, -0x1.3bf6ccp+3, 0x1.57fba8p+1, -0x1.d767e8p+0),
#               f5:(0x1.aedcfp+2, -0x1.62d4p+2, 0x1.213afp+2, 0x1.3ae26cp+0, 0x1.dc4aa8p-1, 0x1.fc102cp-1, 0x1.652a2ep+2, -0x1.483f9p-1, -0x1.160268p+0, 0x1.131e3cp+1, 0x1.841238p+0, -0x1.741cc8p+0),
#               f6:(-0x1.fdaa6ep+3, -0x1.e0ed12p+2, -0x1.b345d4p+0, 0x1.bbcf18p+1, 0x1.a05b1cp+1, -0x1.2f78e8p-2, -0x1.8dcbb4p-1, -0x1.170688p+1, 0x1.120654p+1, 0x1.1b99a6p+2, -0x1.d23edcp+0, 0x1.a502fp+1)]
# {OUT} Y_N2 = [f1:(0xffffffdc, 0x30, 0x20, 0xfffffff4, 0x0, 0xffffffff, 0xfffffff7, 0x1, 0xffffffb9, 0xffffffd4, 0xfffffffe, 0xffffffef),
#               f2:(0x46, 0xffffff81, 0xc, 0x1a, 0xfffffff7, 0x7, 0xffffffd5, 0xfffffff1, 0x19, 0x2f, 0xffffffff, 0xfffffffb),
#               f3:(0x6f, 0x25, 0xffffffe6, 0xfffffffa, 0x19, 0xfffffff8, 0x6, 0xffffffd5, 0x5, 0xc, 0xffffffa1, 0x3e),
#               f4:(0xffffffbe, 0x25, 0x18, 0x6, 0x6, 0x1e, 0x26, 0xffffffb5, 0x24, 0xffffffb1, 0x15, 0xfffffff1),
#               f5:(0x36, 0xffffffd4, 0x24, 0xa, 0x7, 0x8, 0x2d, 0xfffffffb, 0xfffffff7, 0x11, 0xc, 0xfffffff4),
#               f6:(0xffffff81, 0xffffffc4, 0xfffffff2, 0x1c, 0x1a, 0xfffffffe, 0xfffffffa, 0xffffffef, 0x11, 0x23, 0xfffffff1, 0x1a)]
# Returned status: 0
#
# Puncturer_NO::depuncture(const int8 Y_N1[6x12], int8 Y_N2[6x12])
# {IN}  Y_N1 = [f1:(0xffffffdc, 0x30, 0x20, 0xfffffff4, 0x0, 0xffffffff, 0xfffffff7, 0x1, 0xffffffb9, 0xffffffd4, 0xfffffffe, 0xffffffef),
#               f2:(0x46, 0xffffff81, 0xc, 0x1a, 0xfffffff7, 0x7, 0xffffffd5, 0xfffffff1, 0x19, 0x2f, 0xffffffff, 0xfffffffb),
#               f3:(0x6f, 0x25, 0xffffffe6, 0xfffffffa, 0x19, 0xfffffff8, 0x6, 0xffffffd5, 0x5, 0xc, 0xffffffa1, 0x3e),
#               f4:(0xffffffbe, 0x25, 0x18, 0x6, 0x6, 0x1e, 0x26, 0xffffffb5, 0x24, 0xffffffb1, 0x15, 0xfffffff1),
#               f5:(0x36, 0xffffffd4, 0x24, 0xa, 0x7, 0x8, 0x2d, 0xfffffffb, 0xfffffff7, 0x11, 0xc, 0xfffffff4),
#               f6:(0xffffff81, 0xffffffc4, 0xfffffff2, 0x1c, 0x1a, 0xfffffffe, 0xfffffffa, 0xffffffef, 0x11, 0x23, 0xfffffff1, 0x1a)]
# {OUT} Y_N2 = [f1:(0xffffffdc, 0x30, 0x20, 0xfffffff4, 0x0, 0xffffffff, 0xfffffff7, 0x1, 0xffffffb9, 0xffffffd4, 0xfffffffe, 0xffffffef),
#               f2:(0x46, 0xffffff81, 0xc, 0x1a, 0xfffffff7, 0x7, 0xffffffd5, 0xfffffff1, 0x19, 0x2f, 0xffffffff, 0xfffffffb),
#               f3:(0x6f, 0x25, 0xffffffe6, 0xfffffffa, 0x19, 0xfffffff8, 0x6, 0xffffffd5, 0x5, 0xc, 0xffffffa1, 0x3e),
#               f4:(0xffffffbe, 0x25, 0x18, 0x6, 0x6, 0x1e, 0x26, 0xffffffb5, 0x24, 0xffffffb1, 0x15, 0xfffffff1),
#               f5:(0x36, 0xffffffd4, 0x24, 0xa, 0x7, 0x8, 0x2d, 0xfffffffb, 0xfffffff7, 0x11, 0xc, 0xfffffff4),
#               f6:(0xffffff81, 0xffffffc4, 0xfffffff2, 0x1c, 0x1a, 0xfffffffe, 0xfffffffa, 0xffffffef, 0x11, 0x23, 0xfffffff1, 0x1a)]
# Returned status: 0
#
# Decoder_NO::decode_siho(const int8 Y_N[6x12], int8 V_K[6x12])
# {IN}  Y_N = [f1:(0xffffffdc, 0x30, 0x20, 0xfffffff4, 0x0, 0xffffffff, 0xfffffff7, 0x1, 0xffffffb9, 0xffffffd4, 0xfffffffe, 0xffffffef),
#              f2:(0x46, 0xffffff81, 0xc, 0x1a, 0xfffffff7, 0x7, 0xffffffd5, 0xfffffff1, 0x19, 0x2f, 0xffffffff, 0xfffffffb),
#              f3:(0x6f, 0x25, 0xffffffe6, 0xfffffffa, 0x19, 0xfffffff8, 0x6, 0xffffffd5, 0x5, 0xc, 0xffffffa1, 0x3e),
#              f4:(0xffffffbe, 0x25, 0x18, 0x6, 0x6, 0x1e, 0x26, 0xffffffb5, 0x24, 0xffffffb1, 0x15, 0xfffffff1),
#              f5:(0x36, 0xffffffd4, 0x24, 0xa, 0x7, 0x8, 0x2d, 0xfffffffb, 0xfffffff7, 0x11, 0xc, 0xfffffff4),
#              f6:(0xffffff81, 0xffffffc4, 0xfffffff2, 0x1c, 0x1a, 0xfffffffe, 0xfffffffa, 0xffffffef, 0x11, 0x23, 0xfffffff1, 0x1a)]
# {OUT} V_K = [f1:(0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1),
#              f2:(0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#              f3:(0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0),
#              f4:(0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1),
#              f5:(0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1),
#              f6:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0)]
# Returned status: 0
#
# CRC_NO::extract(const int8 V_K1[6x12], int8 V_K2[6x12])
# {IN}  V_K1 = [f1:(0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1),
#               f2:(0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#               f3:(0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0),
#               f4:(0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1),
#               f5:(0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1),
#               f6:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0)]
# {OUT} V_K2 = [f1:(0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1),
#               f2:(0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#               f3:(0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0),
#               f4:(0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1),
#               f5:(0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1),
#               f6:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0)]
# Returned status: 0
#
# Monitor_BFER::check_errors(const int8 U[6x12], const int8 V[6x12])
# {IN}  U = [f1:(0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1),
#            f2:(0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#            f3:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0),
#            f4:(0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1),
#            f5:(0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1),
#            f6:(0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0)]
# {IN}  V = [f1:(0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1),
#            f2:(0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#            f3:(0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0),
#            f4:(0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1),
#            f5:(0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1),
#            f6:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0)]
# Returned status: 6
#
# -------------------------------
# New communication (nÂ°3)
# -------------------------------
#
# Source_random::generate(int8 U_K[6x12])
# {OUT} U_K = [f1:(0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#              f2:(0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0),
#              f3:(0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0),
#              f4:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0),
#              f5:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1),
#              f6:(0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1)]
# Returned status: 0
#
# CRC_NO::build(const int8 U_K1[6x12], int8 U_K2[6x12])
# {IN}  U_K1 = [f1:(0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#               f2:(0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0),
#               f3:(0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0),
#               f4:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0),
#               f5:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1),
#               f6:(0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1)]
# {OUT} U_K2 = [f1:(0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#               f2:(0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0),
#               f3:(0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0),
#               f4:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0),
#               f5:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1),
#               f6:(0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1)]
# Returned status: 0
#
# Encoder_NO::encode(const int8 U_K[6x12], int8 X_N[6x12])
# {IN}  U_K = [f1:(0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#              f2:(0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0),
#              f3:(0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0),
#              f4:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0),
#              f5:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1),
#              f6:(0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1)]
# {OUT} X_N = [f1:(0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#              f2:(0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0),
#              f3:(0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0),
#              f4:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0),
#              f5:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1),
#              f6:(0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1)]
# Returned status: 0
#
# Puncturer_NO::puncture(const int8 X_N1[6x12], int8 X_N2[6x12])
# {IN}  X_N1 = [f1:(0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#               f2:(0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0),
#               f3:(0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0),
#               f4:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0),
#               f5:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1),
#               f6:(0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1)]
# {OUT} X_N2 = [f1:(0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#               f2:(0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0),
#               f3:(0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0),
#               f4:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0),
#               f5:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1),
#               f6:(0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1)]
# Returned status: 0
#
# Modem_SCMA::modulate(const int8 X_N1[6x12], float32 X_N2[6x48])
# {IN}  X_N1 = [f1:(0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#               f2:(0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0),
#               f3:(0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0),
#               f4:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0),
#               f5:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1),
#               f6:(0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1)]
# {OUT} X_N2 = [f1:(0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0),
#               f2:(0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0),
#               f3:(0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1),
#               f5:(0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2),
#               f6:(0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Channel_Rayleigh_LLR::add_noise_wg(const float32 X_N[6x48], float32 H_N[6x48], float32 Y_N[6x48])
# {IN}  X_N = [f1:(0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0),
#              f2:(0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0),
#              f3:(0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1),
#              f5:(0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2),
#              f6:(0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0)]
# {OUT} H_N = [f1:(0x1.34bfaep-1, 0x1.11d286p+0, 0x1.ac8366p-2, -0x1.94f7b6p-2, -0x1.abcb62p-3, 0x1.77cf8ep-1, 0x1.02c4a6p-1, -0x1.379018p+0, -0x1.83c5dep-1, -0x1.bef104p-3, -0x1.56383cp-1, 0x1.5126a6p-2, -0x1.25e9b4p-1, -0x1.21e6dp-2, 0x1.771e62p+0, 0x1.7c382ap-10, -0x1.238116p-1, 0x1.161a76p-4, 0x1.d1a328p-7, -0x1.15e53ap-2, 0x1.7351ecp-1, -0x1.8ee56p-2, -0x1.e18abep-1, 0x1.f87198p-1, 0x1.49153p-2, -0x1.aabdecp-1, -0x1.2662ep+0, 0x1.5db4aap+0, -0x1.34cf42p-4, 0x1.b739e6p-1, -0x1.89dfa8p-4, 0x1.4fc1ep-3, 0x1.c3af18p-2, 0x1.334bdp-2, 0x1.5206fp-1, 0x1.06ec7cp-2, -0x1.a6c39cp-1, 0x1.678fd2p-1, 0x1.553258p-1, -0x1.68d76p+0, -0x1.ee3a5cp-5, 0x1.fe9acep-1, 0x1.6aad9p-7, 0x1.32b92cp-1, 0x1.ffffccp-1, 0x1.6bb718p-1, -0x1.901a4ep-2, 0x1.74feacp-1),
#              f2:(-0x1.3acc0ep+0, -0x1.070c02p+0, -0x1.7271acp-6, 0x1.44cb2ap-2, 0x1.4d68b2p+0, 0x1.593846p-1, -0x1.699acp-3, 0x1.3f004ap-1, 0x1.f761bep+0, -0x1.89987ep-2, 0x1.01db86p-1, -0x1.004374p+0, 0x1.2c1c8ap-1, -0x1.2f235ep-5, 0x1.2fbee8p+0, 0x1.8958c4p-4, 0x1.11c778p+0, 0x1.8704e2p-1, -0x1.bdd2a2p-5, -0x1.9416aep-2, -0x1.fba03cp-1, -0x1.53facp-3, 0x1.0e3862p-1, -0x1.66e15cp-1, -0x1.9dc27ap-2, 0x1.524048p-4, 0x1.0f8b88p-1, 0x1.15408ap-3, 0x1.3a606cp+0, 0x1.5ad7eep+0, 0x1.d44392p-1, -0x1.da23a6p-3, -0x1.7475bep-6, 0x1.922cf2p-4, 0x1.9b87acp-4, -0x1.133832p-4, -0x1.867fa4p-1, 0x1.85080ep+0, -0x1.1ff574p-3, -0x1.4a312cp+0, -0x1.6a869p-3, 0x1.92da36p-3, -0x1.dae3cp-1, 0x1.292366p+0, 0x1.55d6e6p-2, 0x1.d77dd2p-3, 0x1.4394fp+0, 0x1.348d88p-2),
#              f3:(-0x1.99d00ap-3, -0x1.5e8d88p-2, -0x1.5b485ap-2, 0x1.b0980cp-2, -0x1.93032cp-4, 0x1.02994ep-3, 0x1.e4cce8p-2, 0x1.7ec686p-2, 0x1.a3af16p-1, 0x1.277354p+0, 0x1.117498p-1, 0x1.c8161cp-1, -0x1.c7693cp-2, -0x1.5df41p-2, 0x1.6ca976p-1, -0x1.f400d2p-2, 0x1.123b3ap-1, 0x1.14cf1ep-1, 0x1.07d56ep-1, -0x1.760a9cp-2, -0x1.1b6a5p-3, -0x1.14b758p-5, -0x1.76d448p-1, 0x1.42657ep+0, -0x1.e8904ep-2, 0x1.26cd24p-1, -0x1.4364dep-1, 0x1.6cdc96p+0, -0x1.03c4f4p-4, -0x1.969daap-1, -0x1.001c04p-1, -0x1.1be274p-2, -0x1.222a52p-1, 0x1.114544p+0, -0x1.e2f4ap-5, -0x1.351dfep-3, 0x1.9d11cep-4, 0x1.f449ecp-1, -0x1.211b64p-3, 0x1.9bb9bep-1, -0x1.830f7p-1, -0x1.81d94p-1, -0x1.89279ap-3, -0x1.f2ce1ap-2, -0x1.c3fa8p-4, 0x1.5e253ap+0, 0x1.bfc4a6p-3, 0x1.78285ap-1),
#              f4:(-0x1.80c764p-4, 0x1.e25704p-3, 0x1.309e42p-4, -0x1.5f4e98p-1, 0x1.9cca44p-2, 0x1.b0a8cep-1, 0x1.5e650ep-2, -0x1.31c2d8p-1, -0x1.9ea1p-2, 0x1.0ca23ep-4, 0x1.13ccbcp-2, 0x1.c48a88p-9, -0x1.807566p-1, -0x1.97d55p-2, -0x1.3e7466p-1, -0x1.17ffbap-1, 0x1.4ebdbep-3, 0x1.5109a2p-1, 0x1.808986p-2, 0x1.7f627cp-7, -0x1.45f2b2p-1, 0x1.50d896p-4, -0x1.2f6e48p+0, 0x1.b50c44p-2, -0x1.f29c92p+0, 0x1.1b3de6p-5, 0x1.b5793ep-2, 0x1.2dca06p-4, 0x1.44563p-1, 0x1.735304p-3, 0x1.75379p+0, -0x1.69c08ap+0, 0x1.76b2ep-7, -0x1.6d4fcp-2, 0x1.7c2526p-8, -0x1.6c7386p-1, 0x1.221076p-2, -0x1.b507f6p-2, -0x1.5c12c6p-1, 0x1.9c0326p-1, 0x1.51adf2p-1, 0x1.76e12p-1, -0x1.2042fcp-3, 0x1.265aa2p-1, -0x1.81f528p-2, 0x1.9fee84p-1, 0x1.1248fep+0, 0x1.7f9b5ap-4),
#              f5:(-0x1.8f1c08p-7, 0x1.927cfap-2, -0x1.046746p-2, -0x1.9001ecp-3, 0x1.2d6d4p-1, -0x1.ff7b28p-5, 0x1.298fp-3, 0x1.0a84aap-1, -0x1.9c7bep-1, -0x1.34dd72p+0, 0x1.81ca1ap-2, 0x1.40590cp-1, 0x1.2fb842p+0, -0x1.5628fcp-3, 0x1.62e76cp-2, -0x1.309338p+0, 0x1.8fb02cp-1, -0x1.74984cp-2, 0x1.0c6fd2p-1, -0x1.7f23fap-1, 0x1.dff9aep-2, -0x1.37dca2p-4, -0x1.c483cap-2, 0x1.4a37e6p-4, 0x1.36ff42p-1, 0x1.8bbe2cp-5, 0x1.06c084p-1, 0x1.ed2908p-2, 0x1.9d9734p-1, -0x1.16df7ap-2, -0x1.462056p-2, -0x1.242a36p-3, 0x1.af86f6p-1, -0x1.b644c6p-3, -0x1.6d383ep-3, -0x1.c52e56p-2, -0x1.162b86p-1, -0x1.9f6ae4p-1, -0x1.af4872p-1, -0x1.1fed22p-1, -0x1.ee4108p-2, 0x1.617c98p+0, 0x1.753edcp-2, 0x1.050ab8p-2, -0x1.ab8e8cp-1, -0x1.8e9928p-2, 0x1.f855a8p-2, 0x1.a5fc06p-3),
#              f6:(0x1.171c2p-3, -0x1.deadd6p-1, 0x1.b8bf7ap-1, -0x1.10ce7ep-1, 0x1.3de6eap-4, 0x1.f2366p-1, 0x1.1ee15ap-1, 0x1.54d03p-1, -0x1.04ef68p-4, -0x1.0ca31ep+0, 0x1.a6791ep+0, -0x1.3816cp-7, -0x1.ed496ap-3, 0x1.0b54ecp-3, -0x1.044afp-6, 0x1.06cffcp-4, 0x1.0efd78p+0, 0x1.69775cp-1, -0x1.15ec38p+0, 0x1.c1d8c8p-2, 0x1.e64028p-1, -0x1.1acd9ap-1, -0x1.27c3ap-1, 0x1.a548e2p-3, -0x1.5a9a96p-3, -0x1.ec7ed6p-3, -0x1.32e3ap+0, -0x1.0444f6p-5, 0x1.865948p+0, -0x1.574b56p-1, -0x1.22cc8cp-3, 0x1.e483a4p-2, 0x1.a2a504p-4, 0x1.87172ep-3, 0x1.b05a0ap-4, 0x1.e56c78p-2, -0x1.569f96p-1, 0x1.5231f6p-3, -0x1.59f024p-1, -0x1.99f84cp-3, 0x1.030192p-2, -0x1.bec38p-1, -0x1.a3f8d8p-4, 0x1.e6dfbep-5, -0x1.634cacp-2, 0x1.eef66ep-2, -0x1.304ee4p+0, 0x1.063f36p+0)]
# {OUT} Y_N = [f1:(-0x1.4eabfp-1, -0x1.bf5eecp-3, -0x1.cb8388p-1, 0x1.1f9816p-2, -0x1.790036p-3, 0x1.4cdccp-8, 0x1.8a3082p-1, -0x1.5f0c1p-1, 0x1.74fe3ep-2, 0x1.a34154p-1, 0x1.3caae8p+0, -0x1.d545b6p-4, 0x1.aa4264p-4, -0x1.cd118p-8, 0x1.6503dap+0, -0x1.97b9cp-5, 0x1.2ac96cp+0, 0x1.65a414p+0, -0x1.c8ff16p-3, 0x1.3e26p-3, -0x1.08aefp-3, 0x1.3a4fb8p+0, 0x1.3892b8p-1, -0x1.c3626ep+0, 0x1.6e174p-7, -0x1.04f00ap-1, -0x1.ffebe6p+0, -0x1.cdae04p-1, -0x1.326b84p-4, 0x1.aeee0ap-3, 0x1.5ab15ep-4, -0x1.5d002p-1, -0x1.3a096cp-3, 0x1.a7dfep-3, -0x1.44b404p-1, -0x1.254ce8p-2, -0x1.834828p+0, 0x1.689eacp-1, -0x1.8f64b4p-3, -0x1.175774p+0, -0x1.c9f37p-1, 0x1.0c47ccp-7, -0x1.448478p-1, -0x1.5b8cfp-3, -0x1.8df72p-8, -0x1.ab712cp-1, -0x1.1ec958p-5, -0x1.5b0ea8p-1),
#              f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Modem_SCMA::filter(const float32 Y_N1[6x48], float32 Y_N2[6x48])
# {IN}  Y_N1 = [f1:(-0x1.4eabfp-1, -0x1.bf5eecp-3, -0x1.cb8388p-1, 0x1.1f9816p-2, -0x1.790036p-3, 0x1.4cdccp-8, 0x1.8a3082p-1, -0x1.5f0c1p-1, 0x1.74fe3ep-2, 0x1.a34154p-1, 0x1.3caae8p+0, -0x1.d545b6p-4, 0x1.aa4264p-4, -0x1.cd118p-8, 0x1.6503dap+0, -0x1.97b9cp-5, 0x1.2ac96cp+0, 0x1.65a414p+0, -0x1.c8ff16p-3, 0x1.3e26p-3, -0x1.08aefp-3, 0x1.3a4fb8p+0, 0x1.3892b8p-1, -0x1.c3626ep+0, 0x1.6e174p-7, -0x1.04f00ap-1, -0x1.ffebe6p+0, -0x1.cdae04p-1, -0x1.326b84p-4, 0x1.aeee0ap-3, 0x1.5ab15ep-4, -0x1.5d002p-1, -0x1.3a096cp-3, 0x1.a7dfep-3, -0x1.44b404p-1, -0x1.254ce8p-2, -0x1.834828p+0, 0x1.689eacp-1, -0x1.8f64b4p-3, -0x1.175774p+0, -0x1.c9f37p-1, 0x1.0c47ccp-7, -0x1.448478p-1, -0x1.5b8cfp-3, -0x1.8df72p-8, -0x1.ab712cp-1, -0x1.1ec958p-5, -0x1.5b0ea8p-1),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# {OUT} Y_N2 = [f1:(-0x1.4eabfp-1, -0x1.bf5eecp-3, -0x1.cb8388p-1, 0x1.1f9816p-2, -0x1.790036p-3, 0x1.4cdccp-8, 0x1.8a3082p-1, -0x1.5f0c1p-1, 0x1.74fe3ep-2, 0x1.a34154p-1, 0x1.3caae8p+0, -0x1.d545b6p-4, 0x1.aa4264p-4, -0x1.cd118p-8, 0x1.6503dap+0, -0x1.97b9cp-5, 0x1.2ac96cp+0, 0x1.65a414p+0, -0x1.c8ff16p-3, 0x1.3e26p-3, -0x1.08aefp-3, 0x1.3a4fb8p+0, 0x1.3892b8p-1, -0x1.c3626ep+0, 0x1.6e174p-7, -0x1.04f00ap-1, -0x1.ffebe6p+0, -0x1.cdae04p-1, -0x1.326b84p-4, 0x1.aeee0ap-3, 0x1.5ab15ep-4, -0x1.5d002p-1, -0x1.3a096cp-3, 0x1.a7dfep-3, -0x1.44b404p-1, -0x1.254ce8p-2, -0x1.834828p+0, 0x1.689eacp-1, -0x1.8f64b4p-3, -0x1.175774p+0, -0x1.c9f37p-1, 0x1.0c47ccp-7, -0x1.448478p-1, -0x1.5b8cfp-3, -0x1.8df72p-8, -0x1.ab712cp-1, -0x1.1ec958p-5, -0x1.5b0ea8p-1),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Modem_SCMA::demodulate_wg(const float32 H_N[6x48], const float32 Y_N1[6x48], float32 Y_N2[6x12])
# {IN}  H_N  = [f1:(0x1.34bfaep-1, 0x1.11d286p+0, 0x1.ac8366p-2, -0x1.94f7b6p-2, -0x1.abcb62p-3, 0x1.77cf8ep-1, 0x1.02c4a6p-1, -0x1.379018p+0, -0x1.83c5dep-1, -0x1.bef104p-3, -0x1.56383cp-1, 0x1.5126a6p-2, -0x1.25e9b4p-1, -0x1.21e6dp-2, 0x1.771e62p+0, 0x1.7c382ap-10, -0x1.238116p-1, 0x1.161a76p-4, 0x1.d1a328p-7, -0x1.15e53ap-2, 0x1.7351ecp-1, -0x1.8ee56p-2, -0x1.e18abep-1, 0x1.f87198p-1, 0x1.49153p-2, -0x1.aabdecp-1, -0x1.2662ep+0, 0x1.5db4aap+0, -0x1.34cf42p-4, 0x1.b739e6p-1, -0x1.89dfa8p-4, 0x1.4fc1ep-3, 0x1.c3af18p-2, 0x1.334bdp-2, 0x1.5206fp-1, 0x1.06ec7cp-2, -0x1.a6c39cp-1, 0x1.678fd2p-1, 0x1.553258p-1, -0x1.68d76p+0, -0x1.ee3a5cp-5, 0x1.fe9acep-1, 0x1.6aad9p-7, 0x1.32b92cp-1, 0x1.ffffccp-1, 0x1.6bb718p-1, -0x1.901a4ep-2, 0x1.74feacp-1),
#               f2:(-0x1.3acc0ep+0, -0x1.070c02p+0, -0x1.7271acp-6, 0x1.44cb2ap-2, 0x1.4d68b2p+0, 0x1.593846p-1, -0x1.699acp-3, 0x1.3f004ap-1, 0x1.f761bep+0, -0x1.89987ep-2, 0x1.01db86p-1, -0x1.004374p+0, 0x1.2c1c8ap-1, -0x1.2f235ep-5, 0x1.2fbee8p+0, 0x1.8958c4p-4, 0x1.11c778p+0, 0x1.8704e2p-1, -0x1.bdd2a2p-5, -0x1.9416aep-2, -0x1.fba03cp-1, -0x1.53facp-3, 0x1.0e3862p-1, -0x1.66e15cp-1, -0x1.9dc27ap-2, 0x1.524048p-4, 0x1.0f8b88p-1, 0x1.15408ap-3, 0x1.3a606cp+0, 0x1.5ad7eep+0, 0x1.d44392p-1, -0x1.da23a6p-3, -0x1.7475bep-6, 0x1.922cf2p-4, 0x1.9b87acp-4, -0x1.133832p-4, -0x1.867fa4p-1, 0x1.85080ep+0, -0x1.1ff574p-3, -0x1.4a312cp+0, -0x1.6a869p-3, 0x1.92da36p-3, -0x1.dae3cp-1, 0x1.292366p+0, 0x1.55d6e6p-2, 0x1.d77dd2p-3, 0x1.4394fp+0, 0x1.348d88p-2),
#               f3:(-0x1.99d00ap-3, -0x1.5e8d88p-2, -0x1.5b485ap-2, 0x1.b0980cp-2, -0x1.93032cp-4, 0x1.02994ep-3, 0x1.e4cce8p-2, 0x1.7ec686p-2, 0x1.a3af16p-1, 0x1.277354p+0, 0x1.117498p-1, 0x1.c8161cp-1, -0x1.c7693cp-2, -0x1.5df41p-2, 0x1.6ca976p-1, -0x1.f400d2p-2, 0x1.123b3ap-1, 0x1.14cf1ep-1, 0x1.07d56ep-1, -0x1.760a9cp-2, -0x1.1b6a5p-3, -0x1.14b758p-5, -0x1.76d448p-1, 0x1.42657ep+0, -0x1.e8904ep-2, 0x1.26cd24p-1, -0x1.4364dep-1, 0x1.6cdc96p+0, -0x1.03c4f4p-4, -0x1.969daap-1, -0x1.001c04p-1, -0x1.1be274p-2, -0x1.222a52p-1, 0x1.114544p+0, -0x1.e2f4ap-5, -0x1.351dfep-3, 0x1.9d11cep-4, 0x1.f449ecp-1, -0x1.211b64p-3, 0x1.9bb9bep-1, -0x1.830f7p-1, -0x1.81d94p-1, -0x1.89279ap-3, -0x1.f2ce1ap-2, -0x1.c3fa8p-4, 0x1.5e253ap+0, 0x1.bfc4a6p-3, 0x1.78285ap-1),
#               f4:(-0x1.80c764p-4, 0x1.e25704p-3, 0x1.309e42p-4, -0x1.5f4e98p-1, 0x1.9cca44p-2, 0x1.b0a8cep-1, 0x1.5e650ep-2, -0x1.31c2d8p-1, -0x1.9ea1p-2, 0x1.0ca23ep-4, 0x1.13ccbcp-2, 0x1.c48a88p-9, -0x1.807566p-1, -0x1.97d55p-2, -0x1.3e7466p-1, -0x1.17ffbap-1, 0x1.4ebdbep-3, 0x1.5109a2p-1, 0x1.808986p-2, 0x1.7f627cp-7, -0x1.45f2b2p-1, 0x1.50d896p-4, -0x1.2f6e48p+0, 0x1.b50c44p-2, -0x1.f29c92p+0, 0x1.1b3de6p-5, 0x1.b5793ep-2, 0x1.2dca06p-4, 0x1.44563p-1, 0x1.735304p-3, 0x1.75379p+0, -0x1.69c08ap+0, 0x1.76b2ep-7, -0x1.6d4fcp-2, 0x1.7c2526p-8, -0x1.6c7386p-1, 0x1.221076p-2, -0x1.b507f6p-2, -0x1.5c12c6p-1, 0x1.9c0326p-1, 0x1.51adf2p-1, 0x1.76e12p-1, -0x1.2042fcp-3, 0x1.265aa2p-1, -0x1.81f528p-2, 0x1.9fee84p-1, 0x1.1248fep+0, 0x1.7f9b5ap-4),
#               f5:(-0x1.8f1c08p-7, 0x1.927cfap-2, -0x1.046746p-2, -0x1.9001ecp-3, 0x1.2d6d4p-1, -0x1.ff7b28p-5, 0x1.298fp-3, 0x1.0a84aap-1, -0x1.9c7bep-1, -0x1.34dd72p+0, 0x1.81ca1ap-2, 0x1.40590cp-1, 0x1.2fb842p+0, -0x1.5628fcp-3, 0x1.62e76cp-2, -0x1.309338p+0, 0x1.8fb02cp-1, -0x1.74984cp-2, 0x1.0c6fd2p-1, -0x1.7f23fap-1, 0x1.dff9aep-2, -0x1.37dca2p-4, -0x1.c483cap-2, 0x1.4a37e6p-4, 0x1.36ff42p-1, 0x1.8bbe2cp-5, 0x1.06c084p-1, 0x1.ed2908p-2, 0x1.9d9734p-1, -0x1.16df7ap-2, -0x1.462056p-2, -0x1.242a36p-3, 0x1.af86f6p-1, -0x1.b644c6p-3, -0x1.6d383ep-3, -0x1.c52e56p-2, -0x1.162b86p-1, -0x1.9f6ae4p-1, -0x1.af4872p-1, -0x1.1fed22p-1, -0x1.ee4108p-2, 0x1.617c98p+0, 0x1.753edcp-2, 0x1.050ab8p-2, -0x1.ab8e8cp-1, -0x1.8e9928p-2, 0x1.f855a8p-2, 0x1.a5fc06p-3),
#               f6:(0x1.171c2p-3, -0x1.deadd6p-1, 0x1.b8bf7ap-1, -0x1.10ce7ep-1, 0x1.3de6eap-4, 0x1.f2366p-1, 0x1.1ee15ap-1, 0x1.54d03p-1, -0x1.04ef68p-4, -0x1.0ca31ep+0, 0x1.a6791ep+0, -0x1.3816cp-7, -0x1.ed496ap-3, 0x1.0b54ecp-3, -0x1.044afp-6, 0x1.06cffcp-4, 0x1.0efd78p+0, 0x1.69775cp-1, -0x1.15ec38p+0, 0x1.c1d8c8p-2, 0x1.e64028p-1, -0x1.1acd9ap-1, -0x1.27c3ap-1, 0x1.a548e2p-3, -0x1.5a9a96p-3, -0x1.ec7ed6p-3, -0x1.32e3ap+0, -0x1.0444f6p-5, 0x1.865948p+0, -0x1.574b56p-1, -0x1.22cc8cp-3, 0x1.e483a4p-2, 0x1.a2a504p-4, 0x1.87172ep-3, 0x1.b05a0ap-4, 0x1.e56c78p-2, -0x1.569f96p-1, 0x1.5231f6p-3, -0x1.59f024p-1, -0x1.99f84cp-3, 0x1.030192p-2, -0x1.bec38p-1, -0x1.a3f8d8p-4, 0x1.e6dfbep-5, -0x1.634cacp-2, 0x1.eef66ep-2, -0x1.304ee4p+0, 0x1.063f36p+0)]
# {IN}  Y_N1 = [f1:(-0x1.4eabfp-1, -0x1.bf5eecp-3, -0x1.cb8388p-1, 0x1.1f9816p-2, -0x1.790036p-3, 0x1.4cdccp-8, 0x1.8a3082p-1, -0x1.5f0c1p-1, 0x1.74fe3ep-2, 0x1.a34154p-1, 0x1.3caae8p+0, -0x1.d545b6p-4, 0x1.aa4264p-4, -0x1.cd118p-8, 0x1.6503dap+0, -0x1.97b9cp-5, 0x1.2ac96cp+0, 0x1.65a414p+0, -0x1.c8ff16p-3, 0x1.3e26p-3, -0x1.08aefp-3, 0x1.3a4fb8p+0, 0x1.3892b8p-1, -0x1.c3626ep+0, 0x1.6e174p-7, -0x1.04f00ap-1, -0x1.ffebe6p+0, -0x1.cdae04p-1, -0x1.326b84p-4, 0x1.aeee0ap-3, 0x1.5ab15ep-4, -0x1.5d002p-1, -0x1.3a096cp-3, 0x1.a7dfep-3, -0x1.44b404p-1, -0x1.254ce8p-2, -0x1.834828p+0, 0x1.689eacp-1, -0x1.8f64b4p-3, -0x1.175774p+0, -0x1.c9f37p-1, 0x1.0c47ccp-7, -0x1.448478p-1, -0x1.5b8cfp-3, -0x1.8df72p-8, -0x1.ab712cp-1, -0x1.1ec958p-5, -0x1.5b0ea8p-1),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# {OUT} Y_N2 = [f1:(0x1.e567fap+2, 0x1.082f64p+2, 0x1.6e14bep+2, 0x1.52424ap+1, -0x1.3c676ap+3, -0x1.c67dd2p+1, 0x1.042888p+0, -0x1.bcdaep+2, 0x1.d3395ap+1, 0x1.0953bap+2, 0x1.3ad57p-1, -0x1.f6c7p-2),
#               f2:(0x1.d2cc36p+1, -0x1.dffbcp-2, 0x1.021p+0, -0x1.9d7208p-1, 0x1.60d47cp+2, 0x1.ac7c3cp+2, -0x1.64ada6p+1, 0x1.8bf2cp+0, 0x1.c2e1ep+1, -0x1.45377ap+3, 0x1.fb9d4p-4, 0x1.3fde04p+0),
#               f3:(0x1.269p-3, -0x1.5bd19p-1, -0x1.e0c332p+1, -0x1.40e868p+0, -0x1.04e24p-4, -0x1.c5b64p-1, 0x1.a18274p+2, -0x1.7980e4p+3, -0x1.56b994p+0, 0x1.4b1b8p-2, -0x1.0b3ca2p+1, 0x1.fb5f2p+0),
#               f4:(-0x1.162598p-1, -0x1.e65874p+0, 0x1.28a2bp-1, -0x1.2f8d6p-1, 0x1.0ef978p+2, -0x1.d8412ap+2, 0x1.ac695cp+1, 0x1.d7aa76p+1, -0x1.fcdc2p-2, -0x1.188b6p+0, -0x1.59d5e8p+2, 0x1.03233p+0),
#               f5:(-0x1.5f62f8p-1, -0x1.965f88p-1, -0x1.05ef2p+0, 0x1.808104p+1, 0x1.6469dcp+1, -0x1.ada94cp+1, 0x1.127e5p+0, 0x1.65fap+1, -0x1.32bc0cp+1, -0x1.fc525p-2, -0x1.dbdcp-8, -0x1.3412b4p+1),
#               f6:(-0x1.4166e2p+2, -0x1.f9547p+1, 0x1.f43dfcp+1, 0x1.8a8502p+0, 0x1.0f53d6p+3, -0x1.2b14e8p+3, 0x1.fe6aa4p+1, -0x1.82f988p+0, -0x1.5db124p+0, -0x1.15d58p-2, 0x1.abc0ep-1, -0x1.89f074p+0)]
# Returned status: 0
#
# Quantizer_standard::process(const float32 Y_N1[6x12], int8 Y_N2[6x12])
# {IN}  Y_N1 = [f1:(0x1.e567fap+2, 0x1.082f64p+2, 0x1.6e14bep+2, 0x1.52424ap+1, -0x1.3c676ap+3, -0x1.c67dd2p+1, 0x1.042888p+0, -0x1.bcdaep+2, 0x1.d3395ap+1, 0x1.0953bap+2, 0x1.3ad57p-1, -0x1.f6c7p-2),
#               f2:(0x1.d2cc36p+1, -0x1.dffbcp-2, 0x1.021p+0, -0x1.9d7208p-1, 0x1.60d47cp+2, 0x1.ac7c3cp+2, -0x1.64ada6p+1, 0x1.8bf2cp+0, 0x1.c2e1ep+1, -0x1.45377ap+3, 0x1.fb9d4p-4, 0x1.3fde04p+0),
#               f3:(0x1.269p-3, -0x1.5bd19p-1, -0x1.e0c332p+1, -0x1.40e868p+0, -0x1.04e24p-4, -0x1.c5b64p-1, 0x1.a18274p+2, -0x1.7980e4p+3, -0x1.56b994p+0, 0x1.4b1b8p-2, -0x1.0b3ca2p+1, 0x1.fb5f2p+0),
#               f4:(-0x1.162598p-1, -0x1.e65874p+0, 0x1.28a2bp-1, -0x1.2f8d6p-1, 0x1.0ef978p+2, -0x1.d8412ap+2, 0x1.ac695cp+1, 0x1.d7aa76p+1, -0x1.fcdc2p-2, -0x1.188b6p+0, -0x1.59d5e8p+2, 0x1.03233p+0),
#               f5:(-0x1.5f62f8p-1, -0x1.965f88p-1, -0x1.05ef2p+0, 0x1.808104p+1, 0x1.6469dcp+1, -0x1.ada94cp+1, 0x1.127e5p+0, 0x1.65fap+1, -0x1.32bc0cp+1, -0x1.fc525p-2, -0x1.dbdcp-8, -0x1.3412b4p+1),
#               f6:(-0x1.4166e2p+2, -0x1.f9547p+1, 0x1.f43dfcp+1, 0x1.8a8502p+0, 0x1.0f53d6p+3, -0x1.2b14e8p+3, 0x1.fe6aa4p+1, -0x1.82f988p+0, -0x1.5db124p+0, -0x1.15d58p-2, 0x1.abc0ep-1, -0x1.89f074p+0)]
# {OUT} Y_N2 = [f1:(0x3d, 0x21, 0x2e, 0x15, 0xffffffb1, 0xffffffe4, 0x8, 0xffffffc8, 0x1d, 0x21, 0x5, 0xfffffffc),
#               f2:(0x1d, 0xfffffffc, 0x8, 0xfffffffa, 0x2c, 0x36, 0xffffffea, 0xc, 0x1c, 0xffffffaf, 0x1, 0xa),
#               f3:(0x1, 0xfffffffb, 0xffffffe2, 0xfffffff6, 0xffffffff, 0xfffffff9, 0x34, 0xffffffa2, 0xfffffff5, 0x3, 0xffffffef, 0x10),
#               f4:(0xfffffffc, 0xfffffff1, 0x5, 0xfffffffb, 0x22, 0xffffffc5, 0x1b, 0x1d, 0xfffffffc, 0xfffffff7, 0xffffffd5, 0x8),
#               f5:(0xfffffffb, 0xfffffffa, 0xfffffff8, 0x18, 0x16, 0xffffffe5, 0x9, 0x16, 0xffffffed, 0xfffffffc, 0x0, 0xffffffed),
#               f6:(0xffffffd8, 0xffffffe0, 0x1f, 0xc, 0x44, 0xffffffb5, 0x20, 0xfffffff4, 0xfffffff5, 0xfffffffe, 0x7, 0xfffffff4)]
# Returned status: 0
#
# Puncturer_NO::depuncture(const int8 Y_N1[6x12], int8 Y_N2[6x12])
# {IN}  Y_N1 = [f1:(0x3d, 0x21, 0x2e, 0x15, 0xffffffb1, 0xffffffe4, 0x8, 0xffffffc8, 0x1d, 0x21, 0x5, 0xfffffffc),
#               f2:(0x1d, 0xfffffffc, 0x8, 0xfffffffa, 0x2c, 0x36, 0xffffffea, 0xc, 0x1c, 0xffffffaf, 0x1, 0xa),
#               f3:(0x1, 0xfffffffb, 0xffffffe2, 0xfffffff6, 0xffffffff, 0xfffffff9, 0x34, 0xffffffa2, 0xfffffff5, 0x3, 0xffffffef, 0x10),
#               f4:(0xfffffffc, 0xfffffff1, 0x5, 0xfffffffb, 0x22, 0xffffffc5, 0x1b, 0x1d, 0xfffffffc, 0xfffffff7, 0xffffffd5, 0x8),
#               f5:(0xfffffffb, 0xfffffffa, 0xfffffff8, 0x18, 0x16, 0xffffffe5, 0x9, 0x16, 0xffffffed, 0xfffffffc, 0x0, 0xffffffed),
#               f6:(0xffffffd8, 0xffffffe0, 0x1f, 0xc, 0x44, 0xffffffb5, 0x20, 0xfffffff4, 0xfffffff5, 0xfffffffe, 0x7, 0xfffffff4)]
# {OUT} Y_N2 = [f1:(0x3d, 0x21, 0x2e, 0x15, 0xffffffb1, 0xffffffe4, 0x8, 0xffffffc8, 0x1d, 0x21, 0x5, 0xfffffffc),
#               f2:(0x1d, 0xfffffffc, 0x8, 0xfffffffa, 0x2c, 0x36, 0xffffffea, 0xc, 0x1c, 0xffffffaf, 0x1, 0xa),
#               f3:(0x1, 0xfffffffb, 0xffffffe2, 0xfffffff6, 0xffffffff, 0xfffffff9, 0x34, 0xffffffa2, 0xfffffff5, 0x3, 0xffffffef, 0x10),
#               f4:(0xfffffffc, 0xfffffff1, 0x5, 0xfffffffb, 0x22, 0xffffffc5, 0x1b, 0x1d, 0xfffffffc, 0xfffffff7, 0xffffffd5, 0x8),
#               f5:(0xfffffffb, 0xfffffffa, 0xfffffff8, 0x18, 0x16, 0xffffffe5, 0x9, 0x16, 0xffffffed, 0xfffffffc, 0x0, 0xffffffed),
#               f6:(0xffffffd8, 0xffffffe0, 0x1f, 0xc, 0x44, 0xffffffb5, 0x20, 0xfffffff4, 0xfffffff5, 0xfffffffe, 0x7, 0xfffffff4)]
# Returned status: 0
#
# Decoder_NO::decode_siho(const int8 Y_N[6x12], int8 V_K[6x12])
# {IN}  Y_N = [f1:(0x3d, 0x21, 0x2e, 0x15, 0xffffffb1, 0xffffffe4, 0x8, 0xffffffc8, 0x1d, 0x21, 0x5, 0xfffffffc),
#              f2:(0x1d, 0xfffffffc, 0x8, 0xfffffffa, 0x2c, 0x36, 0xffffffea, 0xc, 0x1c, 0xffffffaf, 0x1, 0xa),
#              f3:(0x1, 0xfffffffb, 0xffffffe2, 0xfffffff6, 0xffffffff, 0xfffffff9, 0x34, 0xffffffa2, 0xfffffff5, 0x3, 0xffffffef, 0x10),
#              f4:(0xfffffffc, 0xfffffff1, 0x5, 0xfffffffb, 0x22, 0xffffffc5, 0x1b, 0x1d, 0xfffffffc, 0xfffffff7, 0xffffffd5, 0x8),
#              f5:(0xfffffffb, 0xfffffffa, 0xfffffff8, 0x18, 0x16, 0xffffffe5, 0x9, 0x16, 0xffffffed, 0xfffffffc, 0x0, 0xffffffed),
#              f6:(0xffffffd8, 0xffffffe0, 0x1f, 0xc, 0x44, 0xffffffb5, 0x20, 0xfffffff4, 0xfffffff5, 0xfffffffe, 0x7, 0xfffffff4)]
# {OUT} V_K = [f1:(0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1),
#              f2:(0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0),
#              f3:(0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0),
#              f4:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0),
#              f5:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1),
#              f6:(0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1)]
# Returned status: 0
#
# CRC_NO::extract(const int8 V_K1[6x12], int8 V_K2[6x12])
# {IN}  V_K1 = [f1:(0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1),
#               f2:(0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0),
#               f3:(0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0),
#               f4:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0),
#               f5:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1),
#               f6:(0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1)]
# {OUT} V_K2 = [f1:(0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1),
#               f2:(0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0),
#               f3:(0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0),
#               f4:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0),
#               f5:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1),
#               f6:(0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1)]
# Returned status: 0
#
# Monitor_BFER::check_errors(const int8 U[6x12], const int8 V[6x12])
# {IN}  U = [f1:(0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#            f2:(0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0),
#            f3:(0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0),
#            f4:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0),
#            f5:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1),
#            f6:(0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1)]
# {IN}  V = [f1:(0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1),
#            f2:(0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0),
#            f3:(0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0),
#            f4:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0),
#            f5:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1),
#            f6:(0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1)]
# Returned status: 7
#
# -------------------------------
# New communication (nÂ°4)
# -------------------------------
#
# Source_random::generate(int8 U_K[6x12])
# {OUT} U_K = [f1:(0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0),
#              f2:(0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0),
#              f3:(0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0),
#              f4:(0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#              f5:(0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0),
#              f6:(0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1)]
# Returned status: 0
#
# CRC_NO::build(const int8 U_K1[6x12], int8 U_K2[6x12])
# {IN}  U_K1 = [f1:(0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0),
#               f2:(0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0),
#               f3:(0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0),
#               f4:(0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#               f5:(0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0),
#               f6:(0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1)]
# {OUT} U_K2 = [f1:(0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0),
#               f2:(0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0),
#               f3:(0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0),
#               f4:(0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#               f5:(0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0),
#               f6:(0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1)]
# Returned status: 0
#
# Encoder_NO::encode(const int8 U_K[6x12], int8 X_N[6x12])
# {IN}  U_K = [f1:(0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0),
#              f2:(0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0),
#              f3:(0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0),
#              f4:(0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#              f5:(0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0),
#              f6:(0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1)]
# {OUT} X_N = [f1:(0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0),
#              f2:(0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0),
#              f3:(0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0),
#              f4:(0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#              f5:(0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0),
#              f6:(0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1)]
# Returned status: 0
#
# Puncturer_NO::puncture(const int8 X_N1[6x12], int8 X_N2[6x12])
# {IN}  X_N1 = [f1:(0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0),
#               f2:(0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0),
#               f3:(0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0),
#               f4:(0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#               f5:(0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0),
#               f6:(0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1)]
# {OUT} X_N2 = [f1:(0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0),
#               f2:(0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0),
#               f3:(0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0),
#               f4:(0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#               f5:(0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0),
#               f6:(0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1)]
# Returned status: 0
#
# Modem_SCMA::modulate(const int8 X_N1[6x12], float32 X_N2[6x48])
# {IN}  X_N1 = [f1:(0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0),
#               f2:(0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0),
#               f3:(0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0),
#               f4:(0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#               f5:(0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0),
#               f6:(0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1)]
# {OUT} X_N2 = [f1:(0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0),
#               f2:(-0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0),
#               f3:(-0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3),
#               f5:(-0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2),
#               f6:(0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Channel_Rayleigh_LLR::add_noise_wg(const float32 X_N[6x48], float32 H_N[6x48], float32 Y_N[6x48])
# {IN}  X_N = [f1:(0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0),
#              f2:(-0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0),
#              f3:(-0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3),
#              f5:(-0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2),
#              f6:(0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0)]
# {OUT} H_N = [f1:(-0x1.b46a54p-3, -0x1.654ee8p-2, -0x1.0c7e9p+0, 0x1.59abc6p+0, -0x1.29d1ep-2, 0x1.04954ap-1, 0x1.d7545p-2, 0x1.75adbcp-3, 0x1.21a26cp-1, 0x1.372adp-1, 0x1.85130ap-2, -0x1.94f742p-3, 0x1.5dcc6p+0, 0x1.fc447ap-3, 0x1.d8776p-4, -0x1.a6fa92p-1, 0x1.1faa7ap-1, -0x1.3e1fbp+0, 0x1.0d0a2p-2, -0x1.4e8068p-2, 0x1.05b49ap-3, 0x1.f64c98p-1, -0x1.1c5502p-4, 0x1.95695ap-2, -0x1.1b5574p-2, -0x1.37d62ep+0, -0x1.8f7384p+0, 0x1.ee40dcp-1, 0x1.8be484p-2, 0x1.19a31ep+0, 0x1.2afaacp-2, 0x1.16a98p-1, 0x1.5a79d4p-1, -0x1.dbff78p-5, 0x1.c06cbep-1, 0x1.0e8c5cp-1, 0x1.d1341p-3, -0x1.cec33cp-3, -0x1.f982b2p-3, -0x1.b1126cp-1, -0x1.f21e82p-1, -0x1.b77916p-2, 0x1.a913e8p-2, 0x1.91fa5p-1, -0x1.0143fcp+0, -0x1.e187fep-4, -0x1.df98e8p-3, -0x1.080ac6p+0),
#              f2:(-0x1.38c32p-1, 0x1.5f230ep-2, -0x1.50d624p-2, -0x1.1f91c6p-3, -0x1.380d8p-1, -0x1.344a12p-1, -0x1.0de4d8p-3, -0x1.38fdecp-2, 0x1.2706ap-1, -0x1.47dcfcp-2, -0x1.6de4d2p-1, -0x1.a7efbp-2, -0x1.375826p-2, -0x1.098f3p+0, 0x1.c68058p-7, -0x1.065498p+0, -0x1.436226p-2, 0x1.552882p-1, -0x1.0cade2p+0, 0x1.23a3b8p-1, -0x1.cad436p-4, -0x1.153d26p-4, -0x1.9b1ad6p-5, 0x1.18a5e4p-2, -0x1.e26ddep-3, 0x1.6b486ep+0, 0x1.2fd93cp-1, 0x1.f7a3p-3, -0x1.d3d48p-5, -0x1.5edce6p-3, -0x1.80ecaap-3, 0x1.ce27dep-3, -0x1.bfe0f4p+0, -0x1.a09c24p-2, -0x1.18a422p-1, 0x1.0f53f8p-2, -0x1.6b111cp+0, -0x1.0f4c7p-5, 0x1.96f6bap-1, 0x1.79041ep-3, -0x1.e9c71cp+0, -0x1.14a1f2p-3, -0x1.efd81p-2, 0x1.d92adp-3, 0x1.337056p-2, 0x1.0174f6p-2, -0x1.b7cd9cp-3, 0x1.f7a166p-1),
#              f3:(-0x1.3c409p-1, -0x1.996feep-3, -0x1.25ed92p-2, -0x1.22a14cp+0, 0x1.10fb9ap-2, 0x1.805936p-1, -0x1.f87ebcp-1, 0x1.0a6408p-1, 0x1.84151ap-1, 0x1.09c2bp+0, 0x1.51c3ap-1, 0x1.c7c3ep-2, 0x1.eceeb2p-1, -0x1.d6c388p-3, -0x1.48b7dp-3, -0x1.3ad1b6p+0, 0x1.04ff04p-2, 0x1.c56e1p-2, -0x1.88fc88p-5, 0x1.0eff1ep-7, -0x1.2aa318p-1, 0x1.120616p-2, -0x1.7b74c6p-2, -0x1.1c0686p-4, -0x1.dc58bep-2, 0x1.87a292p-1, 0x1.75c9aap-1, -0x1.9a588ep-3, -0x1.f13d84p-4, 0x1.49ede4p-3, 0x1.596266p-2, -0x1.168d8cp+0, 0x1.b666p-2, 0x1.403faap-4, -0x1.1f3e5cp-3, -0x1.6cff32p-2, -0x1.30f464p-5, -0x1.2d90d2p-2, -0x1.622bd8p+0, -0x1.a4288ep+0, -0x1.37a7cp-1, -0x1.4494bp-1, -0x1.1076bp-3, -0x1.76601ep-2, -0x1.10e082p-4, 0x1.2549dep-1, 0x1.89d5bcp-1, 0x1.2dfbaap-1),
#              f4:(0x1.4d44c6p-2, 0x1.e4a79ap-3, 0x1.6c2268p-1, 0x1.55f818p-6, -0x1.20c5d6p-4, 0x1.00da3ap-4, -0x1.59241cp-2, 0x1.748daep-2, -0x1.5ae956p+0, -0x1.0b6bacp-3, -0x1.8d8a6ep-1, -0x1.2fa236p+0, -0x1.223aacp+0, 0x1.4bbefcp-1, -0x1.cf6aacp-4, -0x1.a3095cp-2, -0x1.ac977cp-3, -0x1.608862p-1, 0x1.757722p-2, 0x1.00da82p+0, 0x1.ddc75ap-1, -0x1.0e3adp-1, 0x1.4a60dcp+0, 0x1.c65cap-3, -0x1.2a4ab6p-4, -0x1.7e442ap-1, 0x1.129cd4p+0, -0x1.6d87ap-1, 0x1.c202d8p-1, 0x1.ddac9ep-3, -0x1.edc79p-3, 0x1.ca9ac8p-2, -0x1.3e6612p-3, 0x1.70140ap+0, 0x1.47a854p-2, 0x1.268be8p-2, -0x1.5f68b8p-2, -0x1.7db95ap-6, -0x1.d4f9aep-2, 0x1.2140b8p-1, 0x1.6e5762p-4, 0x1.a2d69ap-2, -0x1.43b5acp-3, 0x1.c3ceb4p-1, 0x1.5e3e34p-1, -0x1.4ee438p-2, 0x1.74149ep-1, -0x1.09fef4p-1),
#              f5:(-0x1.d6d8eep-1, -0x1.f20dcap-6, 0x1.95bf0cp-1, -0x1.f58d96p-5, 0x1.db4f16p-1, -0x1.03979p-1, -0x1.5b4592p-1, 0x1.389e1cp-2, 0x1.ecc35ap-9, -0x1.ca2a5ap-4, 0x1.fbaeaep-1, -0x1.1f5852p-1, 0x1.5980aep-3, 0x1.717bf6p-2, 0x1.b5328ap+0, -0x1.ef25a4p-3, -0x1.021fep-2, 0x1.3d9e7ap-4, -0x1.408b9ap-3, -0x1.4a3f8p-1, 0x1.8c009p-1, 0x1.af7a52p-3, -0x1.88cb9ap-1, -0x1.a94822p-1, 0x1.2d1ab2p-3, 0x1.9d1f28p-1, 0x1.6be19p-5, -0x1.7e987cp-1, -0x1.bd3268p-1, -0x1.a04322p-1, -0x1.62ed1ap-1, -0x1.0902b6p-2, 0x1.4ba85ap-1, 0x1.424e2p-1, 0x1.7188b6p+0, -0x1.33083cp+0, 0x1.cc4b8p-2, -0x1.850676p-2, 0x1.c7b428p-1, 0x1.f38fa6p-1, 0x1.2ee8a8p+0, 0x1.2a768ap+0, -0x1.72b01ap-4, -0x1.ad50fcp-1, -0x1.3184cap-2, 0x1.627d08p+0, -0x1.ccbe6cp-2, -0x1.d2f23p-2),
#              f6:(0x1.f60bacp-1, -0x1.ab41cep-1, -0x1.09380ep-2, -0x1.e9c668p-1, -0x1.49f5f2p-1, 0x1.365c92p+0, -0x1.12f8bp+0, -0x1.dcfc88p-2, 0x1.25a4c8p+0, 0x1.86a172p+0, -0x1.b0948ep-1, -0x1.add33cp-3, 0x1.e07ea8p-3, 0x1.8c8fb4p-4, -0x1.b18a3ep-1, -0x1.006a7ep+0, 0x1.395c74p-1, -0x1.d5ccd4p-3, 0x1.0b057cp+1, -0x1.71048ep-1, 0x1.120dep-1, 0x1.650c68p+0, 0x1.3c08d4p-1, -0x1.d3e2dp-3, 0x1.279f56p+0, -0x1.133f08p+0, 0x1.93002cp-5, 0x1.01b4e6p-3, 0x1.291704p-2, 0x1.ccfb8cp-3, -0x1.2a5b28p-4, -0x1.536556p-1, 0x1.431e24p+0, 0x1.7ef934p+0, -0x1.62c43ep-2, 0x1.00b7c2p-1, -0x1.c01d6ep-2, 0x1.7890ccp+0, 0x1.1f7fb8p-3, 0x1.c6cae6p-5, -0x1.358da4p-2, 0x1.0fc50ap-2, 0x1.9ad9bep-2, -0x1.0aef28p-1, 0x1.9fd45ap-3, -0x1.ff1afep-2, 0x1.6d0ce4p-4, 0x1.3ab6b4p-3)]
# {OUT} Y_N = [f1:(0x1.88313ap-1, 0x1.025d4ap-1, 0x1.253232p-1, 0x1.1a4ea8p+0, 0x1.ff63ep-2, 0x1.efb8fp-3, -0x1.9d4c56p-2, -0x1.9f708ap-2, -0x1.176ae2p-1, -0x1.2d6794p-1, -0x1.00515cp+0, -0x1.27ec5p-3, -0x1.6cdc8ap-2, -0x1.2c3fdcp-2, -0x1.f1cec2p-3, -0x1.04556cp-2, -0x1.e0a9fp-2, 0x1.4201c8p-1, 0x1.700b3p-3, -0x1.79d67p-3, -0x1.19ff92p-1, -0x1.9311fcp-1, -0x1.0877bap-1, -0x1.7ea92p-6, -0x1.3b7b2ap-5, 0x1.251f5p-1, -0x1.1df846p-2, 0x1.701d16p-2, 0x1.6def34p-1, 0x1.54294cp-4, -0x1.7e19b4p-5, -0x1.e34ecep-1, -0x1.af6cb4p-5, -0x1.25e16ep-2, -0x1.4218cp-8, -0x1.15092p-2, -0x1.5a3a62p+0, -0x1.74b76cp-1, -0x1.a024b8p-1, 0x1.ad7e9cp-2, -0x1.612402p+0, 0x1.d1319p-5, -0x1.024ae6p-1, -0x1.cb3088p-3, 0x1.ebd54cp-1, 0x1.28212p-6, 0x1.7d1f78p-3, -0x1.17df7ep+0),
#              f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Modem_SCMA::filter(const float32 Y_N1[6x48], float32 Y_N2[6x48])
# {IN}  Y_N1 = [f1:(0x1.88313ap-1, 0x1.025d4ap-1, 0x1.253232p-1, 0x1.1a4ea8p+0, 0x1.ff63ep-2, 0x1.efb8fp-3, -0x1.9d4c56p-2, -0x1.9f708ap-2, -0x1.176ae2p-1, -0x1.2d6794p-1, -0x1.00515cp+0, -0x1.27ec5p-3, -0x1.6cdc8ap-2, -0x1.2c3fdcp-2, -0x1.f1cec2p-3, -0x1.04556cp-2, -0x1.e0a9fp-2, 0x1.4201c8p-1, 0x1.700b3p-3, -0x1.79d67p-3, -0x1.19ff92p-1, -0x1.9311fcp-1, -0x1.0877bap-1, -0x1.7ea92p-6, -0x1.3b7b2ap-5, 0x1.251f5p-1, -0x1.1df846p-2, 0x1.701d16p-2, 0x1.6def34p-1, 0x1.54294cp-4, -0x1.7e19b4p-5, -0x1.e34ecep-1, -0x1.af6cb4p-5, -0x1.25e16ep-2, -0x1.4218cp-8, -0x1.15092p-2, -0x1.5a3a62p+0, -0x1.74b76cp-1, -0x1.a024b8p-1, 0x1.ad7e9cp-2, -0x1.612402p+0, 0x1.d1319p-5, -0x1.024ae6p-1, -0x1.cb3088p-3, 0x1.ebd54cp-1, 0x1.28212p-6, 0x1.7d1f78p-3, -0x1.17df7ep+0),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# {OUT} Y_N2 = [f1:(0x1.88313ap-1, 0x1.025d4ap-1, 0x1.253232p-1, 0x1.1a4ea8p+0, 0x1.ff63ep-2, 0x1.efb8fp-3, -0x1.9d4c56p-2, -0x1.9f708ap-2, -0x1.176ae2p-1, -0x1.2d6794p-1, -0x1.00515cp+0, -0x1.27ec5p-3, -0x1.6cdc8ap-2, -0x1.2c3fdcp-2, -0x1.f1cec2p-3, -0x1.04556cp-2, -0x1.e0a9fp-2, 0x1.4201c8p-1, 0x1.700b3p-3, -0x1.79d67p-3, -0x1.19ff92p-1, -0x1.9311fcp-1, -0x1.0877bap-1, -0x1.7ea92p-6, -0x1.3b7b2ap-5, 0x1.251f5p-1, -0x1.1df846p-2, 0x1.701d16p-2, 0x1.6def34p-1, 0x1.54294cp-4, -0x1.7e19b4p-5, -0x1.e34ecep-1, -0x1.af6cb4p-5, -0x1.25e16ep-2, -0x1.4218cp-8, -0x1.15092p-2, -0x1.5a3a62p+0, -0x1.74b76cp-1, -0x1.a024b8p-1, 0x1.ad7e9cp-2, -0x1.612402p+0, 0x1.d1319p-5, -0x1.024ae6p-1, -0x1.cb3088p-3, 0x1.ebd54cp-1, 0x1.28212p-6, 0x1.7d1f78p-3, -0x1.17df7ep+0),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Modem_SCMA::demodulate_wg(const float32 H_N[6x48], const float32 Y_N1[6x48], float32 Y_N2[6x12])
# {IN}  H_N  = [f1:(-0x1.b46a54p-3, -0x1.654ee8p-2, -0x1.0c7e9p+0, 0x1.59abc6p+0, -0x1.29d1ep-2, 0x1.04954ap-1, 0x1.d7545p-2, 0x1.75adbcp-3, 0x1.21a26cp-1, 0x1.372adp-1, 0x1.85130ap-2, -0x1.94f742p-3, 0x1.5dcc6p+0, 0x1.fc447ap-3, 0x1.d8776p-4, -0x1.a6fa92p-1, 0x1.1faa7ap-1, -0x1.3e1fbp+0, 0x1.0d0a2p-2, -0x1.4e8068p-2, 0x1.05b49ap-3, 0x1.f64c98p-1, -0x1.1c5502p-4, 0x1.95695ap-2, -0x1.1b5574p-2, -0x1.37d62ep+0, -0x1.8f7384p+0, 0x1.ee40dcp-1, 0x1.8be484p-2, 0x1.19a31ep+0, 0x1.2afaacp-2, 0x1.16a98p-1, 0x1.5a79d4p-1, -0x1.dbff78p-5, 0x1.c06cbep-1, 0x1.0e8c5cp-1, 0x1.d1341p-3, -0x1.cec33cp-3, -0x1.f982b2p-3, -0x1.b1126cp-1, -0x1.f21e82p-1, -0x1.b77916p-2, 0x1.a913e8p-2, 0x1.91fa5p-1, -0x1.0143fcp+0, -0x1.e187fep-4, -0x1.df98e8p-3, -0x1.080ac6p+0),
#               f2:(-0x1.38c32p-1, 0x1.5f230ep-2, -0x1.50d624p-2, -0x1.1f91c6p-3, -0x1.380d8p-1, -0x1.344a12p-1, -0x1.0de4d8p-3, -0x1.38fdecp-2, 0x1.2706ap-1, -0x1.47dcfcp-2, -0x1.6de4d2p-1, -0x1.a7efbp-2, -0x1.375826p-2, -0x1.098f3p+0, 0x1.c68058p-7, -0x1.065498p+0, -0x1.436226p-2, 0x1.552882p-1, -0x1.0cade2p+0, 0x1.23a3b8p-1, -0x1.cad436p-4, -0x1.153d26p-4, -0x1.9b1ad6p-5, 0x1.18a5e4p-2, -0x1.e26ddep-3, 0x1.6b486ep+0, 0x1.2fd93cp-1, 0x1.f7a3p-3, -0x1.d3d48p-5, -0x1.5edce6p-3, -0x1.80ecaap-3, 0x1.ce27dep-3, -0x1.bfe0f4p+0, -0x1.a09c24p-2, -0x1.18a422p-1, 0x1.0f53f8p-2, -0x1.6b111cp+0, -0x1.0f4c7p-5, 0x1.96f6bap-1, 0x1.79041ep-3, -0x1.e9c71cp+0, -0x1.14a1f2p-3, -0x1.efd81p-2, 0x1.d92adp-3, 0x1.337056p-2, 0x1.0174f6p-2, -0x1.b7cd9cp-3, 0x1.f7a166p-1),
#               f3:(-0x1.3c409p-1, -0x1.996feep-3, -0x1.25ed92p-2, -0x1.22a14cp+0, 0x1.10fb9ap-2, 0x1.805936p-1, -0x1.f87ebcp-1, 0x1.0a6408p-1, 0x1.84151ap-1, 0x1.09c2bp+0, 0x1.51c3ap-1, 0x1.c7c3ep-2, 0x1.eceeb2p-1, -0x1.d6c388p-3, -0x1.48b7dp-3, -0x1.3ad1b6p+0, 0x1.04ff04p-2, 0x1.c56e1p-2, -0x1.88fc88p-5, 0x1.0eff1ep-7, -0x1.2aa318p-1, 0x1.120616p-2, -0x1.7b74c6p-2, -0x1.1c0686p-4, -0x1.dc58bep-2, 0x1.87a292p-1, 0x1.75c9aap-1, -0x1.9a588ep-3, -0x1.f13d84p-4, 0x1.49ede4p-3, 0x1.596266p-2, -0x1.168d8cp+0, 0x1.b666p-2, 0x1.403faap-4, -0x1.1f3e5cp-3, -0x1.6cff32p-2, -0x1.30f464p-5, -0x1.2d90d2p-2, -0x1.622bd8p+0, -0x1.a4288ep+0, -0x1.37a7cp-1, -0x1.4494bp-1, -0x1.1076bp-3, -0x1.76601ep-2, -0x1.10e082p-4, 0x1.2549dep-1, 0x1.89d5bcp-1, 0x1.2dfbaap-1),
#               f4:(0x1.4d44c6p-2, 0x1.e4a79ap-3, 0x1.6c2268p-1, 0x1.55f818p-6, -0x1.20c5d6p-4, 0x1.00da3ap-4, -0x1.59241cp-2, 0x1.748daep-2, -0x1.5ae956p+0, -0x1.0b6bacp-3, -0x1.8d8a6ep-1, -0x1.2fa236p+0, -0x1.223aacp+0, 0x1.4bbefcp-1, -0x1.cf6aacp-4, -0x1.a3095cp-2, -0x1.ac977cp-3, -0x1.608862p-1, 0x1.757722p-2, 0x1.00da82p+0, 0x1.ddc75ap-1, -0x1.0e3adp-1, 0x1.4a60dcp+0, 0x1.c65cap-3, -0x1.2a4ab6p-4, -0x1.7e442ap-1, 0x1.129cd4p+0, -0x1.6d87ap-1, 0x1.c202d8p-1, 0x1.ddac9ep-3, -0x1.edc79p-3, 0x1.ca9ac8p-2, -0x1.3e6612p-3, 0x1.70140ap+0, 0x1.47a854p-2, 0x1.268be8p-2, -0x1.5f68b8p-2, -0x1.7db95ap-6, -0x1.d4f9aep-2, 0x1.2140b8p-1, 0x1.6e5762p-4, 0x1.a2d69ap-2, -0x1.43b5acp-3, 0x1.c3ceb4p-1, 0x1.5e3e34p-1, -0x1.4ee438p-2, 0x1.74149ep-1, -0x1.09fef4p-1),
#               f5:(-0x1.d6d8eep-1, -0x1.f20dcap-6, 0x1.95bf0cp-1, -0x1.f58d96p-5, 0x1.db4f16p-1, -0x1.03979p-1, -0x1.5b4592p-1, 0x1.389e1cp-2, 0x1.ecc35ap-9, -0x1.ca2a5ap-4, 0x1.fbaeaep-1, -0x1.1f5852p-1, 0x1.5980aep-3, 0x1.717bf6p-2, 0x1.b5328ap+0, -0x1.ef25a4p-3, -0x1.021fep-2, 0x1.3d9e7ap-4, -0x1.408b9ap-3, -0x1.4a3f8p-1, 0x1.8c009p-1, 0x1.af7a52p-3, -0x1.88cb9ap-1, -0x1.a94822p-1, 0x1.2d1ab2p-3, 0x1.9d1f28p-1, 0x1.6be19p-5, -0x1.7e987cp-1, -0x1.bd3268p-1, -0x1.a04322p-1, -0x1.62ed1ap-1, -0x1.0902b6p-2, 0x1.4ba85ap-1, 0x1.424e2p-1, 0x1.7188b6p+0, -0x1.33083cp+0, 0x1.cc4b8p-2, -0x1.850676p-2, 0x1.c7b428p-1, 0x1.f38fa6p-1, 0x1.2ee8a8p+0, 0x1.2a768ap+0, -0x1.72b01ap-4, -0x1.ad50fcp-1, -0x1.3184cap-2, 0x1.627d08p+0, -0x1.ccbe6cp-2, -0x1.d2f23p-2),
#               f6:(0x1.f60bacp-1, -0x1.ab41cep-1, -0x1.09380ep-2, -0x1.e9c668p-1, -0x1.49f5f2p-1, 0x1.365c92p+0, -0x1.12f8bp+0, -0x1.dcfc88p-2, 0x1.25a4c8p+0, 0x1.86a172p+0, -0x1.b0948ep-1, -0x1.add33cp-3, 0x1.e07ea8p-3, 0x1.8c8fb4p-4, -0x1.b18a3ep-1, -0x1.006a7ep+0, 0x1.395c74p-1, -0x1.d5ccd4p-3, 0x1.0b057cp+1, -0x1.71048ep-1, 0x1.120dep-1, 0x1.650c68p+0, 0x1.3c08d4p-1, -0x1.d3e2dp-3, 0x1.279f56p+0, -0x1.133f08p+0, 0x1.93002cp-5, 0x1.01b4e6p-3, 0x1.291704p-2, 0x1.ccfb8cp-3, -0x1.2a5b28p-4, -0x1.536556p-1, 0x1.431e24p+0, 0x1.7ef934p+0, -0x1.62c43ep-2, 0x1.00b7c2p-1, -0x1.c01d6ep-2, 0x1.7890ccp+0, 0x1.1f7fb8p-3, 0x1.c6cae6p-5, -0x1.358da4p-2, 0x1.0fc50ap-2, 0x1.9ad9bep-2, -0x1.0aef28p-1, 0x1.9fd45ap-3, -0x1.ff1afep-2, 0x1.6d0ce4p-4, 0x1.3ab6b4p-3)]
# {IN}  Y_N1 = [f1:(0x1.88313ap-1, 0x1.025d4ap-1, 0x1.253232p-1, 0x1.1a4ea8p+0, 0x1.ff63ep-2, 0x1.efb8fp-3, -0x1.9d4c56p-2, -0x1.9f708ap-2, -0x1.176ae2p-1, -0x1.2d6794p-1, -0x1.00515cp+0, -0x1.27ec5p-3, -0x1.6cdc8ap-2, -0x1.2c3fdcp-2, -0x1.f1cec2p-3, -0x1.04556cp-2, -0x1.e0a9fp-2, 0x1.4201c8p-1, 0x1.700b3p-3, -0x1.79d67p-3, -0x1.19ff92p-1, -0x1.9311fcp-1, -0x1.0877bap-1, -0x1.7ea92p-6, -0x1.3b7b2ap-5, 0x1.251f5p-1, -0x1.1df846p-2, 0x1.701d16p-2, 0x1.6def34p-1, 0x1.54294cp-4, -0x1.7e19b4p-5, -0x1.e34ecep-1, -0x1.af6cb4p-5, -0x1.25e16ep-2, -0x1.4218cp-8, -0x1.15092p-2, -0x1.5a3a62p+0, -0x1.74b76cp-1, -0x1.a024b8p-1, 0x1.ad7e9cp-2, -0x1.612402p+0, 0x1.d1319p-5, -0x1.024ae6p-1, -0x1.cb3088p-3, 0x1.ebd54cp-1, 0x1.28212p-6, 0x1.7d1f78p-3, -0x1.17df7ep+0),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# {OUT} Y_N2 = [f1:(-0x1.9be2d8p+1, -0x1.aef546p+1, 0x1.022dcp-1, 0x1.8c0178p+0, 0x1.8085dcp-1, 0x1.c2405p+0, -0x1.d569d8p+2, -0x1.d9bbf8p+2, -0x1.db516ap+1, -0x1.f1734p+0, 0x1.9de828p+2, 0x1.261d0cp+2),
#               f2:(-0x1.daf13p+0, -0x1.38c44p-2, 0x1.30967cp+1, -0x1.78fef4p+0, 0x1.ce8e34p+1, 0x1.2c86dep+0, 0x1.c5d258p-1, 0x1.7cb9cp-1, 0x1.4077b8p+3, -0x1.edb448p+2, 0x1.2cd556p+2, 0x1.aed2d8p+0),
#               f3:(0x1.37d6fap+2, -0x1.a646d8p+1, 0x1.e0911p+2, 0x1.0c04p-3, 0x1.cc8c78p-1, 0x1.49aef8p-2, 0x1.7a618p-5, -0x1.8ab974p+0, -0x1.4f30ep+0, 0x1.3e7cbp-1, -0x1.1d795ap+1, 0x1.a35a14p+0),
#               f4:(-0x1.bf104p-4, -0x1.22696cp+0, 0x1.b12f8p+0, 0x1.3cf1d8p+0, 0x1.e3de44p+2, 0x1.c37d68p+1, 0x1.4690fp+2, -0x1.d8498p-2, 0x1.01c29cp+0, 0x1.df0168p-1, 0x1.3677acp+2, 0x1.113b9p+2),
#               f5:(-0x1.30166p+0, 0x1.6bfddep+2, 0x1.eac54p-2, -0x1.155d7p-2, -0x1.b695d8p+1, 0x1.369e7p-1, 0x1.3edff8p+1, 0x1.9a62acp+0, 0x1.0fe6bap+2, 0x1.2fa29p+2, 0x1.87def8p+1, 0x1.f1128p+0),
#               f6:(-0x1.d83358p+2, 0x1.f204p-4, 0x1.4fc1cp+1, 0x1.439e6cp+0, 0x1.f875f2p+3, -0x1.d99426p+3, -0x1.75e4cp-3, 0x1.247b12p+0, -0x1.110a08p+1, -0x1.25cadcp+1, 0x1.0ecfcp-2, -0x1.69dd42p+1)]
# Returned status: 0
#
# Quantizer_standard::process(const float32 Y_N1[6x12], int8 Y_N2[6x12])
# {IN}  Y_N1 = [f1:(-0x1.9be2d8p+1, -0x1.aef546p+1, 0x1.022dcp-1, 0x1.8c0178p+0, 0x1.8085dcp-1, 0x1.c2405p+0, -0x1.d569d8p+2, -0x1.d9bbf8p+2, -0x1.db516ap+1, -0x1.f1734p+0, 0x1.9de828p+2, 0x1.261d0cp+2),
#               f2:(-0x1.daf13p+0, -0x1.38c44p-2, 0x1.30967cp+1, -0x1.78fef4p+0, 0x1.ce8e34p+1, 0x1.2c86dep+0, 0x1.c5d258p-1, 0x1.7cb9cp-1, 0x1.4077b8p+3, -0x1.edb448p+2, 0x1.2cd556p+2, 0x1.aed2d8p+0),
#               f3:(0x1.37d6fap+2, -0x1.a646d8p+1, 0x1.e0911p+2, 0x1.0c04p-3, 0x1.cc8c78p-1, 0x1.49aef8p-2, 0x1.7a618p-5, -0x1.8ab974p+0, -0x1.4f30ep+0, 0x1.3e7cbp-1, -0x1.1d795ap+1, 0x1.a35a14p+0),
#               f4:(-0x1.bf104p-4, -0x1.22696cp+0, 0x1.b12f8p+0, 0x1.3cf1d8p+0, 0x1.e3de44p+2, 0x1.c37d68p+1, 0x1.4690fp+2, -0x1.d8498p-2, 0x1.01c29cp+0, 0x1.df0168p-1, 0x1.3677acp+2, 0x1.113b9p+2),
#               f5:(-0x1.30166p+0, 0x1.6bfddep+2, 0x1.eac54p-2, -0x1.155d7p-2, -0x1.b695d8p+1, 0x1.369e7p-1, 0x1.3edff8p+1, 0x1.9a62acp+0, 0x1.0fe6bap+2, 0x1.2fa29p+2, 0x1.87def8p+1, 0x1.f1128p+0),
#               f6:(-0x1.d83358p+2, 0x1.f204p-4, 0x1.4fc1cp+1, 0x1.439e6cp+0, 0x1.f875f2p+3, -0x1.d99426p+3, -0x1.75e4cp-3, 0x1.247b12p+0, -0x1.110a08p+1, -0x1.25cadcp+1, 0x1.0ecfcp-2, -0x1.69dd42p+1)]
# {OUT} Y_N2 = [f1:(0xffffffe6, 0xffffffe5, 0x4, 0xc, 0x6, 0xe, 0xffffffc5, 0xffffffc5, 0xffffffe2, 0xfffffff0, 0x34, 0x25),
#               f2:(0xfffffff1, 0xfffffffe, 0x13, 0xfffffff4, 0x1d, 0x9, 0x7, 0x6, 0x50, 0xffffffc2, 0x26, 0xd),
#               f3:(0x27, 0xffffffe6, 0x3c, 0x1, 0x7, 0x3, 0x0, 0xfffffff4, 0xfffffff6, 0x5, 0xffffffee, 0xd),
#               f4:(0xffffffff, 0xfffffff7, 0xe, 0xa, 0x3c, 0x1c, 0x29, 0xfffffffc, 0x8, 0x7, 0x27, 0x22),
#               f5:(0xfffffff6, 0x2d, 0x4, 0xfffffffe, 0xffffffe5, 0x5, 0x14, 0xd, 0x22, 0x26, 0x18, 0x10),
#               f6:(0xffffffc5, 0x1, 0x15, 0xa, 0x7e, 0xffffff8a, 0xffffffff, 0x9, 0xffffffef, 0xffffffee, 0x2, 0xffffffe9)]
# Returned status: 0
#
# Puncturer_NO::depuncture(const int8 Y_N1[6x12], int8 Y_N2[6x12])
# {IN}  Y_N1 = [f1:(0xffffffe6, 0xffffffe5, 0x4, 0xc, 0x6, 0xe, 0xffffffc5, 0xffffffc5, 0xffffffe2, 0xfffffff0, 0x34, 0x25),
#               f2:(0xfffffff1, 0xfffffffe, 0x13, 0xfffffff4, 0x1d, 0x9, 0x7, 0x6, 0x50, 0xffffffc2, 0x26, 0xd),
#               f3:(0x27, 0xffffffe6, 0x3c, 0x1, 0x7, 0x3, 0x0, 0xfffffff4, 0xfffffff6, 0x5, 0xffffffee, 0xd),
#               f4:(0xffffffff, 0xfffffff7, 0xe, 0xa, 0x3c, 0x1c, 0x29, 0xfffffffc, 0x8, 0x7, 0x27, 0x22),
#               f5:(0xfffffff6, 0x2d, 0x4, 0xfffffffe, 0xffffffe5, 0x5, 0x14, 0xd, 0x22, 0x26, 0x18, 0x10),
#               f6:(0xffffffc5, 0x1, 0x15, 0xa, 0x7e, 0xffffff8a, 0xffffffff, 0x9, 0xffffffef, 0xffffffee, 0x2, 0xffffffe9)]
# {OUT} Y_N2 = [f1:(0xffffffe6, 0xffffffe5, 0x4, 0xc, 0x6, 0xe, 0xffffffc5, 0xffffffc5, 0xffffffe2, 0xfffffff0, 0x34, 0x25),
#               f2:(0xfffffff1, 0xfffffffe, 0x13, 0xfffffff4, 0x1d, 0x9, 0x7, 0x6, 0x50, 0xffffffc2, 0x26, 0xd),
#               f3:(0x27, 0xffffffe6, 0x3c, 0x1, 0x7, 0x3, 0x0, 0xfffffff4, 0xfffffff6, 0x5, 0xffffffee, 0xd),
#               f4:(0xffffffff, 0xfffffff7, 0xe, 0xa, 0x3c, 0x1c, 0x29, 0xfffffffc, 0x8, 0x7, 0x27, 0x22),
#               f5:(0xfffffff6, 0x2d, 0x4, 0xfffffffe, 0xffffffe5, 0x5, 0x14, 0xd, 0x22, 0x26, 0x18, 0x10),
#               f6:(0xffffffc5, 0x1, 0x15, 0xa, 0x7e, 0xffffff8a, 0xffffffff, 0x9, 0xffffffef, 0xffffffee, 0x2, 0xffffffe9)]
# Returned status: 0
#
# Decoder_NO::decode_siho(const int8 Y_N[6x12], int8 V_K[6x12])
# {IN}  Y_N = [f1:(0xffffffe6, 0xffffffe5, 0x4, 0xc, 0x6, 0xe, 0xffffffc5, 0xffffffc5, 0xffffffe2, 0xfffffff0, 0x34, 0x25),
#              f2:(0xfffffff1, 0xfffffffe, 0x13, 0xfffffff4, 0x1d, 0x9, 0x7, 0x6, 0x50, 0xffffffc2, 0x26, 0xd),
#              f3:(0x27, 0xffffffe6, 0x3c, 0x1, 0x7, 0x3, 0x0, 0xfffffff4, 0xfffffff6, 0x5, 0xffffffee, 0xd),
#              f4:(0xffffffff, 0xfffffff7, 0xe, 0xa, 0x3c, 0x1c, 0x29, 0xfffffffc, 0x8, 0x7, 0x27, 0x22),
#              f5:(0xfffffff6, 0x2d, 0x4, 0xfffffffe, 0xffffffe5, 0x5, 0x14, 0xd, 0x22, 0x26, 0x18, 0x10),
#              f6:(0xffffffc5, 0x1, 0x15, 0xa, 0x7e, 0xffffff8a, 0xffffffff, 0x9, 0xffffffef, 0xffffffee, 0x2, 0xffffffe9)]
# {OUT} V_K = [f1:(0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0),
#              f2:(0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0),
#              f3:(0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0),
#              f4:(0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#              f5:(0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0),
#              f6:(0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1)]
# Returned status: 0
#
# CRC_NO::extract(const int8 V_K1[6x12], int8 V_K2[6x12])
# {IN}  V_K1 = [f1:(0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0),
#               f2:(0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0),
#               f3:(0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0),
#               f4:(0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#               f5:(0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0),
#               f6:(0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1)]
# {OUT} V_K2 = [f1:(0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0),
#               f2:(0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0),
#               f3:(0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0),
#               f4:(0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#               f5:(0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0),
#               f6:(0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1)]
# Returned status: 0
#
# Monitor_BFER::check_errors(const int8 U[6x12], const int8 V[6x12])
# {IN}  U = [f1:(0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0),
#            f2:(0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0),
#            f3:(0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0),
#            f4:(0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#            f5:(0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0),
#            f6:(0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1)]
# {IN}  V = [f1:(0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0),
#            f2:(0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0),
#            f3:(0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0),
#            f4:(0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#            f5:(0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0),
#            f6:(0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1)]
# Returned status: 8
#
# -------------------------------
# New communication (nÂ°5)
# -------------------------------
#
# Source_random::generate(int8 U_K[6x12])
# {OUT} U_K = [f1:(0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1),
#              f2:(0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#              f3:(0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1),
#              f4:(0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1),
#              f5:(0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0),
#              f6:(0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0)]
# Returned status: 0
#
# CRC_NO::build(const int8 U_K1[6x12], int8 U_K2[6x12])
# {IN}  U_K1 = [f1:(0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1),
#               f2:(0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#               f3:(0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1),
#               f4:(0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1),
#               f5:(0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0),
#               f6:(0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0)]
# {OUT} U_K2 = [f1:(0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1),
#               f2:(0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#               f3:(0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1),
#               f4:(0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1),
#               f5:(0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0),
#               f6:(0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0)]
# Returned status: 0
#
# Encoder_NO::encode(const int8 U_K[6x12], int8 X_N[6x12])
# {IN}  U_K = [f1:(0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1),
#              f2:(0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#              f3:(0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1),
#              f4:(0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1),
#              f5:(0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0),
#              f6:(0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0)]
# {OUT} X_N = [f1:(0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1),
#              f2:(0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#              f3:(0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1),
#              f4:(0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1),
#              f5:(0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0),
#              f6:(0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0)]
# Returned status: 0
#
# Puncturer_NO::puncture(const int8 X_N1[6x12], int8 X_N2[6x12])
# {IN}  X_N1 = [f1:(0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1),
#               f2:(0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#               f3:(0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1),
#               f4:(0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1),
#               f5:(0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0),
#               f6:(0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0)]
# {OUT} X_N2 = [f1:(0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1),
#               f2:(0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#               f3:(0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1),
#               f4:(0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1),
#               f5:(0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0),
#               f6:(0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0)]
# Returned status: 0
#
# Modem_SCMA::modulate(const int8 X_N1[6x12], float32 X_N2[6x48])
# {IN}  X_N1 = [f1:(0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1),
#               f2:(0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#               f3:(0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1),
#               f4:(0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1),
#               f5:(0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0),
#               f6:(0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0)]
# {OUT} X_N2 = [f1:(0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0),
#               f2:(-0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0),
#               f3:(-0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1),
#               f5:(-0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2),
#               f6:(0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Channel_Rayleigh_LLR::add_noise_wg(const float32 X_N[6x48], float32 H_N[6x48], float32 Y_N[6x48])
# {IN}  X_N = [f1:(0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0),
#              f2:(-0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0),
#              f3:(-0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1),
#              f5:(-0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2),
#              f6:(0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0)]
# {OUT} H_N = [f1:(0x1.0982dp+0, 0x1.5d194ep-2, 0x1.53810ap-2, 0x1.b41db2p-2, -0x1.9e1d04p+0, 0x1.18f5fcp+0, 0x1.e821aap-2, -0x1.857e1ep-2, 0x1.22b1bp-1, -0x1.a62258p-5, -0x1.1f2072p-1, 0x1.026348p-4, 0x1.09e6bcp-10, 0x1.bdfca6p-4, -0x1.f8ee9cp-1, 0x1.1742a8p+0, -0x1.1dd7a6p+0, -0x1.95e828p-4, 0x1.b18f5cp-2, -0x1.49a42ep-1, -0x1.ff291cp-5, -0x1.173b96p-5, -0x1.4713ccp-2, -0x1.11f706p-1, -0x1.0d607cp-1, -0x1.f0e33cp-3, -0x1.13e434p+0, -0x1.763ddap-2, -0x1.3e3d34p+0, -0x1.87bd92p-2, -0x1.dd8fc6p-1, -0x1.8dc28p-3, 0x1.f2ep-3, -0x1.a0b5c4p-1, 0x1.6ac1bp-1, 0x1.b903dcp-2, -0x1.394b94p-2, -0x1.2dcb02p-3, 0x1.4df342p-3, 0x1.edf74ep-3, -0x1.0a9f8ap-1, 0x1.90c208p-1, -0x1.b800e4p-1, 0x1.86a53cp+0, -0x1.4c6d6ep-1, 0x1.6ddfe4p-1, 0x1.244708p+0, 0x1.ec287ep-1),
#              f2:(0x1.76dbdcp-1, 0x1.074cdcp+1, -0x1.84f4fap+0, 0x1.6e525cp-6, 0x1.2d2c32p+1, 0x1.1132f6p-4, 0x1.869122p-1, 0x1.b9d496p-2, -0x1.e7d1p-2, 0x1.613aacp-3, 0x1.b2153ep-2, -0x1.17d9a2p-1, -0x1.c5abbap-4, -0x1.098c4cp+0, -0x1.535eeep-2, -0x1.980156p-2, 0x1.111754p-1, 0x1.e9006cp-1, -0x1.20c212p+0, -0x1.347f6ep-1, 0x1.3f04p+0, -0x1.82d17ap-5, -0x1.62b63cp-3, -0x1.557ff6p-2, -0x1.a03104p-3, -0x1.f8e0b8p-1, -0x1.2a460cp-3, -0x1.a2b9eap-4, -0x1.09bcd4p+0, 0x1.992a26p-4, -0x1.6b3868p-1, 0x1.3919c6p-1, 0x1.410868p-1, 0x1.34ab1cp+0, -0x1.6747cp-1, -0x1.4b3372p-1, -0x1.c5870ap-1, -0x1.d9a8b4p-1, -0x1.cec08cp-3, -0x1.ea3d38p-1, -0x1.5b88cap-2, -0x1.e8cd7cp-4, 0x1.8ff1d8p-2, 0x1.c8e7b6p-2, -0x1.a3327ap-2, -0x1.c3992ep-5, -0x1.a62972p-1, -0x1.2ba588p-2),
#              f3:(0x1.7de356p-2, -0x1.91fd62p-1, 0x1.c4451cp-4, -0x1.856b8ep+0, -0x1.44dbaep+0, -0x1.12f416p-1, 0x1.c53c46p+0, -0x1.208af4p-14, 0x1.1391a2p-2, -0x1.f10834p-1, 0x1.d8f14ep-4, 0x1.06902ep-2, -0x1.242722p-1, -0x1.d3e222p-6, -0x1.c8203p-1, -0x1.51cf36p-2, 0x1.14854ep-1, 0x1.679beep-2, -0x1.cc38a6p-2, -0x1.00c0f8p-1, 0x1.fe24b8p-2, 0x1.ec843ep-1, -0x1.f58e94p-2, 0x1.59cd8p-5, 0x1.5e3986p-2, 0x1.ca72fcp-2, 0x1.4c78eap-3, -0x1.90a1ecp-2, -0x1.78069cp-1, 0x1.16cf14p-1, -0x1.b4cb7ep-1, 0x1.4a4b8ap-8, -0x1.b700ecp-1, 0x1.28df9p+0, -0x1.3d7394p-1, -0x1.889p-3, -0x1.56ab7ap+1, 0x1.74a3d2p-2, -0x1.2018fcp+0, -0x1.acd33p-3, -0x1.24efa4p-7, -0x1.3fae9p-2, -0x1.afb72ap-8, -0x1.828122p-1, 0x1.7535d8p-1, 0x1.c18806p-1, -0x1.4c2528p-2, -0x1.4a8288p-3),
#              f4:(0x1.765ffep+0, 0x1.3bb838p-1, 0x1.589b52p-1, 0x1.4fbe4ap-5, 0x1.5246b6p-2, -0x1.0833f8p-2, -0x1.bd25dcp-3, 0x1.ceec7ap-2, 0x1.4c5fa8p+0, 0x1.63e82p-2, -0x1.a02414p-1, -0x1.7bac1cp-3, -0x1.92d988p-1, 0x1.fa1248p-3, -0x1.fdc52ep-1, 0x1.227e26p-3, 0x1.23ff0ep-1, 0x1.3dcc6ep+0, 0x1.e8d80ep-2, 0x1.ce749cp-1, 0x1.c368d2p-8, 0x1.dfa366p-2, -0x1.aac6ap-1, -0x1.233f2ep-2, 0x1.b20972p-8, -0x1.02d014p+0, 0x1.e2fe42p-2, 0x1.cbc26ep-3, -0x1.7ebb44p-1, 0x1.f4eda8p-2, 0x1.b164a4p-2, -0x1.b50ecap-1, 0x1.1cff04p-1, 0x1.1c6fa6p-1, -0x1.4e24e4p-2, 0x1.6d7e3p-2, 0x1.c9ce1p-6, 0x1.bda07p-2, -0x1.7d8faap-2, 0x1.49227p-2, 0x1.5deaccp-1, -0x1.3005fp-3, 0x1.34d078p+0, 0x1.9e83d8p-2, -0x1.73af78p-1, 0x1.4096c4p-3, -0x1.4d5436p-3, -0x1.a056b6p-5),
#              f5:(0x1.7560c6p-4, 0x1.821d32p-2, 0x1.1adfecp-2, 0x1.2f47b2p-1, 0x1.0b6dbcp-1, -0x1.171e94p-2, 0x1.971b5cp-4, -0x1.3a3be6p-1, 0x1.a321eep-6, 0x1.1bed22p+0, 0x1.946ee4p-1, -0x1.b3994ap-2, 0x1.ea689p-1, -0x1.8e51f4p-5, 0x1.0cc8ecp-3, -0x1.251e32p-1, -0x1.31338ep-2, -0x1.b40bb2p-1, 0x1.72563cp-1, -0x1.f8f6dcp-1, 0x1.701f6ap-1, -0x1.9536bep-2, 0x1.a2560ap+0, -0x1.236feep+0, 0x1.af039ep-3, -0x1.b54b28p-3, 0x1.27378cp-1, -0x1.78194ap-2, 0x1.683b06p-1, 0x1.3c2dccp-1, -0x1.04deap-3, -0x1.7ceaf4p-1, -0x1.0d160ap-3, -0x1.1d38f4p-1, -0x1.c7f0bcp-1, 0x1.2bfa7p-4, 0x1.ff9b04p-3, -0x1.94d1e6p-5, -0x1.1cde08p-4, -0x1.457d7p-3, -0x1.42d098p-1, 0x1.dec1bep-4, 0x1.f92acap-2, -0x1.c82722p-1, 0x1.685952p-4, -0x1.fc7738p-2, -0x1.b42b38p-1, -0x1.05c316p+0),
#              f6:(0x1.0d5574p-1, 0x1.0fa77cp-2, -0x1.2962bep-1, -0x1.6a6b22p-1, -0x1.6f1412p-2, 0x1.49525ap+0, -0x1.7e00d8p-6, -0x1.274b62p+0, -0x1.12d364p-3, -0x1.49567p-1, 0x1.b5bcbep-2, 0x1.e83abep-2, 0x1.0f08c2p-1, -0x1.cd71a2p-3, 0x1.c61d36p-3, -0x1.2a4664p-4, 0x1.eba7fap-2, 0x1.b5c76ap+0, 0x1.5958aap-1, 0x1.0646f2p+0, 0x1.1b8632p-1, 0x1.766cf4p-2, 0x1.b93e88p-1, 0x1.31d582p-2, 0x1.6ef098p-2, -0x1.291084p-1, -0x1.7da584p-1, 0x1.da20d6p-2, 0x1.11afe2p-1, -0x1.59df8cp-1, -0x1.8d511ap-1, -0x1.84b3e6p-1, 0x1.a67a56p-1, -0x1.d746fap-1, 0x1.0196e4p+0, -0x1.e88126p-5, -0x1.bb4edp-3, 0x1.238e5cp-3, -0x1.2c884cp+0, 0x1.0028a6p+0, 0x1.556664p-1, -0x1.a18b22p-2, 0x1.74df28p-1, -0x1.b965ccp-1, 0x1.814c6p-2, 0x1.aadd2cp-2, -0x1.5e7cap-3, -0x1.2d4efcp-3)]
# {OUT} Y_N = [f1:(0x1.0f0148p-1, 0x1.5247b8p-5, -0x1.cda55p-4, 0x1.75abep-4, -0x1.599546p+1, -0x1.b7ce44p+0, -0x1.6c3e8p-2, -0x1.e56832p-3, -0x1.4d44ccp+0, -0x1.45388ap-2, -0x1.85369ap-2, -0x1.863a3cp-4, -0x1.7eca8p-8, 0x1.f8e074p-2, -0x1.b862cep-1, 0x1.45b09ap-3, 0x1.702544p-1, 0x1.992d02p-1, 0x1.ff4e3cp-1, 0x1.235c26p-1, -0x1.7e8104p-5, 0x1.7a3a8cp-3, 0x1.b0652cp-1, -0x1.30ff28p+0, -0x1.1278fap-2, 0x1.2120dp-6, 0x1.3a24p-1, 0x1.85f722p-3, -0x1.2de878p-3, 0x1.361afcp+0, -0x1.21ab72p+0, -0x1.e8e198p-2, 0x1.0abcb2p-2, -0x1.779102p-2, -0x1.6e1384p-2, 0x1.621d3cp-2, -0x1.19f6ecp-2, -0x1.006c04p+0, 0x1.5196p-12, 0x1.b90564p-4, -0x1.17e4ap-2, 0x1.8d4b48p-2, -0x1.110766p+0, 0x1.1f4a22p+0, 0x1.351238p-2, -0x1.58db1p-2, 0x1.26717ap+0, -0x1.94bd3p-5),
#              f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Modem_SCMA::filter(const float32 Y_N1[6x48], float32 Y_N2[6x48])
# {IN}  Y_N1 = [f1:(0x1.0f0148p-1, 0x1.5247b8p-5, -0x1.cda55p-4, 0x1.75abep-4, -0x1.599546p+1, -0x1.b7ce44p+0, -0x1.6c3e8p-2, -0x1.e56832p-3, -0x1.4d44ccp+0, -0x1.45388ap-2, -0x1.85369ap-2, -0x1.863a3cp-4, -0x1.7eca8p-8, 0x1.f8e074p-2, -0x1.b862cep-1, 0x1.45b09ap-3, 0x1.702544p-1, 0x1.992d02p-1, 0x1.ff4e3cp-1, 0x1.235c26p-1, -0x1.7e8104p-5, 0x1.7a3a8cp-3, 0x1.b0652cp-1, -0x1.30ff28p+0, -0x1.1278fap-2, 0x1.2120dp-6, 0x1.3a24p-1, 0x1.85f722p-3, -0x1.2de878p-3, 0x1.361afcp+0, -0x1.21ab72p+0, -0x1.e8e198p-2, 0x1.0abcb2p-2, -0x1.779102p-2, -0x1.6e1384p-2, 0x1.621d3cp-2, -0x1.19f6ecp-2, -0x1.006c04p+0, 0x1.5196p-12, 0x1.b90564p-4, -0x1.17e4ap-2, 0x1.8d4b48p-2, -0x1.110766p+0, 0x1.1f4a22p+0, 0x1.351238p-2, -0x1.58db1p-2, 0x1.26717ap+0, -0x1.94bd3p-5),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# {OUT} Y_N2 = [f1:(0x1.0f0148p-1, 0x1.5247b8p-5, -0x1.cda55p-4, 0x1.75abep-4, -0x1.599546p+1, -0x1.b7ce44p+0, -0x1.6c3e8p-2, -0x1.e56832p-3, -0x1.4d44ccp+0, -0x1.45388ap-2, -0x1.85369ap-2, -0x1.863a3cp-4, -0x1.7eca8p-8, 0x1.f8e074p-2, -0x1.b862cep-1, 0x1.45b09ap-3, 0x1.702544p-1, 0x1.992d02p-1, 0x1.ff4e3cp-1, 0x1.235c26p-1, -0x1.7e8104p-5, 0x1.7a3a8cp-3, 0x1.b0652cp-1, -0x1.30ff28p+0, -0x1.1278fap-2, 0x1.2120dp-6, 0x1.3a24p-1, 0x1.85f722p-3, -0x1.2de878p-3, 0x1.361afcp+0, -0x1.21ab72p+0, -0x1.e8e198p-2, 0x1.0abcb2p-2, -0x1.779102p-2, -0x1.6e1384p-2, 0x1.621d3cp-2, -0x1.19f6ecp-2, -0x1.006c04p+0, 0x1.5196p-12, 0x1.b90564p-4, -0x1.17e4ap-2, 0x1.8d4b48p-2, -0x1.110766p+0, 0x1.1f4a22p+0, 0x1.351238p-2, -0x1.58db1p-2, 0x1.26717ap+0, -0x1.94bd3p-5),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Modem_SCMA::demodulate_wg(const float32 H_N[6x48], const float32 Y_N1[6x48], float32 Y_N2[6x12])
# {IN}  H_N  = [f1:(0x1.0982dp+0, 0x1.5d194ep-2, 0x1.53810ap-2, 0x1.b41db2p-2, -0x1.9e1d04p+0, 0x1.18f5fcp+0, 0x1.e821aap-2, -0x1.857e1ep-2, 0x1.22b1bp-1, -0x1.a62258p-5, -0x1.1f2072p-1, 0x1.026348p-4, 0x1.09e6bcp-10, 0x1.bdfca6p-4, -0x1.f8ee9cp-1, 0x1.1742a8p+0, -0x1.1dd7a6p+0, -0x1.95e828p-4, 0x1.b18f5cp-2, -0x1.49a42ep-1, -0x1.ff291cp-5, -0x1.173b96p-5, -0x1.4713ccp-2, -0x1.11f706p-1, -0x1.0d607cp-1, -0x1.f0e33cp-3, -0x1.13e434p+0, -0x1.763ddap-2, -0x1.3e3d34p+0, -0x1.87bd92p-2, -0x1.dd8fc6p-1, -0x1.8dc28p-3, 0x1.f2ep-3, -0x1.a0b5c4p-1, 0x1.6ac1bp-1, 0x1.b903dcp-2, -0x1.394b94p-2, -0x1.2dcb02p-3, 0x1.4df342p-3, 0x1.edf74ep-3, -0x1.0a9f8ap-1, 0x1.90c208p-1, -0x1.b800e4p-1, 0x1.86a53cp+0, -0x1.4c6d6ep-1, 0x1.6ddfe4p-1, 0x1.244708p+0, 0x1.ec287ep-1),
#               f2:(0x1.76dbdcp-1, 0x1.074cdcp+1, -0x1.84f4fap+0, 0x1.6e525cp-6, 0x1.2d2c32p+1, 0x1.1132f6p-4, 0x1.869122p-1, 0x1.b9d496p-2, -0x1.e7d1p-2, 0x1.613aacp-3, 0x1.b2153ep-2, -0x1.17d9a2p-1, -0x1.c5abbap-4, -0x1.098c4cp+0, -0x1.535eeep-2, -0x1.980156p-2, 0x1.111754p-1, 0x1.e9006cp-1, -0x1.20c212p+0, -0x1.347f6ep-1, 0x1.3f04p+0, -0x1.82d17ap-5, -0x1.62b63cp-3, -0x1.557ff6p-2, -0x1.a03104p-3, -0x1.f8e0b8p-1, -0x1.2a460cp-3, -0x1.a2b9eap-4, -0x1.09bcd4p+0, 0x1.992a26p-4, -0x1.6b3868p-1, 0x1.3919c6p-1, 0x1.410868p-1, 0x1.34ab1cp+0, -0x1.6747cp-1, -0x1.4b3372p-1, -0x1.c5870ap-1, -0x1.d9a8b4p-1, -0x1.cec08cp-3, -0x1.ea3d38p-1, -0x1.5b88cap-2, -0x1.e8cd7cp-4, 0x1.8ff1d8p-2, 0x1.c8e7b6p-2, -0x1.a3327ap-2, -0x1.c3992ep-5, -0x1.a62972p-1, -0x1.2ba588p-2),
#               f3:(0x1.7de356p-2, -0x1.91fd62p-1, 0x1.c4451cp-4, -0x1.856b8ep+0, -0x1.44dbaep+0, -0x1.12f416p-1, 0x1.c53c46p+0, -0x1.208af4p-14, 0x1.1391a2p-2, -0x1.f10834p-1, 0x1.d8f14ep-4, 0x1.06902ep-2, -0x1.242722p-1, -0x1.d3e222p-6, -0x1.c8203p-1, -0x1.51cf36p-2, 0x1.14854ep-1, 0x1.679beep-2, -0x1.cc38a6p-2, -0x1.00c0f8p-1, 0x1.fe24b8p-2, 0x1.ec843ep-1, -0x1.f58e94p-2, 0x1.59cd8p-5, 0x1.5e3986p-2, 0x1.ca72fcp-2, 0x1.4c78eap-3, -0x1.90a1ecp-2, -0x1.78069cp-1, 0x1.16cf14p-1, -0x1.b4cb7ep-1, 0x1.4a4b8ap-8, -0x1.b700ecp-1, 0x1.28df9p+0, -0x1.3d7394p-1, -0x1.889p-3, -0x1.56ab7ap+1, 0x1.74a3d2p-2, -0x1.2018fcp+0, -0x1.acd33p-3, -0x1.24efa4p-7, -0x1.3fae9p-2, -0x1.afb72ap-8, -0x1.828122p-1, 0x1.7535d8p-1, 0x1.c18806p-1, -0x1.4c2528p-2, -0x1.4a8288p-3),
#               f4:(0x1.765ffep+0, 0x1.3bb838p-1, 0x1.589b52p-1, 0x1.4fbe4ap-5, 0x1.5246b6p-2, -0x1.0833f8p-2, -0x1.bd25dcp-3, 0x1.ceec7ap-2, 0x1.4c5fa8p+0, 0x1.63e82p-2, -0x1.a02414p-1, -0x1.7bac1cp-3, -0x1.92d988p-1, 0x1.fa1248p-3, -0x1.fdc52ep-1, 0x1.227e26p-3, 0x1.23ff0ep-1, 0x1.3dcc6ep+0, 0x1.e8d80ep-2, 0x1.ce749cp-1, 0x1.c368d2p-8, 0x1.dfa366p-2, -0x1.aac6ap-1, -0x1.233f2ep-2, 0x1.b20972p-8, -0x1.02d014p+0, 0x1.e2fe42p-2, 0x1.cbc26ep-3, -0x1.7ebb44p-1, 0x1.f4eda8p-2, 0x1.b164a4p-2, -0x1.b50ecap-1, 0x1.1cff04p-1, 0x1.1c6fa6p-1, -0x1.4e24e4p-2, 0x1.6d7e3p-2, 0x1.c9ce1p-6, 0x1.bda07p-2, -0x1.7d8faap-2, 0x1.49227p-2, 0x1.5deaccp-1, -0x1.3005fp-3, 0x1.34d078p+0, 0x1.9e83d8p-2, -0x1.73af78p-1, 0x1.4096c4p-3, -0x1.4d5436p-3, -0x1.a056b6p-5),
#               f5:(0x1.7560c6p-4, 0x1.821d32p-2, 0x1.1adfecp-2, 0x1.2f47b2p-1, 0x1.0b6dbcp-1, -0x1.171e94p-2, 0x1.971b5cp-4, -0x1.3a3be6p-1, 0x1.a321eep-6, 0x1.1bed22p+0, 0x1.946ee4p-1, -0x1.b3994ap-2, 0x1.ea689p-1, -0x1.8e51f4p-5, 0x1.0cc8ecp-3, -0x1.251e32p-1, -0x1.31338ep-2, -0x1.b40bb2p-1, 0x1.72563cp-1, -0x1.f8f6dcp-1, 0x1.701f6ap-1, -0x1.9536bep-2, 0x1.a2560ap+0, -0x1.236feep+0, 0x1.af039ep-3, -0x1.b54b28p-3, 0x1.27378cp-1, -0x1.78194ap-2, 0x1.683b06p-1, 0x1.3c2dccp-1, -0x1.04deap-3, -0x1.7ceaf4p-1, -0x1.0d160ap-3, -0x1.1d38f4p-1, -0x1.c7f0bcp-1, 0x1.2bfa7p-4, 0x1.ff9b04p-3, -0x1.94d1e6p-5, -0x1.1cde08p-4, -0x1.457d7p-3, -0x1.42d098p-1, 0x1.dec1bep-4, 0x1.f92acap-2, -0x1.c82722p-1, 0x1.685952p-4, -0x1.fc7738p-2, -0x1.b42b38p-1, -0x1.05c316p+0),
#               f6:(0x1.0d5574p-1, 0x1.0fa77cp-2, -0x1.2962bep-1, -0x1.6a6b22p-1, -0x1.6f1412p-2, 0x1.49525ap+0, -0x1.7e00d8p-6, -0x1.274b62p+0, -0x1.12d364p-3, -0x1.49567p-1, 0x1.b5bcbep-2, 0x1.e83abep-2, 0x1.0f08c2p-1, -0x1.cd71a2p-3, 0x1.c61d36p-3, -0x1.2a4664p-4, 0x1.eba7fap-2, 0x1.b5c76ap+0, 0x1.5958aap-1, 0x1.0646f2p+0, 0x1.1b8632p-1, 0x1.766cf4p-2, 0x1.b93e88p-1, 0x1.31d582p-2, 0x1.6ef098p-2, -0x1.291084p-1, -0x1.7da584p-1, 0x1.da20d6p-2, 0x1.11afe2p-1, -0x1.59df8cp-1, -0x1.8d511ap-1, -0x1.84b3e6p-1, 0x1.a67a56p-1, -0x1.d746fap-1, 0x1.0196e4p+0, -0x1.e88126p-5, -0x1.bb4edp-3, 0x1.238e5cp-3, -0x1.2c884cp+0, 0x1.0028a6p+0, 0x1.556664p-1, -0x1.a18b22p-2, 0x1.74df28p-1, -0x1.b965ccp-1, 0x1.814c6p-2, 0x1.aadd2cp-2, -0x1.5e7cap-3, -0x1.2d4efcp-3)]
# {IN}  Y_N1 = [f1:(0x1.0f0148p-1, 0x1.5247b8p-5, -0x1.cda55p-4, 0x1.75abep-4, -0x1.599546p+1, -0x1.b7ce44p+0, -0x1.6c3e8p-2, -0x1.e56832p-3, -0x1.4d44ccp+0, -0x1.45388ap-2, -0x1.85369ap-2, -0x1.863a3cp-4, -0x1.7eca8p-8, 0x1.f8e074p-2, -0x1.b862cep-1, 0x1.45b09ap-3, 0x1.702544p-1, 0x1.992d02p-1, 0x1.ff4e3cp-1, 0x1.235c26p-1, -0x1.7e8104p-5, 0x1.7a3a8cp-3, 0x1.b0652cp-1, -0x1.30ff28p+0, -0x1.1278fap-2, 0x1.2120dp-6, 0x1.3a24p-1, 0x1.85f722p-3, -0x1.2de878p-3, 0x1.361afcp+0, -0x1.21ab72p+0, -0x1.e8e198p-2, 0x1.0abcb2p-2, -0x1.779102p-2, -0x1.6e1384p-2, 0x1.621d3cp-2, -0x1.19f6ecp-2, -0x1.006c04p+0, 0x1.5196p-12, 0x1.b90564p-4, -0x1.17e4ap-2, 0x1.8d4b48p-2, -0x1.110766p+0, 0x1.1f4a22p+0, 0x1.351238p-2, -0x1.58db1p-2, 0x1.26717ap+0, -0x1.94bd3p-5),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# {OUT} Y_N2 = [f1:(0x1.96b8f4p-1, -0x1.3796e2p+1, 0x1.b92728p+2, 0x1.4ae974p+0, -0x1.86e5fp-1, -0x1.354c06p+1, 0x1.c1006ap+1, 0x1.a5ec22p+2, 0x1.ca908p-2, -0x1.7748e4p+0, 0x1.60856cp+2, -0x1.c76256p+2),
#               f2:(-0x1.c07e7ep+3, 0x1.3f588p+5, 0x1.da4668p-1, 0x1.639a28p+1, 0x1.1fe35ep+3, 0x1.061648p+2, -0x1.763708p+1, 0x1.db202ap+1, 0x1.1ac7bcp+1, -0x1.3d0d0ap+2, 0x1.1b772p+0, -0x1.e7eba8p-2),
#               f3:(0x1.a9be62p+2, 0x1.06088p+2, -0x1.3ac38cp+1, -0x1.9c55bp-1, 0x1.ee83p-6, -0x1.71dd94p+0, 0x1.b59ff2p+0, -0x1.580dcp-2, 0x1.ec0f3cp+0, 0x1.1658p-5, 0x1.f79d1p-1, -0x1.3220e4p+1),
#               f4:(-0x1.ebd934p+0, -0x1.49ff98p+1, 0x1.71e448p-1, -0x1.65c38cp+1, 0x1.f2fe74p+0, 0x1.045d4cp+0, 0x1.456a68p+2, 0x1.5f0256p+2, -0x1.ecf6b8p-2, 0x1.6c709p-3, 0x1.ae504p-3, -0x1.23e484p+0),
#               f5:(-0x1.865688p+1, 0x1.b7f6dcp+0, 0x1.5e7ac8p+0, -0x1.654bc8p+2, -0x1.c8c29p+2, -0x1.56fc54p+1, -0x1.fe3b98p+0, 0x1.d7e2fp-3, 0x1.05ec8p-2, -0x1.0d1b38p-1, 0x1.446a5ap+2, 0x1.ec856ap+1),
#               f6:(0x1.d700ccp+1, -0x1.82cffcp+3, -0x1.e88b58p-1, -0x1.6b8b8cp+0, 0x1.771c08p+2, 0x1.782c4cp+1, -0x1.897ca8p+0, -0x1.2f35b4p+2, -0x1.e0ab28p+0, -0x1.845b58p-1, -0x1.30e984p+1, 0x1.3ca77cp+0)]
# Returned status: 0
#
# Quantizer_standard::process(const float32 Y_N1[6x12], int8 Y_N2[6x12])
# {IN}  Y_N1 = [f1:(0x1.96b8f4p-1, -0x1.3796e2p+1, 0x1.b92728p+2, 0x1.4ae974p+0, -0x1.86e5fp-1, -0x1.354c06p+1, 0x1.c1006ap+1, 0x1.a5ec22p+2, 0x1.ca908p-2, -0x1.7748e4p+0, 0x1.60856cp+2, -0x1.c76256p+2),
#               f2:(-0x1.c07e7ep+3, 0x1.3f588p+5, 0x1.da4668p-1, 0x1.639a28p+1, 0x1.1fe35ep+3, 0x1.061648p+2, -0x1.763708p+1, 0x1.db202ap+1, 0x1.1ac7bcp+1, -0x1.3d0d0ap+2, 0x1.1b772p+0, -0x1.e7eba8p-2),
#               f3:(0x1.a9be62p+2, 0x1.06088p+2, -0x1.3ac38cp+1, -0x1.9c55bp-1, 0x1.ee83p-6, -0x1.71dd94p+0, 0x1.b59ff2p+0, -0x1.580dcp-2, 0x1.ec0f3cp+0, 0x1.1658p-5, 0x1.f79d1p-1, -0x1.3220e4p+1),
#               f4:(-0x1.ebd934p+0, -0x1.49ff98p+1, 0x1.71e448p-1, -0x1.65c38cp+1, 0x1.f2fe74p+0, 0x1.045d4cp+0, 0x1.456a68p+2, 0x1.5f0256p+2, -0x1.ecf6b8p-2, 0x1.6c709p-3, 0x1.ae504p-3, -0x1.23e484p+0),
#               f5:(-0x1.865688p+1, 0x1.b7f6dcp+0, 0x1.5e7ac8p+0, -0x1.654bc8p+2, -0x1.c8c29p+2, -0x1.56fc54p+1, -0x1.fe3b98p+0, 0x1.d7e2fp-3, 0x1.05ec8p-2, -0x1.0d1b38p-1, 0x1.446a5ap+2, 0x1.ec856ap+1),
#               f6:(0x1.d700ccp+1, -0x1.82cffcp+3, -0x1.e88b58p-1, -0x1.6b8b8cp+0, 0x1.771c08p+2, 0x1.782c4cp+1, -0x1.897ca8p+0, -0x1.2f35b4p+2, -0x1.e0ab28p+0, -0x1.845b58p-1, -0x1.30e984p+1, 0x1.3ca77cp+0)]
# {OUT} Y_N2 = [f1:(0x6, 0xffffffed, 0x37, 0xa, 0xfffffffa, 0xffffffed, 0x1c, 0x35, 0x4, 0xfffffff4, 0x2c, 0xffffffc7),
#               f2:(0xffffff90, 0x7f, 0x7, 0x16, 0x48, 0x21, 0xffffffe9, 0x1e, 0x12, 0xffffffd8, 0x9, 0xfffffffc),
#               f3:(0x35, 0x21, 0xffffffec, 0xfffffffa, 0x0, 0xfffffff4, 0xe, 0xfffffffd, 0xf, 0x0, 0x8, 0xffffffed),
#               f4:(0xfffffff1, 0xffffffeb, 0x6, 0xffffffea, 0x10, 0x8, 0x29, 0x2c, 0xfffffffc, 0x1, 0x2, 0xfffffff7),
#               f5:(0xffffffe8, 0xe, 0xb, 0xffffffd3, 0xffffffc7, 0xffffffeb, 0xfffffff0, 0x2, 0x2, 0xfffffffc, 0x29, 0x1f),
#               f6:(0x1d, 0xffffff9f, 0xfffffff8, 0xfffffff5, 0x2f, 0x18, 0xfffffff4, 0xffffffda, 0xfffffff1, 0xfffffffa, 0xffffffed, 0xa)]
# Returned status: 0
#
# Puncturer_NO::depuncture(const int8 Y_N1[6x12], int8 Y_N2[6x12])
# {IN}  Y_N1 = [f1:(0x6, 0xffffffed, 0x37, 0xa, 0xfffffffa, 0xffffffed, 0x1c, 0x35, 0x4, 0xfffffff4, 0x2c, 0xffffffc7),
#               f2:(0xffffff90, 0x7f, 0x7, 0x16, 0x48, 0x21, 0xffffffe9, 0x1e, 0x12, 0xffffffd8, 0x9, 0xfffffffc),
#               f3:(0x35, 0x21, 0xffffffec, 0xfffffffa, 0x0, 0xfffffff4, 0xe, 0xfffffffd, 0xf, 0x0, 0x8, 0xffffffed),
#               f4:(0xfffffff1, 0xffffffeb, 0x6, 0xffffffea, 0x10, 0x8, 0x29, 0x2c, 0xfffffffc, 0x1, 0x2, 0xfffffff7),
#               f5:(0xffffffe8, 0xe, 0xb, 0xffffffd3, 0xffffffc7, 0xffffffeb, 0xfffffff0, 0x2, 0x2, 0xfffffffc, 0x29, 0x1f),
#               f6:(0x1d, 0xffffff9f, 0xfffffff8, 0xfffffff5, 0x2f, 0x18, 0xfffffff4, 0xffffffda, 0xfffffff1, 0xfffffffa, 0xffffffed, 0xa)]
# {OUT} Y_N2 = [f1:(0x6, 0xffffffed, 0x37, 0xa, 0xfffffffa, 0xffffffed, 0x1c, 0x35, 0x4, 0xfffffff4, 0x2c, 0xffffffc7),
#               f2:(0xffffff90, 0x7f, 0x7, 0x16, 0x48, 0x21, 0xffffffe9, 0x1e, 0x12, 0xffffffd8, 0x9, 0xfffffffc),
#               f3:(0x35, 0x21, 0xffffffec, 0xfffffffa, 0x0, 0xfffffff4, 0xe, 0xfffffffd, 0xf, 0x0, 0x8, 0xffffffed),
#               f4:(0xfffffff1, 0xffffffeb, 0x6, 0xffffffea, 0x10, 0x8, 0x29, 0x2c, 0xfffffffc, 0x1, 0x2, 0xfffffff7),
#               f5:(0xffffffe8, 0xe, 0xb, 0xffffffd3, 0xffffffc7, 0xffffffeb, 0xfffffff0, 0x2, 0x2, 0xfffffffc, 0x29, 0x1f),
#               f6:(0x1d, 0xffffff9f, 0xfffffff8, 0xfffffff5, 0x2f, 0x18, 0xfffffff4, 0xffffffda, 0xfffffff1, 0xfffffffa, 0xffffffed, 0xa)]
# Returned status: 0
#
# Decoder_NO::decode_siho(const int8 Y_N[6x12], int8 V_K[6x12])
# {IN}  Y_N = [f1:(0x6, 0xffffffed, 0x37, 0xa, 0xfffffffa, 0xffffffed, 0x1c, 0x35, 0x4, 0xfffffff4, 0x2c, 0xffffffc7),
#              f2:(0xffffff90, 0x7f, 0x7, 0x16, 0x48, 0x21, 0xffffffe9, 0x1e, 0x12, 0xffffffd8, 0x9, 0xfffffffc),
#              f3:(0x35, 0x21, 0xffffffec, 0xfffffffa, 0x0, 0xfffffff4, 0xe, 0xfffffffd, 0xf, 0x0, 0x8, 0xffffffed),
#              f4:(0xfffffff1, 0xffffffeb, 0x6, 0xffffffea, 0x10, 0x8, 0x29, 0x2c, 0xfffffffc, 0x1, 0x2, 0xfffffff7),
#              f5:(0xffffffe8, 0xe, 0xb, 0xffffffd3, 0xffffffc7, 0xffffffeb, 0xfffffff0, 0x2, 0x2, 0xfffffffc, 0x29, 0x1f),
#              f6:(0x1d, 0xffffff9f, 0xfffffff8, 0xfffffff5, 0x2f, 0x18, 0xfffffff4, 0xffffffda, 0xfffffff1, 0xfffffffa, 0xffffffed, 0xa)]
# {OUT} V_K = [f1:(0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1),
#              f2:(0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#              f3:(0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1),
#              f4:(0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1),
#              f5:(0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0),
#              f6:(0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0)]
# Returned status: 0
#
# CRC_NO::extract(const int8 V_K1[6x12], int8 V_K2[6x12])
# {IN}  V_K1 = [f1:(0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1),
#               f2:(0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#               f3:(0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1),
#               f4:(0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1),
#               f5:(0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0),
#               f6:(0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0)]
# {OUT} V_K2 = [f1:(0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1),
#               f2:(0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#               f3:(0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1),
#               f4:(0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1),
#               f5:(0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0),
#               f6:(0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0)]
# Returned status: 0
#
# Monitor_BFER::check_errors(const int8 U[6x12], const int8 V[6x12])
# {IN}  U = [f1:(0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1),
#            f2:(0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#            f3:(0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1),
#            f4:(0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1),
#            f5:(0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0),
#            f6:(0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0)]
# {IN}  V = [f1:(0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1),
#            f2:(0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#            f3:(0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1),
#            f4:(0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1),
#            f5:(0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0),
#            f6:(0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0)]
# Returned status: 6
#
# -------------------------------
# New communication (nÂ°6)
# -------------------------------
#
# Source_random::generate(int8 U_K[6x12])
# {OUT} U_K = [f1:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0),
#              f2:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0),
#              f3:(0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1),
#              f4:(0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#              f5:(0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0),
#              f6:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1)]
# Returned status: 0
#
# CRC_NO::build(const int8 U_K1[6x12], int8 U_K2[6x12])
# {IN}  U_K1 = [f1:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0),
#               f2:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0),
#               f3:(0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1),
#               f4:(0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#               f5:(0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0),
#               f6:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1)]
# {OUT} U_K2 = [f1:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0),
#               f2:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0),
#               f3:(0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1),
#               f4:(0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#               f5:(0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0),
#               f6:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1)]
# Returned status: 0
#
# Encoder_NO::encode(const int8 U_K[6x12], int8 X_N[6x12])
# {IN}  U_K = [f1:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0),
#              f2:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0),
#              f3:(0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1),
#              f4:(0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#              f5:(0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0),
#              f6:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1)]
# {OUT} X_N = [f1:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0),
#              f2:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0),
#              f3:(0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1),
#              f4:(0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#              f5:(0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0),
#              f6:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1)]
# Returned status: 0
#
# Puncturer_NO::puncture(const int8 X_N1[6x12], int8 X_N2[6x12])
# {IN}  X_N1 = [f1:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0),
#               f2:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0),
#               f3:(0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1),
#               f4:(0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#               f5:(0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0),
#               f6:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1)]
# {OUT} X_N2 = [f1:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0),
#               f2:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0),
#               f3:(0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1),
#               f4:(0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#               f5:(0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0),
#               f6:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1)]
# Returned status: 0
#
# Modem_SCMA::modulate(const int8 X_N1[6x12], float32 X_N2[6x48])
# {IN}  X_N1 = [f1:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0),
#               f2:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0),
#               f3:(0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1),
#               f4:(0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#               f5:(0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0),
#               f6:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1)]
# {OUT} X_N2 = [f1:(0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0),
#               f2:(-0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0),
#               f3:(0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3),
#               f5:(0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3),
#               f6:(0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Channel_Rayleigh_LLR::add_noise_wg(const float32 X_N[6x48], float32 H_N[6x48], float32 Y_N[6x48])
# {IN}  X_N = [f1:(0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0),
#              f2:(-0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0),
#              f3:(0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3),
#              f5:(0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3),
#              f6:(0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0)]
# {OUT} H_N = [f1:(0x1.417516p+0, -0x1.58e5fcp-3, 0x1.716f44p-1, 0x1.82a2ccp-3, -0x1.dd7d4p-2, -0x1.ab6064p+0, -0x1.8bb87ap-1, 0x1.91a082p-2, 0x1.c292dep-4, 0x1.0baedp-2, -0x1.ee1d34p-1, -0x1.1b780cp-1, 0x1.6adddep-3, -0x1.337a18p-1, -0x1.d6ae3p-3, -0x1.30b9d8p-2, 0x1.9c92fep-1, 0x1.7565e8p-2, 0x1.86a9f4p-2, -0x1.1f497ep-3, -0x1.de23e8p-2, 0x1.c1be0ap-1, -0x1.5effbcp-3, 0x1.433c82p-2, 0x1.db6956p-2, -0x1.69d294p+0, 0x1.75c29ep-3, 0x1.291b7ep+0, 0x1.09fc34p-2, 0x1.6e906ep+0, -0x1.6f3e28p-3, -0x1.8a975ap-2, -0x1.ed2708p-9, 0x1.4a1f3ap-3, 0x1.8a595ep-1, 0x1.a4845ap-4, -0x1.08103p-1, 0x1.333e52p+0, -0x1.0771b2p+0, 0x1.8e52dcp-3, -0x1.7d0246p-1, -0x1.03f31ap-1, -0x1.33b5dcp-2, -0x1.0b3998p-1, -0x1.9873ccp-1, -0x1.8f0716p-2, 0x1.91087ap-1, 0x1.1090aap-6),
#              f2:(0x1.252b74p-1, -0x1.7dffeep-1, 0x1.b24aaap-2, -0x1.2395eap+0, 0x1.27dfa2p-1, 0x1.86bbdep-6, -0x1.5671aep-1, -0x1.7bd36p-4, 0x1.2cdcecp-1, -0x1.408a9ep-1, -0x1.6bee6ap-1, 0x1.2a7934p+0, 0x1.07bf88p-2, 0x1.98a34cp-2, -0x1.1ccdeep-8, 0x1.d7987p-2, 0x1.75cbe8p-2, -0x1.29ab7cp-7, -0x1.296dfap+0, -0x1.1d598ap-1, 0x1.293882p-3, 0x1.ab0472p-1, -0x1.3724c2p-3, 0x1.75e546p-2, -0x1.5607e4p-1, 0x1.674e74p-1, 0x1.93414ep-2, 0x1.2cae86p+0, 0x1.0e44fep+1, -0x1.322ea8p-1, 0x1.7cba0ap-3, -0x1.b5653p-1, 0x1.2c6854p-2, -0x1.9893acp-3, 0x1.c1cea8p-2, -0x1.efa0bcp-4, 0x1.84587p-2, 0x1.0dd56ep-2, 0x1.811504p-2, 0x1.db8fbep-3, 0x1.37412ap-2, 0x1.4820dap-1, -0x1.6fc1b2p+0, -0x1.2ad856p+0, -0x1.164c5ep+0, 0x1.231a68p-2, 0x1.a0dc36p+0, -0x1.95176ep-5),
#              f3:(-0x1.0a055ap-1, -0x1.35bab8p-1, -0x1.103544p-1, -0x1.a6e6a4p-3, 0x1.9c6e66p-2, -0x1.9700f4p-1, -0x1.9eb144p-1, -0x1.42d328p-2, -0x1.f95066p-3, -0x1.dc9686p-2, 0x1.99273ep-4, 0x1.39122p-1, -0x1.3f245cp-1, -0x1.b2842cp-1, 0x1.e9419cp-4, 0x1.7e9e96p-1, -0x1.6bd842p-1, 0x1.ea0bbep-2, 0x1.78b28cp-2, -0x1.c94954p-2, 0x1.ab4508p-3, 0x1.3e827p+0, 0x1.129378p+0, 0x1.00c5dp-2, -0x1.87dbc8p-1, 0x1.78162ep-1, -0x1.445782p+0, 0x1.0ed85p+0, 0x1.44e646p-2, -0x1.bb41bp-1, -0x1.909b1p-3, 0x1.73f07ep-5, 0x1.267306p-2, 0x1.71654ap-2, 0x1.161bb8p-3, -0x1.c43f5ep-2, -0x1.7004dap-1, 0x1.13c12cp+0, 0x1.4b420cp-1, 0x1.233374p-1, -0x1.662558p-1, 0x1.4bb014p-2, -0x1.b4543ep-4, 0x1.0b1702p-1, -0x1.01112ep+0, -0x1.78db5p-1, 0x1.8c2a64p-1, 0x1.eb09bep-2),
#              f4:(0x1.de2adep-1, -0x1.39df52p-3, -0x1.33c366p-5, 0x1.34fdap+0, -0x1.21fep-1, 0x1.ea11aap-4, 0x1.f0b33cp-1, 0x1.44cba8p-2, -0x1.a0f8fp-1, 0x1.0c19d8p-2, -0x1.a377p-5, 0x1.530fccp-5, 0x1.5fb70cp-2, 0x1.849496p-1, 0x1.1cbbep-6, 0x1.7f6ccp-2, -0x1.6a0ebap-2, -0x1.24432ep-2, 0x1.14ecfep+0, -0x1.f27072p-1, 0x1.f35deep-1, 0x1.772728p-5, -0x1.27d5aep+0, 0x1.35c234p-2, -0x1.2d0ad4p+0, 0x1.45296p+0, -0x1.9e9a48p-2, 0x1.e46038p-1, 0x1.93f712p-4, 0x1.002222p-1, -0x1.0dfb1cp+0, 0x1.c997bap-3, -0x1.292544p-1, -0x1.e4e71ap-3, 0x1.f4158ap-1, 0x1.b6a8cep-2, -0x1.4efa1ap-1, -0x1.45ec64p+0, -0x1.e7be84p-2, 0x1.40c298p-3, 0x1.bcd208p-5, -0x1.c9024p-3, 0x1.cd4036p-5, -0x1.08979ep-2, -0x1.3122eep-1, -0x1.624ceap-3, -0x1.212412p-1, 0x1.fd06dcp-2),
#              f5:(-0x1.175f7ap-3, 0x1.820e2p-1, -0x1.94bf8ap-1, 0x1.0c9bfep-1, 0x1.5e90cap-4, -0x1.469b54p+0, -0x1.30ebc2p-1, -0x1.dacc6ep-1, 0x1.b49256p-4, 0x1.72728ap-2, -0x1.8a5996p-1, 0x1.35955ap-2, 0x1.2f4266p-2, -0x1.9ebd02p-3, -0x1.9d429ep-1, -0x1.c7bcb2p-1, 0x1.72e296p-2, -0x1.5f371p-2, -0x1.ec7408p-5, 0x1.08d5acp-2, 0x1.ce43ecp-2, 0x1.b4719ap-1, 0x1.313de2p-1, -0x1.4f7412p-3, 0x1.0f5f3p-1, 0x1.8312dap-1, -0x1.b537e6p-1, -0x1.8fc67ep-1, 0x1.824d36p-1, 0x1.0ead08p-4, -0x1.3dc5eep-6, 0x1.519542p-3, 0x1.4b894ap-2, -0x1.574dp-5, -0x1.7207dcp-1, -0x1.8ee69ap-3, -0x1.a07a7cp-2, -0x1.058b6ep-1, 0x1.bb95f2p+0, 0x1.93fc14p-3, 0x1.0037eep-1, 0x1.01f0dep-1, -0x1.a0a2d6p-3, -0x1.879e9ap-1, 0x1.27ac94p-1, -0x1.f91682p-3, -0x1.457d1p-1, 0x1.159384p+0),
#              f6:(-0x1.fc0ffcp-2, 0x1.241968p-3, 0x1.7261a8p+0, 0x1.25afcep-3, 0x1.4edce6p-2, 0x1.771594p-1, -0x1.1d4986p+0, 0x1.1ebfecp-1, 0x1.9727b2p-6, 0x1.320fd8p-2, 0x1.9f0612p-2, -0x1.da3becp-1, 0x1.cfd17ap-5, 0x1.645f36p-3, 0x1.9b4b7ap-2, -0x1.4043e2p+0, -0x1.d37cb4p-1, 0x1.f6ef5cp-1, -0x1.c50fe8p-4, 0x1.adc274p-1, 0x1.b478eap-1, 0x1.476466p-2, 0x1.e3098ap-4, -0x1.83f99p-3, -0x1.cd376ep-1, -0x1.a02d58p-3, -0x1.866afep-2, -0x1.128a7p-1, 0x1.06e73p-1, -0x1.d11526p-2, -0x1.d4d37cp-3, 0x1.691fa4p+0, -0x1.25686ap-4, -0x1.229432p-1, 0x1.d0470ap-2, -0x1.e24f38p-2, 0x1.e47b0ep-1, -0x1.cd2d98p-4, -0x1.0658bcp-1, 0x1.f11e26p-3, -0x1.63a718p-2, 0x1.2f8116p-5, -0x1.1318dcp-2, 0x1.3fad04p-4, 0x1.97b95cp-1, -0x1.1d3286p+0, 0x1.77ae3cp-2, 0x1.900944p-2)]
# {OUT} Y_N = [f1:(-0x1.d89eb2p-1, 0x1.f4f55p-2, -0x1.26f5f4p+0, -0x1.479658p-4, 0x1.96771p-2, 0x1.acaefep-2, -0x1.7aa77p-1, 0x1.00de8ep+0, -0x1.d4c35ap-2, 0x1.68d30cp-2, -0x1.eca52p-1, -0x1.120a56p+0, -0x1.b172cp-8, -0x1.0e592p-2, -0x1.01c224p-2, -0x1.a8e27ap-3, 0x1.32d864p-4, 0x1.98ffdcp-3, -0x1.bc7be8p-2, 0x1.ca031ap-1, -0x1.17e02cp-3, 0x1.e15caep-2, 0x1.c7c246p-2, -0x1.5f71bap+0, 0x1.08287ep-1, -0x1.5c3f88p-4, 0x1.296ec4p-2, 0x1.61896ep-2, 0x1.070172p+1, 0x1.3d1a5ap+0, -0x1.89a084p-3, -0x1.406daep-1, 0x1.c8a7bap-5, 0x1.7a4a7ep-4, 0x1.b98ep-8, 0x1.cbc106p-1, 0x1.47e152p-3, 0x1.ae9d82p-1, -0x1.3814ecp+0, 0x1.903d7p-1, 0x1.b2f428p-4, -0x1.b2b03ep-2, -0x1.4bc48cp-2, -0x1.0e1ebap-3, 0x1.dbaa38p-1, 0x1.5f660ap+0, -0x1.3a03cep-3, 0x1.0626d8p-3),
#              f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Modem_SCMA::filter(const float32 Y_N1[6x48], float32 Y_N2[6x48])
# {IN}  Y_N1 = [f1:(-0x1.d89eb2p-1, 0x1.f4f55p-2, -0x1.26f5f4p+0, -0x1.479658p-4, 0x1.96771p-2, 0x1.acaefep-2, -0x1.7aa77p-1, 0x1.00de8ep+0, -0x1.d4c35ap-2, 0x1.68d30cp-2, -0x1.eca52p-1, -0x1.120a56p+0, -0x1.b172cp-8, -0x1.0e592p-2, -0x1.01c224p-2, -0x1.a8e27ap-3, 0x1.32d864p-4, 0x1.98ffdcp-3, -0x1.bc7be8p-2, 0x1.ca031ap-1, -0x1.17e02cp-3, 0x1.e15caep-2, 0x1.c7c246p-2, -0x1.5f71bap+0, 0x1.08287ep-1, -0x1.5c3f88p-4, 0x1.296ec4p-2, 0x1.61896ep-2, 0x1.070172p+1, 0x1.3d1a5ap+0, -0x1.89a084p-3, -0x1.406daep-1, 0x1.c8a7bap-5, 0x1.7a4a7ep-4, 0x1.b98ep-8, 0x1.cbc106p-1, 0x1.47e152p-3, 0x1.ae9d82p-1, -0x1.3814ecp+0, 0x1.903d7p-1, 0x1.b2f428p-4, -0x1.b2b03ep-2, -0x1.4bc48cp-2, -0x1.0e1ebap-3, 0x1.dbaa38p-1, 0x1.5f660ap+0, -0x1.3a03cep-3, 0x1.0626d8p-3),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# {OUT} Y_N2 = [f1:(-0x1.d89eb2p-1, 0x1.f4f55p-2, -0x1.26f5f4p+0, -0x1.479658p-4, 0x1.96771p-2, 0x1.acaefep-2, -0x1.7aa77p-1, 0x1.00de8ep+0, -0x1.d4c35ap-2, 0x1.68d30cp-2, -0x1.eca52p-1, -0x1.120a56p+0, -0x1.b172cp-8, -0x1.0e592p-2, -0x1.01c224p-2, -0x1.a8e27ap-3, 0x1.32d864p-4, 0x1.98ffdcp-3, -0x1.bc7be8p-2, 0x1.ca031ap-1, -0x1.17e02cp-3, 0x1.e15caep-2, 0x1.c7c246p-2, -0x1.5f71bap+0, 0x1.08287ep-1, -0x1.5c3f88p-4, 0x1.296ec4p-2, 0x1.61896ep-2, 0x1.070172p+1, 0x1.3d1a5ap+0, -0x1.89a084p-3, -0x1.406daep-1, 0x1.c8a7bap-5, 0x1.7a4a7ep-4, 0x1.b98ep-8, 0x1.cbc106p-1, 0x1.47e152p-3, 0x1.ae9d82p-1, -0x1.3814ecp+0, 0x1.903d7p-1, 0x1.b2f428p-4, -0x1.b2b03ep-2, -0x1.4bc48cp-2, -0x1.0e1ebap-3, 0x1.dbaa38p-1, 0x1.5f660ap+0, -0x1.3a03cep-3, 0x1.0626d8p-3),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Modem_SCMA::demodulate_wg(const float32 H_N[6x48], const float32 Y_N1[6x48], float32 Y_N2[6x12])
# {IN}  H_N  = [f1:(0x1.417516p+0, -0x1.58e5fcp-3, 0x1.716f44p-1, 0x1.82a2ccp-3, -0x1.dd7d4p-2, -0x1.ab6064p+0, -0x1.8bb87ap-1, 0x1.91a082p-2, 0x1.c292dep-4, 0x1.0baedp-2, -0x1.ee1d34p-1, -0x1.1b780cp-1, 0x1.6adddep-3, -0x1.337a18p-1, -0x1.d6ae3p-3, -0x1.30b9d8p-2, 0x1.9c92fep-1, 0x1.7565e8p-2, 0x1.86a9f4p-2, -0x1.1f497ep-3, -0x1.de23e8p-2, 0x1.c1be0ap-1, -0x1.5effbcp-3, 0x1.433c82p-2, 0x1.db6956p-2, -0x1.69d294p+0, 0x1.75c29ep-3, 0x1.291b7ep+0, 0x1.09fc34p-2, 0x1.6e906ep+0, -0x1.6f3e28p-3, -0x1.8a975ap-2, -0x1.ed2708p-9, 0x1.4a1f3ap-3, 0x1.8a595ep-1, 0x1.a4845ap-4, -0x1.08103p-1, 0x1.333e52p+0, -0x1.0771b2p+0, 0x1.8e52dcp-3, -0x1.7d0246p-1, -0x1.03f31ap-1, -0x1.33b5dcp-2, -0x1.0b3998p-1, -0x1.9873ccp-1, -0x1.8f0716p-2, 0x1.91087ap-1, 0x1.1090aap-6),
#               f2:(0x1.252b74p-1, -0x1.7dffeep-1, 0x1.b24aaap-2, -0x1.2395eap+0, 0x1.27dfa2p-1, 0x1.86bbdep-6, -0x1.5671aep-1, -0x1.7bd36p-4, 0x1.2cdcecp-1, -0x1.408a9ep-1, -0x1.6bee6ap-1, 0x1.2a7934p+0, 0x1.07bf88p-2, 0x1.98a34cp-2, -0x1.1ccdeep-8, 0x1.d7987p-2, 0x1.75cbe8p-2, -0x1.29ab7cp-7, -0x1.296dfap+0, -0x1.1d598ap-1, 0x1.293882p-3, 0x1.ab0472p-1, -0x1.3724c2p-3, 0x1.75e546p-2, -0x1.5607e4p-1, 0x1.674e74p-1, 0x1.93414ep-2, 0x1.2cae86p+0, 0x1.0e44fep+1, -0x1.322ea8p-1, 0x1.7cba0ap-3, -0x1.b5653p-1, 0x1.2c6854p-2, -0x1.9893acp-3, 0x1.c1cea8p-2, -0x1.efa0bcp-4, 0x1.84587p-2, 0x1.0dd56ep-2, 0x1.811504p-2, 0x1.db8fbep-3, 0x1.37412ap-2, 0x1.4820dap-1, -0x1.6fc1b2p+0, -0x1.2ad856p+0, -0x1.164c5ep+0, 0x1.231a68p-2, 0x1.a0dc36p+0, -0x1.95176ep-5),
#               f3:(-0x1.0a055ap-1, -0x1.35bab8p-1, -0x1.103544p-1, -0x1.a6e6a4p-3, 0x1.9c6e66p-2, -0x1.9700f4p-1, -0x1.9eb144p-1, -0x1.42d328p-2, -0x1.f95066p-3, -0x1.dc9686p-2, 0x1.99273ep-4, 0x1.39122p-1, -0x1.3f245cp-1, -0x1.b2842cp-1, 0x1.e9419cp-4, 0x1.7e9e96p-1, -0x1.6bd842p-1, 0x1.ea0bbep-2, 0x1.78b28cp-2, -0x1.c94954p-2, 0x1.ab4508p-3, 0x1.3e827p+0, 0x1.129378p+0, 0x1.00c5dp-2, -0x1.87dbc8p-1, 0x1.78162ep-1, -0x1.445782p+0, 0x1.0ed85p+0, 0x1.44e646p-2, -0x1.bb41bp-1, -0x1.909b1p-3, 0x1.73f07ep-5, 0x1.267306p-2, 0x1.71654ap-2, 0x1.161bb8p-3, -0x1.c43f5ep-2, -0x1.7004dap-1, 0x1.13c12cp+0, 0x1.4b420cp-1, 0x1.233374p-1, -0x1.662558p-1, 0x1.4bb014p-2, -0x1.b4543ep-4, 0x1.0b1702p-1, -0x1.01112ep+0, -0x1.78db5p-1, 0x1.8c2a64p-1, 0x1.eb09bep-2),
#               f4:(0x1.de2adep-1, -0x1.39df52p-3, -0x1.33c366p-5, 0x1.34fdap+0, -0x1.21fep-1, 0x1.ea11aap-4, 0x1.f0b33cp-1, 0x1.44cba8p-2, -0x1.a0f8fp-1, 0x1.0c19d8p-2, -0x1.a377p-5, 0x1.530fccp-5, 0x1.5fb70cp-2, 0x1.849496p-1, 0x1.1cbbep-6, 0x1.7f6ccp-2, -0x1.6a0ebap-2, -0x1.24432ep-2, 0x1.14ecfep+0, -0x1.f27072p-1, 0x1.f35deep-1, 0x1.772728p-5, -0x1.27d5aep+0, 0x1.35c234p-2, -0x1.2d0ad4p+0, 0x1.45296p+0, -0x1.9e9a48p-2, 0x1.e46038p-1, 0x1.93f712p-4, 0x1.002222p-1, -0x1.0dfb1cp+0, 0x1.c997bap-3, -0x1.292544p-1, -0x1.e4e71ap-3, 0x1.f4158ap-1, 0x1.b6a8cep-2, -0x1.4efa1ap-1, -0x1.45ec64p+0, -0x1.e7be84p-2, 0x1.40c298p-3, 0x1.bcd208p-5, -0x1.c9024p-3, 0x1.cd4036p-5, -0x1.08979ep-2, -0x1.3122eep-1, -0x1.624ceap-3, -0x1.212412p-1, 0x1.fd06dcp-2),
#               f5:(-0x1.175f7ap-3, 0x1.820e2p-1, -0x1.94bf8ap-1, 0x1.0c9bfep-1, 0x1.5e90cap-4, -0x1.469b54p+0, -0x1.30ebc2p-1, -0x1.dacc6ep-1, 0x1.b49256p-4, 0x1.72728ap-2, -0x1.8a5996p-1, 0x1.35955ap-2, 0x1.2f4266p-2, -0x1.9ebd02p-3, -0x1.9d429ep-1, -0x1.c7bcb2p-1, 0x1.72e296p-2, -0x1.5f371p-2, -0x1.ec7408p-5, 0x1.08d5acp-2, 0x1.ce43ecp-2, 0x1.b4719ap-1, 0x1.313de2p-1, -0x1.4f7412p-3, 0x1.0f5f3p-1, 0x1.8312dap-1, -0x1.b537e6p-1, -0x1.8fc67ep-1, 0x1.824d36p-1, 0x1.0ead08p-4, -0x1.3dc5eep-6, 0x1.519542p-3, 0x1.4b894ap-2, -0x1.574dp-5, -0x1.7207dcp-1, -0x1.8ee69ap-3, -0x1.a07a7cp-2, -0x1.058b6ep-1, 0x1.bb95f2p+0, 0x1.93fc14p-3, 0x1.0037eep-1, 0x1.01f0dep-1, -0x1.a0a2d6p-3, -0x1.879e9ap-1, 0x1.27ac94p-1, -0x1.f91682p-3, -0x1.457d1p-1, 0x1.159384p+0),
#               f6:(-0x1.fc0ffcp-2, 0x1.241968p-3, 0x1.7261a8p+0, 0x1.25afcep-3, 0x1.4edce6p-2, 0x1.771594p-1, -0x1.1d4986p+0, 0x1.1ebfecp-1, 0x1.9727b2p-6, 0x1.320fd8p-2, 0x1.9f0612p-2, -0x1.da3becp-1, 0x1.cfd17ap-5, 0x1.645f36p-3, 0x1.9b4b7ap-2, -0x1.4043e2p+0, -0x1.d37cb4p-1, 0x1.f6ef5cp-1, -0x1.c50fe8p-4, 0x1.adc274p-1, 0x1.b478eap-1, 0x1.476466p-2, 0x1.e3098ap-4, -0x1.83f99p-3, -0x1.cd376ep-1, -0x1.a02d58p-3, -0x1.866afep-2, -0x1.128a7p-1, 0x1.06e73p-1, -0x1.d11526p-2, -0x1.d4d37cp-3, 0x1.691fa4p+0, -0x1.25686ap-4, -0x1.229432p-1, 0x1.d0470ap-2, -0x1.e24f38p-2, 0x1.e47b0ep-1, -0x1.cd2d98p-4, -0x1.0658bcp-1, 0x1.f11e26p-3, -0x1.63a718p-2, 0x1.2f8116p-5, -0x1.1318dcp-2, 0x1.3fad04p-4, 0x1.97b95cp-1, -0x1.1d3286p+0, 0x1.77ae3cp-2, 0x1.900944p-2)]
# {IN}  Y_N1 = [f1:(-0x1.d89eb2p-1, 0x1.f4f55p-2, -0x1.26f5f4p+0, -0x1.479658p-4, 0x1.96771p-2, 0x1.acaefep-2, -0x1.7aa77p-1, 0x1.00de8ep+0, -0x1.d4c35ap-2, 0x1.68d30cp-2, -0x1.eca52p-1, -0x1.120a56p+0, -0x1.b172cp-8, -0x1.0e592p-2, -0x1.01c224p-2, -0x1.a8e27ap-3, 0x1.32d864p-4, 0x1.98ffdcp-3, -0x1.bc7be8p-2, 0x1.ca031ap-1, -0x1.17e02cp-3, 0x1.e15caep-2, 0x1.c7c246p-2, -0x1.5f71bap+0, 0x1.08287ep-1, -0x1.5c3f88p-4, 0x1.296ec4p-2, 0x1.61896ep-2, 0x1.070172p+1, 0x1.3d1a5ap+0, -0x1.89a084p-3, -0x1.406daep-1, 0x1.c8a7bap-5, 0x1.7a4a7ep-4, 0x1.b98ep-8, 0x1.cbc106p-1, 0x1.47e152p-3, 0x1.ae9d82p-1, -0x1.3814ecp+0, 0x1.903d7p-1, 0x1.b2f428p-4, -0x1.b2b03ep-2, -0x1.4bc48cp-2, -0x1.0e1ebap-3, 0x1.dbaa38p-1, 0x1.5f660ap+0, -0x1.3a03cep-3, 0x1.0626d8p-3),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# {OUT} Y_N2 = [f1:(0x1.cc87f4p+0, 0x1.92678p+1, 0x1.5316eap+1, -0x1.487918p+2, -0x1.d87d98p+0, 0x1.596bfp-1, -0x1.6e877p+0, 0x1.0e16a6p+1, 0x1.e5020ep+1, -0x1.ac2118p+0, -0x1.0cb08p-2, -0x1.2d065p-2),
#               f2:(-0x1.763f14p+1, -0x1.52fdb8p+1, -0x1.73bf4ep+1, -0x1.8f03cp-2, 0x1.1b0b52p+0, -0x1.807974p+0, 0x1.5dd7a2p+3, -0x1.fe429cp+4, -0x1.289bcp-5, -0x1.8c82ep-3, -0x1.5597eap+1, 0x1.16bfb2p+1),
#               f3:(-0x1.4c50bp+0, 0x1.1e54cp+0, 0x1.3829b8p+0, -0x1.010268p+2, 0x1.324bfp-1, -0x1.f4209p+0, -0x1.05d4dap+1, 0x1.252fdap+1, -0x1.c56ap-8, -0x1.6b3778p-1, 0x1.63e29p-1, -0x1.454cap-1),
#               f4:(0x1.61261cp+0, -0x1.213e0cp+2, -0x1.336dd8p-1, -0x1.ed515p-3, 0x1.b4a154p+1, -0x1.9f32bap+2, 0x1.44c7f4p+1, -0x1.521de8p+1, -0x1.162648p+2, 0x1.77d4ap-3, 0x1.e5002p-2, -0x1.8a457p-2),
#               f5:(0x1.34c3a8p+0, -0x1.06e3f2p+1, -0x1.ce1bep-2, -0x1.cb67ap-2, -0x1.89c834p+1, -0x1.1a74f8p+1, -0x1.a7469p+0, 0x1.a2961cp+1, 0x1.ba8372p+2, 0x1.7e0ca4p+0, -0x1.453adcp+0, 0x1.3aca58p-1),
#               f6:(-0x1.db9066p+2, 0x1.1020ap-1, -0x1.4db08p-4, 0x1.10db2p-3, 0x1.364b3cp+2, 0x1.ba99f8p-1, 0x1.cde36p+0, -0x1.565114p+1, -0x1.ba4be6p+1, -0x1.31501cp+2, 0x1.aadcap+1, -0x1.ee5864p+2)]
# Returned status: 0
#
# Quantizer_standard::process(const float32 Y_N1[6x12], int8 Y_N2[6x12])
# {IN}  Y_N1 = [f1:(0x1.cc87f4p+0, 0x1.92678p+1, 0x1.5316eap+1, -0x1.487918p+2, -0x1.d87d98p+0, 0x1.596bfp-1, -0x1.6e877p+0, 0x1.0e16a6p+1, 0x1.e5020ep+1, -0x1.ac2118p+0, -0x1.0cb08p-2, -0x1.2d065p-2),
#               f2:(-0x1.763f14p+1, -0x1.52fdb8p+1, -0x1.73bf4ep+1, -0x1.8f03cp-2, 0x1.1b0b52p+0, -0x1.807974p+0, 0x1.5dd7a2p+3, -0x1.fe429cp+4, -0x1.289bcp-5, -0x1.8c82ep-3, -0x1.5597eap+1, 0x1.16bfb2p+1),
#               f3:(-0x1.4c50bp+0, 0x1.1e54cp+0, 0x1.3829b8p+0, -0x1.010268p+2, 0x1.324bfp-1, -0x1.f4209p+0, -0x1.05d4dap+1, 0x1.252fdap+1, -0x1.c56ap-8, -0x1.6b3778p-1, 0x1.63e29p-1, -0x1.454cap-1),
#               f4:(0x1.61261cp+0, -0x1.213e0cp+2, -0x1.336dd8p-1, -0x1.ed515p-3, 0x1.b4a154p+1, -0x1.9f32bap+2, 0x1.44c7f4p+1, -0x1.521de8p+1, -0x1.162648p+2, 0x1.77d4ap-3, 0x1.e5002p-2, -0x1.8a457p-2),
#               f5:(0x1.34c3a8p+0, -0x1.06e3f2p+1, -0x1.ce1bep-2, -0x1.cb67ap-2, -0x1.89c834p+1, -0x1.1a74f8p+1, -0x1.a7469p+0, 0x1.a2961cp+1, 0x1.ba8372p+2, 0x1.7e0ca4p+0, -0x1.453adcp+0, 0x1.3aca58p-1),
#               f6:(-0x1.db9066p+2, 0x1.1020ap-1, -0x1.4db08p-4, 0x1.10db2p-3, 0x1.364b3cp+2, 0x1.ba99f8p-1, 0x1.cde36p+0, -0x1.565114p+1, -0x1.ba4be6p+1, -0x1.31501cp+2, 0x1.aadcap+1, -0x1.ee5864p+2)]
# {OUT} Y_N2 = [f1:(0xe, 0x19, 0x15, 0xffffffd7, 0xfffffff1, 0x5, 0xfffffff5, 0x11, 0x1e, 0xfffffff3, 0xfffffffe, 0xfffffffe),
#               f2:(0xffffffe9, 0xffffffeb, 0xffffffe9, 0xfffffffd, 0x9, 0xfffffff4, 0x57, 0xffffff81, 0x0, 0xfffffffe, 0xffffffeb, 0x11),
#               f3:(0xfffffff6, 0x9, 0xa, 0xffffffe0, 0x5, 0xfffffff0, 0xfffffff0, 0x12, 0x0, 0xfffffffa, 0x6, 0xfffffffb),
#               f4:(0xb, 0xffffffdc, 0xfffffffb, 0xfffffffe, 0x1b, 0xffffffcc, 0x14, 0xffffffeb, 0xffffffdd, 0x1, 0x4, 0xfffffffd),
#               f5:(0xa, 0xfffffff0, 0xfffffffc, 0xfffffffc, 0xffffffe7, 0xffffffee, 0xfffffff3, 0x1a, 0x37, 0xc, 0xfffffff6, 0x5),
#               f6:(0xffffffc5, 0x4, 0xffffffff, 0x1, 0x27, 0x7, 0xe, 0xffffffeb, 0xffffffe4, 0xffffffda, 0x1b, 0xffffffc2)]
# Returned status: 0
#
# Puncturer_NO::depuncture(const int8 Y_N1[6x12], int8 Y_N2[6x12])
# {IN}  Y_N1 = [f1:(0xe, 0x19, 0x15, 0xffffffd7, 0xfffffff1, 0x5, 0xfffffff5, 0x11, 0x1e, 0xfffffff3, 0xfffffffe, 0xfffffffe),
#               f2:(0xffffffe9, 0xffffffeb, 0xffffffe9, 0xfffffffd, 0x9, 0xfffffff4, 0x57, 0xffffff81, 0x0, 0xfffffffe, 0xffffffeb, 0x11),
#               f3:(0xfffffff6, 0x9, 0xa, 0xffffffe0, 0x5, 0xfffffff0, 0xfffffff0, 0x12, 0x0, 0xfffffffa, 0x6, 0xfffffffb),
#               f4:(0xb, 0xffffffdc, 0xfffffffb, 0xfffffffe, 0x1b, 0xffffffcc, 0x14, 0xffffffeb, 0xffffffdd, 0x1, 0x4, 0xfffffffd),
#               f5:(0xa, 0xfffffff0, 0xfffffffc, 0xfffffffc, 0xffffffe7, 0xffffffee, 0xfffffff3, 0x1a, 0x37, 0xc, 0xfffffff6, 0x5),
#               f6:(0xffffffc5, 0x4, 0xffffffff, 0x1, 0x27, 0x7, 0xe, 0xffffffeb, 0xffffffe4, 0xffffffda, 0x1b, 0xffffffc2)]
# {OUT} Y_N2 = [f1:(0xe, 0x19, 0x15, 0xffffffd7, 0xfffffff1, 0x5, 0xfffffff5, 0x11, 0x1e, 0xfffffff3, 0xfffffffe, 0xfffffffe),
#               f2:(0xffffffe9, 0xffffffeb, 0xffffffe9, 0xfffffffd, 0x9, 0xfffffff4, 0x57, 0xffffff81, 0x0, 0xfffffffe, 0xffffffeb, 0x11),
#               f3:(0xfffffff6, 0x9, 0xa, 0xffffffe0, 0x5, 0xfffffff0, 0xfffffff0, 0x12, 0x0, 0xfffffffa, 0x6, 0xfffffffb),
#               f4:(0xb, 0xffffffdc, 0xfffffffb, 0xfffffffe, 0x1b, 0xffffffcc, 0x14, 0xffffffeb, 0xffffffdd, 0x1, 0x4, 0xfffffffd),
#               f5:(0xa, 0xfffffff0, 0xfffffffc, 0xfffffffc, 0xffffffe7, 0xffffffee, 0xfffffff3, 0x1a, 0x37, 0xc, 0xfffffff6, 0x5),
#               f6:(0xffffffc5, 0x4, 0xffffffff, 0x1, 0x27, 0x7, 0xe, 0xffffffeb, 0xffffffe4, 0xffffffda, 0x1b, 0xffffffc2)]
# Returned status: 0
#
# Decoder_NO::decode_siho(const int8 Y_N[6x12], int8 V_K[6x12])
# {IN}  Y_N = [f1:(0xe, 0x19, 0x15, 0xffffffd7, 0xfffffff1, 0x5, 0xfffffff5, 0x11, 0x1e, 0xfffffff3, 0xfffffffe, 0xfffffffe),
#              f2:(0xffffffe9, 0xffffffeb, 0xffffffe9, 0xfffffffd, 0x9, 0xfffffff4, 0x57, 0xffffff81, 0x0, 0xfffffffe, 0xffffffeb, 0x11),
#              f3:(0xfffffff6, 0x9, 0xa, 0xffffffe0, 0x5, 0xfffffff0, 0xfffffff0, 0x12, 0x0, 0xfffffffa, 0x6, 0xfffffffb),
#              f4:(0xb, 0xffffffdc, 0xfffffffb, 0xfffffffe, 0x1b, 0xffffffcc, 0x14, 0xffffffeb, 0xffffffdd, 0x1, 0x4, 0xfffffffd),
#              f5:(0xa, 0xfffffff0, 0xfffffffc, 0xfffffffc, 0xffffffe7, 0xffffffee, 0xfffffff3, 0x1a, 0x37, 0xc, 0xfffffff6, 0x5),
#              f6:(0xffffffc5, 0x4, 0xffffffff, 0x1, 0x27, 0x7, 0xe, 0xffffffeb, 0xffffffe4, 0xffffffda, 0x1b, 0xffffffc2)]
# {OUT} V_K = [f1:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1),
#              f2:(0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0),
#              f3:(0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#              f4:(0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1),
#              f5:(0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0),
#              f6:(0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1)]
# Returned status: 0
#
# CRC_NO::extract(const int8 V_K1[6x12], int8 V_K2[6x12])
# {IN}  V_K1 = [f1:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1),
#               f2:(0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0),
#               f3:(0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#               f4:(0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1),
#               f5:(0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0),
#               f6:(0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1)]
# {OUT} V_K2 = [f1:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1),
#               f2:(0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0),
#               f3:(0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#               f4:(0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1),
#               f5:(0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0),
#               f6:(0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1)]
# Returned status: 0
#
# Monitor_BFER::check_errors(const int8 U[6x12], const int8 V[6x12])
# {IN}  U = [f1:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0),
#            f2:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0),
#            f3:(0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1),
#            f4:(0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#            f5:(0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0),
#            f6:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1)]
# {IN}  V = [f1:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1),
#            f2:(0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0),
#            f3:(0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#            f4:(0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1),
#            f5:(0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0),
#            f6:(0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1)]
# Returned status: 9
#
# -------------------------------
# New communication (nÂ°7)
# -------------------------------
#
# Source_random::generate(int8 U_K[6x12])
# {OUT} U_K = [f1:(0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1),
#              f2:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0),
#              f3:(0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#              f4:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0),
#              f5:(0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#              f6:(0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1)]
# Returned status: 0
#
# CRC_NO::build(const int8 U_K1[6x12], int8 U_K2[6x12])
# {IN}  U_K1 = [f1:(0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1),
#               f2:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0),
#               f3:(0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#               f4:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0),
#               f5:(0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#               f6:(0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1)]
# {OUT} U_K2 = [f1:(0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1),
#               f2:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0),
#               f3:(0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#               f4:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0),
#               f5:(0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#               f6:(0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1)]
# Returned status: 0
#
# Encoder_NO::encode(const int8 U_K[6x12], int8 X_N[6x12])
# {IN}  U_K = [f1:(0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1),
#              f2:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0),
#              f3:(0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#              f4:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0),
#              f5:(0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#              f6:(0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1)]
# {OUT} X_N = [f1:(0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1),
#              f2:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0),
#              f3:(0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#              f4:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0),
#              f5:(0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#              f6:(0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1)]
# Returned status: 0
#
# Puncturer_NO::puncture(const int8 X_N1[6x12], int8 X_N2[6x12])
# {IN}  X_N1 = [f1:(0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1),
#               f2:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0),
#               f3:(0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#               f4:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0),
#               f5:(0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#               f6:(0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1)]
# {OUT} X_N2 = [f1:(0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1),
#               f2:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0),
#               f3:(0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#               f4:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0),
#               f5:(0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#               f6:(0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1)]
# Returned status: 0
#
# Modem_SCMA::modulate(const int8 X_N1[6x12], float32 X_N2[6x48])
# {IN}  X_N1 = [f1:(0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1),
#               f2:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0),
#               f3:(0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#               f4:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0),
#               f5:(0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#               f6:(0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1)]
# {OUT} X_N2 = [f1:(0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0),
#               f2:(0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0),
#               f3:(0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1),
#               f5:(0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3),
#               f6:(0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Channel_Rayleigh_LLR::add_noise_wg(const float32 X_N[6x48], float32 H_N[6x48], float32 Y_N[6x48])
# {IN}  X_N = [f1:(0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0),
#              f2:(0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0),
#              f3:(0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1),
#              f5:(0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3),
#              f6:(0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0)]
# {OUT} H_N = [f1:(-0x1.70988ap-4, 0x1.e367fep-1, -0x1.d32c04p-1, -0x1.d2b8a8p-2, 0x1.984ef4p-4, 0x1.47bc56p-3, 0x1.f2b1aap-4, -0x1.339724p+0, -0x1.46c1a2p-1, -0x1.8afe3cp-3, 0x1.a58378p-4, 0x1.17d50ep-1, 0x1.4ae3fep-4, -0x1.2e0e82p-3, 0x1.645b5p-1, 0x1.2922ccp-2, 0x1.6bb5ecp+0, 0x1.bc89bap-4, -0x1.599b28p-1, 0x1.5ea6dep+0, -0x1.09e4e8p-5, -0x1.c09a4ep-2, 0x1.cddadp-2, 0x1.0c0398p-1, 0x1.7729f6p-1, -0x1.b4237cp-1, -0x1.74f24p+0, -0x1.04fc76p-5, -0x1.96c5fep-2, 0x1.31d164p-4, 0x1.a8dd9p-2, 0x1.592f88p-1, 0x1.e29adap-2, 0x1.857b1ep-2, 0x1.ba78e2p-5, 0x1.9254cp-2, 0x1.cbfe5p-2, -0x1.01c6b4p-2, -0x1.8c9d4ep+0, -0x1.9be08ep-2, 0x1.134e6ap+0, 0x1.ecd66cp-2, 0x1.ad6004p-1, 0x1.447b7ep+0, -0x1.300c1ep+0, -0x1.4e46d8p+0, 0x1.c4feb4p-4, 0x1.ae87d6p-3),
#              f2:(0x1.0665ecp+0, 0x1.c5c1eep-1, 0x1.c9552cp-1, -0x1.6e6778p-2, 0x1.217c82p-4, 0x1.14cb44p-3, -0x1.f74c06p-4, -0x1.d50b06p-3, 0x1.4fdd34p-4, 0x1.4b0e72p-3, -0x1.813f5ap-2, 0x1.8b12fp-1, 0x1.130b86p-1, -0x1.27ec5p-2, -0x1.0cd73ep-1, -0x1.84f35cp-1, -0x1.5dd61ap-4, 0x1.5e48bap-4, 0x1.16e876p-2, 0x1.43c0cep-2, -0x1.572e82p-1, -0x1.1680ep+0, 0x1.38a246p-1, -0x1.3d70fcp+0, 0x1.2c32fp-1, 0x1.672d42p-4, -0x1.3adfd2p-5, -0x1.23039ep+0, 0x1.a2df76p-4, 0x1.cc6154p-2, 0x1.c0b1dap-3, -0x1.ed55b8p-1, -0x1.4c01e2p-3, -0x1.4efb0ap+0, 0x1.50521p-1, 0x1.a6d484p+0, 0x1.3acc58p-4, 0x1.24acacp-1, 0x1.777c46p-2, -0x1.952d38p-1, 0x1.21d23ep-4, 0x1.cb3344p-1, 0x1.afad32p-2, 0x1.08c2a8p+0, -0x1.6e8d18p-1, -0x1.efd23p-2, 0x1.2f90b8p-3, 0x1.2536c2p-1),
#              f3:(-0x1.2fd6ep-12, -0x1.1def9ap-1, 0x1.04e94cp-3, 0x1.1302ccp-4, -0x1.b5c558p-4, 0x1.7b4ab2p-3, -0x1.197e0cp-1, -0x1.48c186p-2, 0x1.11d9dep+0, 0x1.06b57cp-1, -0x1.02227ap+0, 0x1.39673ap+0, 0x1.609a3p+0, 0x1.812788p-1, -0x1.c45e4cp-8, 0x1.f609c2p-2, 0x1.1dbe1cp-4, -0x1.a37bep-1, 0x1.b12b2p-1, 0x1.e991b2p-2, -0x1.f5c526p-1, -0x1.3e65a8p+0, -0x1.1ceabap-2, -0x1.afb308p-4, 0x1.77fe82p-3, -0x1.e8ade2p-3, -0x1.de9f26p-1, 0x1.29f4a8p-1, 0x1.b86e2cp-5, -0x1.6369d4p-1, -0x1.5408acp+0, 0x1.48e3dap+0, 0x1.bf52f6p-2, -0x1.6026aap-1, 0x1.6c704p-1, -0x1.2ca406p+0, 0x1.fa2e88p-3, -0x1.af2e12p-1, -0x1.09ab7ap-4, -0x1.83eb14p+0, -0x1.380912p-1, -0x1.26d9ap-5, -0x1.26bc0ap-1, 0x1.7d5ebp+0, 0x1.c58358p-2, 0x1.6587a6p-2, -0x1.84fa42p-1, -0x1.ba9b46p-2),
#              f4:(-0x1.29e96ap-1, -0x1.19b282p-1, 0x1.73758ap-1, -0x1.fbdfa8p-2, 0x1.46dc4p-3, -0x1.0eb5fp-2, -0x1.0bc958p-3, -0x1.2a718p-1, -0x1.216ee6p+0, -0x1.161c1cp-4, 0x1.e58f04p-1, 0x1.294fccp+0, -0x1.e06b8cp-1, 0x1.f1495ep-1, 0x1.30502p-2, -0x1.91f266p-1, -0x1.438c42p-1, 0x1.da1026p-3, -0x1.0f5388p-1, -0x1.51479ep-5, 0x1.5fb8p-1, 0x1.36e692p+0, 0x1.35385p-2, 0x1.1186b8p-1, -0x1.c94fdep+0, -0x1.2cff6cp-1, 0x1.33bb66p-3, -0x1.afbbc2p-2, -0x1.2512p-1, 0x1.29c83ep-1, 0x1.3b2cf6p+0, 0x1.2e43fcp-1, 0x1.e5944cp-2, 0x1.1def82p-1, -0x1.496cd6p-4, 0x1.605a46p-1, 0x1.3f9a5cp-2, 0x1.b67f88p-3, -0x1.e2f1fep-6, 0x1.b51524p-3, 0x1.d378p-1, 0x1.ef5696p-2, -0x1.36ce9ap-1, -0x1.44b62ap+0, 0x1.a1d128p-1, 0x1.255a82p-2, 0x1.6885b6p-1, 0x1.3c95ccp-3),
#              f5:(0x1.314c2p-1, -0x1.db11c2p-3, 0x1.372996p-1, -0x1.2d495cp+0, -0x1.e70e9cp-2, 0x1.7d29f4p-2, -0x1.8dcadp-1, 0x1.aad27ep-1, 0x1.563c58p-1, 0x1.bf84d2p-2, -0x1.92397ep-1, -0x1.385cc2p-2, 0x1.6cfae6p-2, -0x1.5b2554p-2, -0x1.0a62fap+0, -0x1.4cab38p+0, -0x1.ace066p-2, 0x1.61da78p-1, 0x1.9e9bfap-7, 0x1.9d2b2cp-1, 0x1.ea3302p-2, 0x1.711298p-2, 0x1.3fd54ep-2, 0x1.aaff78p-2, 0x1.b713a2p-5, -0x1.ba3872p-2, -0x1.f0f7fcp-4, -0x1.182946p+0, -0x1.4bae98p-1, 0x1.5b057ap+0, 0x1.d65cfap-1, 0x1.3ddfcep-1, -0x1.a64e2p+0, 0x1.7b811cp-2, -0x1.f4c82ep-1, 0x1.10059ep-1, -0x1.5d3626p-1, 0x1.89bf3ap-3, 0x1.7420d4p-2, 0x1.744064p-2, -0x1.5160ap-6, -0x1.051a0ep-6, 0x1.6d193ep-3, 0x1.333436p+0, 0x1.8206eap-1, 0x1.72fe4cp-1, -0x1.e81d26p-1, -0x1.14a0cap-2),
#              f6:(-0x1.cb8d68p-6, 0x1.05e12p-2, -0x1.69f8a6p-2, -0x1.59929ep-1, -0x1.eb248cp-1, -0x1.10f7dep-2, 0x1.9a7a8ep-3, -0x1.d2a42ap-2, -0x1.89d942p-3, 0x1.884504p+0, -0x1.ba9982p-3, 0x1.4cfc7cp-2, -0x1.e19d94p-1, -0x1.020bep-6, -0x1.f870e4p-6, 0x1.20509cp-3, -0x1.bc0c14p-3, 0x1.2d25acp-1, -0x1.757424p-1, -0x1.56ae3ep+0, 0x1.b652d4p-1, -0x1.36c49ep-2, 0x1.c4ad1ap-3, -0x1.82b058p-3, 0x1.3a6f6ep-6, 0x1.1f576ap-1, 0x1.6b71cp-2, -0x1.260ebp-4, -0x1.931d82p-4, -0x1.acc84p-1, 0x1.25288cp+0, 0x1.793ea8p-2, 0x1.54e34ap-1, -0x1.cd8854p-4, -0x1.e5c7b6p-2, -0x1.5efec6p-3, -0x1.8f9332p-1, 0x1.ef8cbep-2, 0x1.c2b3aep-1, -0x1.4eeaep-2, 0x1.6e8ac6p-1, 0x1.12af94p-1, 0x1.82d346p-2, -0x1.69f79ep-3, -0x1.0478a8p+0, -0x1.3279aap-5, -0x1.e7d3ep-3, -0x1.3c30aep-6)]
# {OUT} Y_N = [f1:(0x1.9376e2p-1, 0x1.7517dep-1, 0x1.23144ap-2, 0x1.2ff7fep-1, 0x1.639138p-6, 0x1.91b44cp-2, 0x1.6a1012p-4, 0x1.cab448p+0, 0x1.1a89b8p-1, -0x1.29039p-3, 0x1.1cb0fp-1, -0x1.bbf146p-1, -0x1.7dcad6p-1, 0x1.a9edp+0, -0x1.ab8968p+0, -0x1.93a21ep-2, 0x1.0d6bap-3, -0x1.4042fap-2, 0x1.c34fcp-1, 0x1.d6ee4ap-1, -0x1.65ec7ep-1, -0x1.a7cf2ap-3, 0x1.206aa8p-2, 0x1.2ea1b4p-2, -0x1.82cb7p-7, 0x1.08ad44p-3, -0x1.6b786p-4, -0x1.bea6ecp+0, 0x1.2cd7a8p-1, -0x1.a6f13p-1, 0x1.87e5d2p-2, 0x1.db1092p-2, -0x1.c9da28p-3, -0x1.75f696p+0, 0x1.2c9858p-2, 0x1.037024p-3, 0x1.2c1138p-2, 0x1.6f049cp-1, 0x1.b7363cp+0, 0x1.9a27ap-5, 0x1.11c3dep-1, 0x1.f2d54cp-2, 0x1.75d55ep-2, 0x1.35f07p+0, 0x1.16051p-1, -0x1.fe50dp-2, 0x1.d309dcp-1, -0x1.31310ap-2),
#              f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Modem_SCMA::filter(const float32 Y_N1[6x48], float32 Y_N2[6x48])
# {IN}  Y_N1 = [f1:(0x1.9376e2p-1, 0x1.7517dep-1, 0x1.23144ap-2, 0x1.2ff7fep-1, 0x1.639138p-6, 0x1.91b44cp-2, 0x1.6a1012p-4, 0x1.cab448p+0, 0x1.1a89b8p-1, -0x1.29039p-3, 0x1.1cb0fp-1, -0x1.bbf146p-1, -0x1.7dcad6p-1, 0x1.a9edp+0, -0x1.ab8968p+0, -0x1.93a21ep-2, 0x1.0d6bap-3, -0x1.4042fap-2, 0x1.c34fcp-1, 0x1.d6ee4ap-1, -0x1.65ec7ep-1, -0x1.a7cf2ap-3, 0x1.206aa8p-2, 0x1.2ea1b4p-2, -0x1.82cb7p-7, 0x1.08ad44p-3, -0x1.6b786p-4, -0x1.bea6ecp+0, 0x1.2cd7a8p-1, -0x1.a6f13p-1, 0x1.87e5d2p-2, 0x1.db1092p-2, -0x1.c9da28p-3, -0x1.75f696p+0, 0x1.2c9858p-2, 0x1.037024p-3, 0x1.2c1138p-2, 0x1.6f049cp-1, 0x1.b7363cp+0, 0x1.9a27ap-5, 0x1.11c3dep-1, 0x1.f2d54cp-2, 0x1.75d55ep-2, 0x1.35f07p+0, 0x1.16051p-1, -0x1.fe50dp-2, 0x1.d309dcp-1, -0x1.31310ap-2),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# {OUT} Y_N2 = [f1:(0x1.9376e2p-1, 0x1.7517dep-1, 0x1.23144ap-2, 0x1.2ff7fep-1, 0x1.639138p-6, 0x1.91b44cp-2, 0x1.6a1012p-4, 0x1.cab448p+0, 0x1.1a89b8p-1, -0x1.29039p-3, 0x1.1cb0fp-1, -0x1.bbf146p-1, -0x1.7dcad6p-1, 0x1.a9edp+0, -0x1.ab8968p+0, -0x1.93a21ep-2, 0x1.0d6bap-3, -0x1.4042fap-2, 0x1.c34fcp-1, 0x1.d6ee4ap-1, -0x1.65ec7ep-1, -0x1.a7cf2ap-3, 0x1.206aa8p-2, 0x1.2ea1b4p-2, -0x1.82cb7p-7, 0x1.08ad44p-3, -0x1.6b786p-4, -0x1.bea6ecp+0, 0x1.2cd7a8p-1, -0x1.a6f13p-1, 0x1.87e5d2p-2, 0x1.db1092p-2, -0x1.c9da28p-3, -0x1.75f696p+0, 0x1.2c9858p-2, 0x1.037024p-3, 0x1.2c1138p-2, 0x1.6f049cp-1, 0x1.b7363cp+0, 0x1.9a27ap-5, 0x1.11c3dep-1, 0x1.f2d54cp-2, 0x1.75d55ep-2, 0x1.35f07p+0, 0x1.16051p-1, -0x1.fe50dp-2, 0x1.d309dcp-1, -0x1.31310ap-2),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Modem_SCMA::demodulate_wg(const float32 H_N[6x48], const float32 Y_N1[6x48], float32 Y_N2[6x12])
# {IN}  H_N  = [f1:(-0x1.70988ap-4, 0x1.e367fep-1, -0x1.d32c04p-1, -0x1.d2b8a8p-2, 0x1.984ef4p-4, 0x1.47bc56p-3, 0x1.f2b1aap-4, -0x1.339724p+0, -0x1.46c1a2p-1, -0x1.8afe3cp-3, 0x1.a58378p-4, 0x1.17d50ep-1, 0x1.4ae3fep-4, -0x1.2e0e82p-3, 0x1.645b5p-1, 0x1.2922ccp-2, 0x1.6bb5ecp+0, 0x1.bc89bap-4, -0x1.599b28p-1, 0x1.5ea6dep+0, -0x1.09e4e8p-5, -0x1.c09a4ep-2, 0x1.cddadp-2, 0x1.0c0398p-1, 0x1.7729f6p-1, -0x1.b4237cp-1, -0x1.74f24p+0, -0x1.04fc76p-5, -0x1.96c5fep-2, 0x1.31d164p-4, 0x1.a8dd9p-2, 0x1.592f88p-1, 0x1.e29adap-2, 0x1.857b1ep-2, 0x1.ba78e2p-5, 0x1.9254cp-2, 0x1.cbfe5p-2, -0x1.01c6b4p-2, -0x1.8c9d4ep+0, -0x1.9be08ep-2, 0x1.134e6ap+0, 0x1.ecd66cp-2, 0x1.ad6004p-1, 0x1.447b7ep+0, -0x1.300c1ep+0, -0x1.4e46d8p+0, 0x1.c4feb4p-4, 0x1.ae87d6p-3),
#               f2:(0x1.0665ecp+0, 0x1.c5c1eep-1, 0x1.c9552cp-1, -0x1.6e6778p-2, 0x1.217c82p-4, 0x1.14cb44p-3, -0x1.f74c06p-4, -0x1.d50b06p-3, 0x1.4fdd34p-4, 0x1.4b0e72p-3, -0x1.813f5ap-2, 0x1.8b12fp-1, 0x1.130b86p-1, -0x1.27ec5p-2, -0x1.0cd73ep-1, -0x1.84f35cp-1, -0x1.5dd61ap-4, 0x1.5e48bap-4, 0x1.16e876p-2, 0x1.43c0cep-2, -0x1.572e82p-1, -0x1.1680ep+0, 0x1.38a246p-1, -0x1.3d70fcp+0, 0x1.2c32fp-1, 0x1.672d42p-4, -0x1.3adfd2p-5, -0x1.23039ep+0, 0x1.a2df76p-4, 0x1.cc6154p-2, 0x1.c0b1dap-3, -0x1.ed55b8p-1, -0x1.4c01e2p-3, -0x1.4efb0ap+0, 0x1.50521p-1, 0x1.a6d484p+0, 0x1.3acc58p-4, 0x1.24acacp-1, 0x1.777c46p-2, -0x1.952d38p-1, 0x1.21d23ep-4, 0x1.cb3344p-1, 0x1.afad32p-2, 0x1.08c2a8p+0, -0x1.6e8d18p-1, -0x1.efd23p-2, 0x1.2f90b8p-3, 0x1.2536c2p-1),
#               f3:(-0x1.2fd6ep-12, -0x1.1def9ap-1, 0x1.04e94cp-3, 0x1.1302ccp-4, -0x1.b5c558p-4, 0x1.7b4ab2p-3, -0x1.197e0cp-1, -0x1.48c186p-2, 0x1.11d9dep+0, 0x1.06b57cp-1, -0x1.02227ap+0, 0x1.39673ap+0, 0x1.609a3p+0, 0x1.812788p-1, -0x1.c45e4cp-8, 0x1.f609c2p-2, 0x1.1dbe1cp-4, -0x1.a37bep-1, 0x1.b12b2p-1, 0x1.e991b2p-2, -0x1.f5c526p-1, -0x1.3e65a8p+0, -0x1.1ceabap-2, -0x1.afb308p-4, 0x1.77fe82p-3, -0x1.e8ade2p-3, -0x1.de9f26p-1, 0x1.29f4a8p-1, 0x1.b86e2cp-5, -0x1.6369d4p-1, -0x1.5408acp+0, 0x1.48e3dap+0, 0x1.bf52f6p-2, -0x1.6026aap-1, 0x1.6c704p-1, -0x1.2ca406p+0, 0x1.fa2e88p-3, -0x1.af2e12p-1, -0x1.09ab7ap-4, -0x1.83eb14p+0, -0x1.380912p-1, -0x1.26d9ap-5, -0x1.26bc0ap-1, 0x1.7d5ebp+0, 0x1.c58358p-2, 0x1.6587a6p-2, -0x1.84fa42p-1, -0x1.ba9b46p-2),
#               f4:(-0x1.29e96ap-1, -0x1.19b282p-1, 0x1.73758ap-1, -0x1.fbdfa8p-2, 0x1.46dc4p-3, -0x1.0eb5fp-2, -0x1.0bc958p-3, -0x1.2a718p-1, -0x1.216ee6p+0, -0x1.161c1cp-4, 0x1.e58f04p-1, 0x1.294fccp+0, -0x1.e06b8cp-1, 0x1.f1495ep-1, 0x1.30502p-2, -0x1.91f266p-1, -0x1.438c42p-1, 0x1.da1026p-3, -0x1.0f5388p-1, -0x1.51479ep-5, 0x1.5fb8p-1, 0x1.36e692p+0, 0x1.35385p-2, 0x1.1186b8p-1, -0x1.c94fdep+0, -0x1.2cff6cp-1, 0x1.33bb66p-3, -0x1.afbbc2p-2, -0x1.2512p-1, 0x1.29c83ep-1, 0x1.3b2cf6p+0, 0x1.2e43fcp-1, 0x1.e5944cp-2, 0x1.1def82p-1, -0x1.496cd6p-4, 0x1.605a46p-1, 0x1.3f9a5cp-2, 0x1.b67f88p-3, -0x1.e2f1fep-6, 0x1.b51524p-3, 0x1.d378p-1, 0x1.ef5696p-2, -0x1.36ce9ap-1, -0x1.44b62ap+0, 0x1.a1d128p-1, 0x1.255a82p-2, 0x1.6885b6p-1, 0x1.3c95ccp-3),
#               f5:(0x1.314c2p-1, -0x1.db11c2p-3, 0x1.372996p-1, -0x1.2d495cp+0, -0x1.e70e9cp-2, 0x1.7d29f4p-2, -0x1.8dcadp-1, 0x1.aad27ep-1, 0x1.563c58p-1, 0x1.bf84d2p-2, -0x1.92397ep-1, -0x1.385cc2p-2, 0x1.6cfae6p-2, -0x1.5b2554p-2, -0x1.0a62fap+0, -0x1.4cab38p+0, -0x1.ace066p-2, 0x1.61da78p-1, 0x1.9e9bfap-7, 0x1.9d2b2cp-1, 0x1.ea3302p-2, 0x1.711298p-2, 0x1.3fd54ep-2, 0x1.aaff78p-2, 0x1.b713a2p-5, -0x1.ba3872p-2, -0x1.f0f7fcp-4, -0x1.182946p+0, -0x1.4bae98p-1, 0x1.5b057ap+0, 0x1.d65cfap-1, 0x1.3ddfcep-1, -0x1.a64e2p+0, 0x1.7b811cp-2, -0x1.f4c82ep-1, 0x1.10059ep-1, -0x1.5d3626p-1, 0x1.89bf3ap-3, 0x1.7420d4p-2, 0x1.744064p-2, -0x1.5160ap-6, -0x1.051a0ep-6, 0x1.6d193ep-3, 0x1.333436p+0, 0x1.8206eap-1, 0x1.72fe4cp-1, -0x1.e81d26p-1, -0x1.14a0cap-2),
#               f6:(-0x1.cb8d68p-6, 0x1.05e12p-2, -0x1.69f8a6p-2, -0x1.59929ep-1, -0x1.eb248cp-1, -0x1.10f7dep-2, 0x1.9a7a8ep-3, -0x1.d2a42ap-2, -0x1.89d942p-3, 0x1.884504p+0, -0x1.ba9982p-3, 0x1.4cfc7cp-2, -0x1.e19d94p-1, -0x1.020bep-6, -0x1.f870e4p-6, 0x1.20509cp-3, -0x1.bc0c14p-3, 0x1.2d25acp-1, -0x1.757424p-1, -0x1.56ae3ep+0, 0x1.b652d4p-1, -0x1.36c49ep-2, 0x1.c4ad1ap-3, -0x1.82b058p-3, 0x1.3a6f6ep-6, 0x1.1f576ap-1, 0x1.6b71cp-2, -0x1.260ebp-4, -0x1.931d82p-4, -0x1.acc84p-1, 0x1.25288cp+0, 0x1.793ea8p-2, 0x1.54e34ap-1, -0x1.cd8854p-4, -0x1.e5c7b6p-2, -0x1.5efec6p-3, -0x1.8f9332p-1, 0x1.ef8cbep-2, 0x1.c2b3aep-1, -0x1.4eeaep-2, 0x1.6e8ac6p-1, 0x1.12af94p-1, 0x1.82d346p-2, -0x1.69f79ep-3, -0x1.0478a8p+0, -0x1.3279aap-5, -0x1.e7d3ep-3, -0x1.3c30aep-6)]
# {IN}  Y_N1 = [f1:(0x1.9376e2p-1, 0x1.7517dep-1, 0x1.23144ap-2, 0x1.2ff7fep-1, 0x1.639138p-6, 0x1.91b44cp-2, 0x1.6a1012p-4, 0x1.cab448p+0, 0x1.1a89b8p-1, -0x1.29039p-3, 0x1.1cb0fp-1, -0x1.bbf146p-1, -0x1.7dcad6p-1, 0x1.a9edp+0, -0x1.ab8968p+0, -0x1.93a21ep-2, 0x1.0d6bap-3, -0x1.4042fap-2, 0x1.c34fcp-1, 0x1.d6ee4ap-1, -0x1.65ec7ep-1, -0x1.a7cf2ap-3, 0x1.206aa8p-2, 0x1.2ea1b4p-2, -0x1.82cb7p-7, 0x1.08ad44p-3, -0x1.6b786p-4, -0x1.bea6ecp+0, 0x1.2cd7a8p-1, -0x1.a6f13p-1, 0x1.87e5d2p-2, 0x1.db1092p-2, -0x1.c9da28p-3, -0x1.75f696p+0, 0x1.2c9858p-2, 0x1.037024p-3, 0x1.2c1138p-2, 0x1.6f049cp-1, 0x1.b7363cp+0, 0x1.9a27ap-5, 0x1.11c3dep-1, 0x1.f2d54cp-2, 0x1.75d55ep-2, 0x1.35f07p+0, 0x1.16051p-1, -0x1.fe50dp-2, 0x1.d309dcp-1, -0x1.31310ap-2),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# {OUT} Y_N2 = [f1:(-0x1.3e677ep+3, -0x1.cad9b4p+0, -0x1.0151fp+2, 0x1.9a02dcp+1, 0x1.46e0ep+0, 0x1.4af562p+1, 0x1.9c669p+1, -0x1.62ba6ap+2, -0x1.8f34aep+3, -0x1.b84dc2p+1, 0x1.4c6a8cp+0, -0x1.04b1dep+1),
#               f2:(0x1.3feb1ep+2, 0x1.e74db8p-2, 0x1.67bbfp-2, -0x1.44ca1cp+1, 0x1.92698p-5, 0x1.85ecf8p+0, -0x1.f1c18p-3, 0x1.ef652p+0, 0x1.5c0f0cp+0, 0x1.8c3ccp-3, 0x1.21d568p+2, 0x1.5f3438p-1),
#               f3:(0x1.f3bd2p-2, 0x1.727fdp-2, -0x1.9ccc58p+2, -0x1.671f74p+3, -0x1.1ccfdcp+0, -0x1.78e5ecp+0, 0x1.ca4e9ep+1, -0x1.fe52fcp+2, -0x1.5ea61p+0, -0x1.845d6p+0, 0x1.56d0fp+0, 0x1.5b1c1ap+2),
#               f4:(-0x1.bcf598p-1, -0x1.f9f87cp+0, 0x1.197c54p+3, 0x1.831894p+2, -0x1.0dc9e8p+2, -0x1.774d88p+0, -0x1.43f0dp+2, -0x1.1e7ce8p+3, 0x1.030de8p+0, 0x1.25a12p+0, 0x1.8d6p-4, 0x1.33cde8p+0),
#               f5:(-0x1.7bf0d4p+2, -0x1.795f82p+1, -0x1.7155ap+3, -0x1.a68d08p+2, -0x1.58794cp-1, 0x1.b9686p-1, -0x1.2b2f7p+1, 0x1.2baa4p-2, -0x1.84eda8p-1, -0x1.b4893ep+1, 0x1.3415d4p+2, 0x1.9df01cp+0),
#               f6:(-0x1.1cbee4p+1, -0x1.a55ef4p+0, -0x1.c4389cp+1, 0x1.190bfp+2, -0x1.6dc56ap+3, -0x1.4766fcp+2, 0x1.89e168p+1, 0x1.670f08p+1, -0x1.bf0098p+0, 0x1.5126ecp+0, 0x1.5f5d9cp+0, -0x1.a2f2ap+0)]
# Returned status: 0
#
# Quantizer_standard::process(const float32 Y_N1[6x12], int8 Y_N2[6x12])
# {IN}  Y_N1 = [f1:(-0x1.3e677ep+3, -0x1.cad9b4p+0, -0x1.0151fp+2, 0x1.9a02dcp+1, 0x1.46e0ep+0, 0x1.4af562p+1, 0x1.9c669p+1, -0x1.62ba6ap+2, -0x1.8f34aep+3, -0x1.b84dc2p+1, 0x1.4c6a8cp+0, -0x1.04b1dep+1),
#               f2:(0x1.3feb1ep+2, 0x1.e74db8p-2, 0x1.67bbfp-2, -0x1.44ca1cp+1, 0x1.92698p-5, 0x1.85ecf8p+0, -0x1.f1c18p-3, 0x1.ef652p+0, 0x1.5c0f0cp+0, 0x1.8c3ccp-3, 0x1.21d568p+2, 0x1.5f3438p-1),
#               f3:(0x1.f3bd2p-2, 0x1.727fdp-2, -0x1.9ccc58p+2, -0x1.671f74p+3, -0x1.1ccfdcp+0, -0x1.78e5ecp+0, 0x1.ca4e9ep+1, -0x1.fe52fcp+2, -0x1.5ea61p+0, -0x1.845d6p+0, 0x1.56d0fp+0, 0x1.5b1c1ap+2),
#               f4:(-0x1.bcf598p-1, -0x1.f9f87cp+0, 0x1.197c54p+3, 0x1.831894p+2, -0x1.0dc9e8p+2, -0x1.774d88p+0, -0x1.43f0dp+2, -0x1.1e7ce8p+3, 0x1.030de8p+0, 0x1.25a12p+0, 0x1.8d6p-4, 0x1.33cde8p+0),
#               f5:(-0x1.7bf0d4p+2, -0x1.795f82p+1, -0x1.7155ap+3, -0x1.a68d08p+2, -0x1.58794cp-1, 0x1.b9686p-1, -0x1.2b2f7p+1, 0x1.2baa4p-2, -0x1.84eda8p-1, -0x1.b4893ep+1, 0x1.3415d4p+2, 0x1.9df01cp+0),
#               f6:(-0x1.1cbee4p+1, -0x1.a55ef4p+0, -0x1.c4389cp+1, 0x1.190bfp+2, -0x1.6dc56ap+3, -0x1.4766fcp+2, 0x1.89e168p+1, 0x1.670f08p+1, -0x1.bf0098p+0, 0x1.5126ecp+0, 0x1.5f5d9cp+0, -0x1.a2f2ap+0)]
# {OUT} Y_N2 = [f1:(0xffffffb0, 0xfffffff2, 0xffffffe0, 0x1a, 0xa, 0x15, 0x1a, 0xffffffd4, 0xffffff9c, 0xffffffe4, 0xa, 0xfffffff0),
#               f2:(0x28, 0x4, 0x3, 0xffffffec, 0x0, 0xc, 0xfffffffe, 0xf, 0xb, 0x2, 0x24, 0x5),
#               f3:(0x4, 0x3, 0xffffffcc, 0xffffffa6, 0xfffffff7, 0xfffffff4, 0x1d, 0xffffffc0, 0xfffffff5, 0xfffffff4, 0xb, 0x2b),
#               f4:(0xfffffff9, 0xfffffff0, 0x46, 0x30, 0xffffffde, 0xfffffff4, 0xffffffd8, 0xffffffb8, 0x8, 0x9, 0x1, 0xa),
#               f5:(0xffffffd1, 0xffffffe8, 0xffffffa4, 0xffffffcb, 0xfffffffb, 0x7, 0xffffffed, 0x2, 0xfffffffa, 0xffffffe5, 0x27, 0xd),
#               f6:(0xffffffee, 0xfffffff3, 0xffffffe4, 0x23, 0xffffffa5, 0xffffffd7, 0x19, 0x16, 0xfffffff2, 0xb, 0xb, 0xfffffff3)]
# Returned status: 0
#
# Puncturer_NO::depuncture(const int8 Y_N1[6x12], int8 Y_N2[6x12])
# {IN}  Y_N1 = [f1:(0xffffffb0, 0xfffffff2, 0xffffffe0, 0x1a, 0xa, 0x15, 0x1a, 0xffffffd4, 0xffffff9c, 0xffffffe4, 0xa, 0xfffffff0),
#               f2:(0x28, 0x4, 0x3, 0xffffffec, 0x0, 0xc, 0xfffffffe, 0xf, 0xb, 0x2, 0x24, 0x5),
#               f3:(0x4, 0x3, 0xffffffcc, 0xffffffa6, 0xfffffff7, 0xfffffff4, 0x1d, 0xffffffc0, 0xfffffff5, 0xfffffff4, 0xb, 0x2b),
#               f4:(0xfffffff9, 0xfffffff0, 0x46, 0x30, 0xffffffde, 0xfffffff4, 0xffffffd8, 0xffffffb8, 0x8, 0x9, 0x1, 0xa),
#               f5:(0xffffffd1, 0xffffffe8, 0xffffffa4, 0xffffffcb, 0xfffffffb, 0x7, 0xffffffed, 0x2, 0xfffffffa, 0xffffffe5, 0x27, 0xd),
#               f6:(0xffffffee, 0xfffffff3, 0xffffffe4, 0x23, 0xffffffa5, 0xffffffd7, 0x19, 0x16, 0xfffffff2, 0xb, 0xb, 0xfffffff3)]
# {OUT} Y_N2 = [f1:(0xffffffb0, 0xfffffff2, 0xffffffe0, 0x1a, 0xa, 0x15, 0x1a, 0xffffffd4, 0xffffff9c, 0xffffffe4, 0xa, 0xfffffff0),
#               f2:(0x28, 0x4, 0x3, 0xffffffec, 0x0, 0xc, 0xfffffffe, 0xf, 0xb, 0x2, 0x24, 0x5),
#               f3:(0x4, 0x3, 0xffffffcc, 0xffffffa6, 0xfffffff7, 0xfffffff4, 0x1d, 0xffffffc0, 0xfffffff5, 0xfffffff4, 0xb, 0x2b),
#               f4:(0xfffffff9, 0xfffffff0, 0x46, 0x30, 0xffffffde, 0xfffffff4, 0xffffffd8, 0xffffffb8, 0x8, 0x9, 0x1, 0xa),
#               f5:(0xffffffd1, 0xffffffe8, 0xffffffa4, 0xffffffcb, 0xfffffffb, 0x7, 0xffffffed, 0x2, 0xfffffffa, 0xffffffe5, 0x27, 0xd),
#               f6:(0xffffffee, 0xfffffff3, 0xffffffe4, 0x23, 0xffffffa5, 0xffffffd7, 0x19, 0x16, 0xfffffff2, 0xb, 0xb, 0xfffffff3)]
# Returned status: 0
#
# Decoder_NO::decode_siho(const int8 Y_N[6x12], int8 V_K[6x12])
# {IN}  Y_N = [f1:(0xffffffb0, 0xfffffff2, 0xffffffe0, 0x1a, 0xa, 0x15, 0x1a, 0xffffffd4, 0xffffff9c, 0xffffffe4, 0xa, 0xfffffff0),
#              f2:(0x28, 0x4, 0x3, 0xffffffec, 0x0, 0xc, 0xfffffffe, 0xf, 0xb, 0x2, 0x24, 0x5),
#              f3:(0x4, 0x3, 0xffffffcc, 0xffffffa6, 0xfffffff7, 0xfffffff4, 0x1d, 0xffffffc0, 0xfffffff5, 0xfffffff4, 0xb, 0x2b),
#              f4:(0xfffffff9, 0xfffffff0, 0x46, 0x30, 0xffffffde, 0xfffffff4, 0xffffffd8, 0xffffffb8, 0x8, 0x9, 0x1, 0xa),
#              f5:(0xffffffd1, 0xffffffe8, 0xffffffa4, 0xffffffcb, 0xfffffffb, 0x7, 0xffffffed, 0x2, 0xfffffffa, 0xffffffe5, 0x27, 0xd),
#              f6:(0xffffffee, 0xfffffff3, 0xffffffe4, 0x23, 0xffffffa5, 0xffffffd7, 0x19, 0x16, 0xfffffff2, 0xb, 0xb, 0xfffffff3)]
# {OUT} V_K = [f1:(0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1),
#              f2:(0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0),
#              f3:(0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0),
#              f4:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0),
#              f5:(0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0),
#              f6:(0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1)]
# Returned status: 0
#
# CRC_NO::extract(const int8 V_K1[6x12], int8 V_K2[6x12])
# {IN}  V_K1 = [f1:(0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1),
#               f2:(0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0),
#               f3:(0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0),
#               f4:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0),
#               f5:(0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0),
#               f6:(0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1)]
# {OUT} V_K2 = [f1:(0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1),
#               f2:(0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0),
#               f3:(0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0),
#               f4:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0),
#               f5:(0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0),
#               f6:(0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1)]
# Returned status: 0
#
# Monitor_BFER::check_errors(const int8 U[6x12], const int8 V[6x12])
# {IN}  U = [f1:(0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1),
#            f2:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0),
#            f3:(0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#            f4:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0),
#            f5:(0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#            f6:(0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1)]
# {IN}  V = [f1:(0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1),
#            f2:(0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0),
#            f3:(0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0),
#            f4:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0),
#            f5:(0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0),
#            f6:(0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1)]
# Returned status: 10
#
# -------------------------------
# New communication (nÂ°8)
# -------------------------------
#
# Source_random::generate(int8 U_K[6x12])
# {OUT} U_K = [f1:(0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0),
#              f2:(0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1),
#              f3:(0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0),
#              f4:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0),
#              f5:(0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0),
#              f6:(0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0)]
# Returned status: 0
#
# CRC_NO::build(const int8 U_K1[6x12], int8 U_K2[6x12])
# {IN}  U_K1 = [f1:(0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0),
#               f2:(0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1),
#               f3:(0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0),
#               f4:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0),
#               f5:(0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0),
#               f6:(0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0)]
# {OUT} U_K2 = [f1:(0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0),
#               f2:(0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1),
#               f3:(0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0),
#               f4:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0),
#               f5:(0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0),
#               f6:(0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0)]
# Returned status: 0
#
# Encoder_NO::encode(const int8 U_K[6x12], int8 X_N[6x12])
# {IN}  U_K = [f1:(0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0),
#              f2:(0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1),
#              f3:(0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0),
#              f4:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0),
#              f5:(0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0),
#              f6:(0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0)]
# {OUT} X_N = [f1:(0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0),
#              f2:(0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1),
#              f3:(0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0),
#              f4:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0),
#              f5:(0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0),
#              f6:(0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0)]
# Returned status: 0
#
# Puncturer_NO::puncture(const int8 X_N1[6x12], int8 X_N2[6x12])
# {IN}  X_N1 = [f1:(0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0),
#               f2:(0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1),
#               f3:(0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0),
#               f4:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0),
#               f5:(0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0),
#               f6:(0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0)]
# {OUT} X_N2 = [f1:(0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0),
#               f2:(0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1),
#               f3:(0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0),
#               f4:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0),
#               f5:(0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0),
#               f6:(0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0)]
# Returned status: 0
#
# Modem_SCMA::modulate(const int8 X_N1[6x12], float32 X_N2[6x48])
# {IN}  X_N1 = [f1:(0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0),
#               f2:(0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1),
#               f3:(0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0),
#               f4:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0),
#               f5:(0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0),
#               f6:(0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0)]
# {OUT} X_N2 = [f1:(0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0),
#               f2:(0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0),
#               f3:(-0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3),
#               f5:(-0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2),
#               f6:(0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Channel_Rayleigh_LLR::add_noise_wg(const float32 X_N[6x48], float32 H_N[6x48], float32 Y_N[6x48])
# {IN}  X_N = [f1:(0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0),
#              f2:(0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0),
#              f3:(-0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3),
#              f5:(-0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2),
#              f6:(0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0)]
# {OUT} H_N = [f1:(0x1.c72b78p-3, -0x1.4fc7p-1, -0x1.46d45cp-3, 0x1.cccfa6p-1, 0x1.1a090ap-1, 0x1.78f3c4p-1, -0x1.414b8ep-2, 0x1.15d83ap-2, -0x1.4fbb76p-1, 0x1.5523c8p-2, 0x1.8ac11ap-2, -0x1.a5fb4cp+0, 0x1.08a08ap-2, -0x1.cac678p-2, -0x1.8f3032p-2, 0x1.8ce6a8p-2, -0x1.e0a5p-3, 0x1.d0fd5ep-1, -0x1.1110dap+0, -0x1.a5ec3ap+0, 0x1.05eb78p-2, -0x1.fd002p-5, -0x1.009796p-1, 0x1.d3d13ap-2, -0x1.bba492p-3, -0x1.462838p-1, 0x1.9594e6p-1, -0x1.029ee4p+1, -0x1.237632p-2, -0x1.ccdef6p-2, 0x1.b3dd5cp-1, 0x1.88ab1ep-1, 0x1.68677p-5, -0x1.1663dap-5, 0x1.1a9f1ap-3, 0x1.3d5beap-2, 0x1.b4f7bep-1, -0x1.464046p-2, 0x1.9eca1ap-1, -0x1.3b86acp+0, 0x1.2632bp-3, 0x1.313d22p+0, 0x1.64d32p-3, 0x1.393594p-3, 0x1.98b0b4p-1, -0x1.6727bap-6, -0x1.c24df8p-3, 0x1.0cad4p-2),
#              f2:(-0x1.4c164cp-2, -0x1.869586p-3, -0x1.5851aep-1, 0x1.a66ab4p-1, 0x1.43a182p-3, -0x1.32b5eep-4, 0x1.8c22f2p-1, 0x1.0f748p-3, 0x1.6d99e6p-1, 0x1.70de46p-1, 0x1.321e48p-2, -0x1.477f5ap-1, -0x1.59e25ep-5, -0x1.a2c732p-2, -0x1.6e7e7p-2, -0x1.247012p-2, 0x1.72560ep-5, -0x1.560fecp+0, 0x1.b3b0fep+0, 0x1.cd9c2ep-1, -0x1.e0d7d2p-3, -0x1.78e83p-1, 0x1.c2dcfep-1, 0x1.25fe9p-3, -0x1.d87168p-4, -0x1.36cd3ep-1, -0x1.485e1ep-2, -0x1.d746b4p-3, 0x1.43a3ecp-6, -0x1.0a401cp+0, 0x1.9ad16ap-1, 0x1.c11c12p-4, -0x1.046522p+0, -0x1.81f4c2p-2, -0x1.9f86d6p-1, 0x1.945d5cp-1, 0x1.3b6988p-1, 0x1.87ff9cp-3, 0x1.761652p-1, -0x1.914ef8p-2, -0x1.2e3424p-1, 0x1.caad74p-1, -0x1.69e122p-2, 0x1.acdbe4p-1, 0x1.48a22cp-1, -0x1.3ff124p+0, -0x1.7e94aap-3, -0x1.6a285ep+0),
#              f3:(-0x1.972acp-7, -0x1.210d88p+1, -0x1.7e339cp+0, 0x1.54b62ap+0, -0x1.177164p+0, 0x1.9dd4ecp-3, -0x1.873dbp-1, -0x1.068efcp-1, -0x1.70d5d6p-3, -0x1.1e9d54p-3, -0x1.fa171cp-3, -0x1.09c6fap-2, -0x1.7ae82p-2, 0x1.8d72cep-1, -0x1.923e12p-1, 0x1.2421e8p-1, 0x1.18dc44p-2, 0x1.d195a6p+0, -0x1.68d09cp-1, -0x1.d007ap-3, -0x1.7cd344p-2, -0x1.2c6f7ep-3, -0x1.ac0e06p-1, 0x1.576ef8p-1, 0x1.a6da18p-1, -0x1.c56402p-3, 0x1.12fe44p-3, -0x1.443b74p+0, 0x1.2215ep-3, 0x1.381a3cp+0, 0x1.249276p-1, 0x1.1b6494p-2, -0x1.c2591ep-2, -0x1.886a9ep-3, -0x1.7e23dp-1, -0x1.15c95cp+0, 0x1.4cbbd2p+0, 0x1.b58b9cp-1, 0x1.98406ap-2, 0x1.ecd4dap-2, 0x1.98dd3ap-4, 0x1.faa78cp-2, 0x1.cf7e48p-3, 0x1.e8deb2p-2, -0x1.a45c06p-4, 0x1.91e652p-7, 0x1.ff27bcp-2, 0x1.b8f95ap-7),
#              f4:(0x1.8d4bcep-3, -0x1.5885ep-1, 0x1.6babc4p-1, -0x1.a47e1ap-1, 0x1.680586p-1, 0x1.44f808p-2, -0x1.b97adep-1, -0x1.02bd2ap-6, 0x1.849912p-3, -0x1.c03af8p-3, -0x1.05ba1p-1, 0x1.5347a4p-3, 0x1.af3dcep-2, -0x1.b40f04p-2, 0x1.84317cp-2, 0x1.d60d88p-1, 0x1.a9b9acp-3, 0x1.7e5372p-4, -0x1.7d2e16p+0, 0x1.b4d41p-4, 0x1.2a2af4p-6, -0x1.30f4a6p+0, 0x1.1940f4p-1, -0x1.04f7cp-2, 0x1.c9567ap-4, -0x1.aa2b32p-1, 0x1.adc21ap-2, 0x1.5e1096p-3, 0x1.794eb8p-2, -0x1.c26456p-1, -0x1.1ef29p-1, 0x1.da37dcp-2, -0x1.8b60a2p-3, 0x1.db50f4p-2, 0x1.33260ap+0, -0x1.10d65ep-1, -0x1.1b437ep-2, -0x1.115548p-1, 0x1.cde9d2p-1, 0x1.34b652p+0, -0x1.451a82p-1, 0x1.40f4c6p-1, -0x1.78988cp-1, -0x1.486634p+0, 0x1.2fc44ep-1, -0x1.a38bf4p-1, -0x1.bbe376p+0, -0x1.956f36p-3),
#              f5:(-0x1.0fedb2p-2, 0x1.567238p-5, 0x1.31ae3ap-1, -0x1.c60912p-4, 0x1.ea4128p-2, -0x1.a3a86ep+0, 0x1.569a06p-2, -0x1.30ba5cp-3, -0x1.b2effp-6, 0x1.5bf8dcp-1, -0x1.9f0a2cp-1, 0x1.237f98p+0, 0x1.2d29a8p-1, -0x1.80c7c4p+0, -0x1.94e7d2p-9, 0x1.8456eap-2, 0x1.a69108p-2, -0x1.d1af9ap-1, 0x1.5b57c8p-3, 0x1.31b746p-3, 0x1.4cb04p+0, 0x1.7cb32ap-1, -0x1.c21906p-1, -0x1.6e1a44p-2, -0x1.6c6c1cp-1, 0x1.26d044p-3, 0x1.965a14p-3, -0x1.e290a8p-2, 0x1.52b9e2p-1, -0x1.bd3cacp-1, -0x1.2f9abp-3, 0x1.e23aecp-1, -0x1.0b6532p-1, -0x1.e08424p-1, -0x1.7ebdp-1, 0x1.16e27p-1, 0x1.380218p-2, -0x1.f2deb2p-3, -0x1.860beap+0, 0x1.74fe96p+0, -0x1.8b64a2p+0, 0x1.23c15cp-2, -0x1.33a25cp+0, 0x1.398e2p-3, 0x1.ce2dd2p-1, 0x1.03ccd6p-1, 0x1.e82612p-2, -0x1.405d1ap-1),
#              f6:(-0x1.b4895ep-3, 0x1.45654ep-2, -0x1.04a688p-1, 0x1.231cp-5, -0x1.13510ap-2, 0x1.389f9p-1, -0x1.7c3a8cp-2, 0x1.78b176p-2, -0x1.01800ap+0, 0x1.7e8f64p-1, 0x1.c1e10ep-3, -0x1.3e36acp-2, -0x1.697282p-3, 0x1.512954p+0, 0x1.bc5c64p-2, 0x1.d21a5p-2, 0x1.e0e7a4p+0, 0x1.33c2e2p-1, 0x1.72edf6p-2, 0x1.921e0ap-1, -0x1.908582p+0, 0x1.df5a9cp-5, -0x1.1fe84cp-4, -0x1.d30b86p-2, 0x1.dd1452p-1, -0x1.04d8ap+0, 0x1.9155dcp-5, 0x1.d28fc4p-1, -0x1.e762c4p-1, 0x1.9d86a2p+0, 0x1.6e59c8p-3, 0x1.3c764ap-1, -0x1.666b6p-1, -0x1.8ef91ep-2, 0x1.0500ap+0, -0x1.26680ep-1, 0x1.0d7754p-3, 0x1.d0fd8ap-4, -0x1.d0b282p-2, -0x1.295f1cp-1, 0x1.eb42c6p-11, -0x1.1ff756p-3, -0x1.06d184p+1, 0x1.5c301cp-1, -0x1.b9f92p-3, -0x1.f244cep-3, 0x1.d552c2p-2, -0x1.2baa2cp+0)]
# {OUT} Y_N = [f1:(-0x1.9279c6p-3, -0x1.1cb5ep-6, 0x1.16a71ap-1, -0x1.07f49ep+1, -0x1.91ba6p-2, -0x1.51e242p-2, -0x1.0ef79p-1, 0x1.0bd004p-1, -0x1.1636c8p+0, -0x1.66608cp-2, -0x1.195068p+0, 0x1.d0b014p-2, -0x1.8ce4bp-5, -0x1.9a372ap-2, -0x1.1dfd7p+0, 0x1.3017a8p-1, 0x1.662468p-3, 0x1.afbf88p-1, -0x1.b72d66p-1, -0x1.6f7fbep+0, -0x1.325c4ep-1, 0x1.94c7dcp-4, 0x1.61939ap-1, -0x1.f06d3ap-4, -0x1.6c1174p-2, -0x1.c58d2ep-2, -0x1.9086c2p+0, 0x1.077f4cp-2, 0x1.efddb8p-1, 0x1.12fa7ap+0, 0x1.abbe9cp-2, 0x1.9386f6p-1, -0x1.7b3888p+0, 0x1.a5b4b6p-3, -0x1.07fab8p-3, 0x1.1b2026p-2, 0x1.6007fp-5, -0x1.2bdf16p-2, 0x1.08bc98p-1, 0x1.786cp-5, -0x1.232bc6p-2, 0x1.bf7158p-3, 0x1.0e0f74p-1, 0x1.c185dp-3, 0x1.ce45eep-1, -0x1.0709bp+0, -0x1.bb7cb8p-3, 0x1.544a74p+0),
#              f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Modem_SCMA::filter(const float32 Y_N1[6x48], float32 Y_N2[6x48])
# {IN}  Y_N1 = [f1:(-0x1.9279c6p-3, -0x1.1cb5ep-6, 0x1.16a71ap-1, -0x1.07f49ep+1, -0x1.91ba6p-2, -0x1.51e242p-2, -0x1.0ef79p-1, 0x1.0bd004p-1, -0x1.1636c8p+0, -0x1.66608cp-2, -0x1.195068p+0, 0x1.d0b014p-2, -0x1.8ce4bp-5, -0x1.9a372ap-2, -0x1.1dfd7p+0, 0x1.3017a8p-1, 0x1.662468p-3, 0x1.afbf88p-1, -0x1.b72d66p-1, -0x1.6f7fbep+0, -0x1.325c4ep-1, 0x1.94c7dcp-4, 0x1.61939ap-1, -0x1.f06d3ap-4, -0x1.6c1174p-2, -0x1.c58d2ep-2, -0x1.9086c2p+0, 0x1.077f4cp-2, 0x1.efddb8p-1, 0x1.12fa7ap+0, 0x1.abbe9cp-2, 0x1.9386f6p-1, -0x1.7b3888p+0, 0x1.a5b4b6p-3, -0x1.07fab8p-3, 0x1.1b2026p-2, 0x1.6007fp-5, -0x1.2bdf16p-2, 0x1.08bc98p-1, 0x1.786cp-5, -0x1.232bc6p-2, 0x1.bf7158p-3, 0x1.0e0f74p-1, 0x1.c185dp-3, 0x1.ce45eep-1, -0x1.0709bp+0, -0x1.bb7cb8p-3, 0x1.544a74p+0),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# {OUT} Y_N2 = [f1:(-0x1.9279c6p-3, -0x1.1cb5ep-6, 0x1.16a71ap-1, -0x1.07f49ep+1, -0x1.91ba6p-2, -0x1.51e242p-2, -0x1.0ef79p-1, 0x1.0bd004p-1, -0x1.1636c8p+0, -0x1.66608cp-2, -0x1.195068p+0, 0x1.d0b014p-2, -0x1.8ce4bp-5, -0x1.9a372ap-2, -0x1.1dfd7p+0, 0x1.3017a8p-1, 0x1.662468p-3, 0x1.afbf88p-1, -0x1.b72d66p-1, -0x1.6f7fbep+0, -0x1.325c4ep-1, 0x1.94c7dcp-4, 0x1.61939ap-1, -0x1.f06d3ap-4, -0x1.6c1174p-2, -0x1.c58d2ep-2, -0x1.9086c2p+0, 0x1.077f4cp-2, 0x1.efddb8p-1, 0x1.12fa7ap+0, 0x1.abbe9cp-2, 0x1.9386f6p-1, -0x1.7b3888p+0, 0x1.a5b4b6p-3, -0x1.07fab8p-3, 0x1.1b2026p-2, 0x1.6007fp-5, -0x1.2bdf16p-2, 0x1.08bc98p-1, 0x1.786cp-5, -0x1.232bc6p-2, 0x1.bf7158p-3, 0x1.0e0f74p-1, 0x1.c185dp-3, 0x1.ce45eep-1, -0x1.0709bp+0, -0x1.bb7cb8p-3, 0x1.544a74p+0),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Modem_SCMA::demodulate_wg(const float32 H_N[6x48], const float32 Y_N1[6x48], float32 Y_N2[6x12])
# {IN}  H_N  = [f1:(0x1.c72b78p-3, -0x1.4fc7p-1, -0x1.46d45cp-3, 0x1.cccfa6p-1, 0x1.1a090ap-1, 0x1.78f3c4p-1, -0x1.414b8ep-2, 0x1.15d83ap-2, -0x1.4fbb76p-1, 0x1.5523c8p-2, 0x1.8ac11ap-2, -0x1.a5fb4cp+0, 0x1.08a08ap-2, -0x1.cac678p-2, -0x1.8f3032p-2, 0x1.8ce6a8p-2, -0x1.e0a5p-3, 0x1.d0fd5ep-1, -0x1.1110dap+0, -0x1.a5ec3ap+0, 0x1.05eb78p-2, -0x1.fd002p-5, -0x1.009796p-1, 0x1.d3d13ap-2, -0x1.bba492p-3, -0x1.462838p-1, 0x1.9594e6p-1, -0x1.029ee4p+1, -0x1.237632p-2, -0x1.ccdef6p-2, 0x1.b3dd5cp-1, 0x1.88ab1ep-1, 0x1.68677p-5, -0x1.1663dap-5, 0x1.1a9f1ap-3, 0x1.3d5beap-2, 0x1.b4f7bep-1, -0x1.464046p-2, 0x1.9eca1ap-1, -0x1.3b86acp+0, 0x1.2632bp-3, 0x1.313d22p+0, 0x1.64d32p-3, 0x1.393594p-3, 0x1.98b0b4p-1, -0x1.6727bap-6, -0x1.c24df8p-3, 0x1.0cad4p-2),
#               f2:(-0x1.4c164cp-2, -0x1.869586p-3, -0x1.5851aep-1, 0x1.a66ab4p-1, 0x1.43a182p-3, -0x1.32b5eep-4, 0x1.8c22f2p-1, 0x1.0f748p-3, 0x1.6d99e6p-1, 0x1.70de46p-1, 0x1.321e48p-2, -0x1.477f5ap-1, -0x1.59e25ep-5, -0x1.a2c732p-2, -0x1.6e7e7p-2, -0x1.247012p-2, 0x1.72560ep-5, -0x1.560fecp+0, 0x1.b3b0fep+0, 0x1.cd9c2ep-1, -0x1.e0d7d2p-3, -0x1.78e83p-1, 0x1.c2dcfep-1, 0x1.25fe9p-3, -0x1.d87168p-4, -0x1.36cd3ep-1, -0x1.485e1ep-2, -0x1.d746b4p-3, 0x1.43a3ecp-6, -0x1.0a401cp+0, 0x1.9ad16ap-1, 0x1.c11c12p-4, -0x1.046522p+0, -0x1.81f4c2p-2, -0x1.9f86d6p-1, 0x1.945d5cp-1, 0x1.3b6988p-1, 0x1.87ff9cp-3, 0x1.761652p-1, -0x1.914ef8p-2, -0x1.2e3424p-1, 0x1.caad74p-1, -0x1.69e122p-2, 0x1.acdbe4p-1, 0x1.48a22cp-1, -0x1.3ff124p+0, -0x1.7e94aap-3, -0x1.6a285ep+0),
#               f3:(-0x1.972acp-7, -0x1.210d88p+1, -0x1.7e339cp+0, 0x1.54b62ap+0, -0x1.177164p+0, 0x1.9dd4ecp-3, -0x1.873dbp-1, -0x1.068efcp-1, -0x1.70d5d6p-3, -0x1.1e9d54p-3, -0x1.fa171cp-3, -0x1.09c6fap-2, -0x1.7ae82p-2, 0x1.8d72cep-1, -0x1.923e12p-1, 0x1.2421e8p-1, 0x1.18dc44p-2, 0x1.d195a6p+0, -0x1.68d09cp-1, -0x1.d007ap-3, -0x1.7cd344p-2, -0x1.2c6f7ep-3, -0x1.ac0e06p-1, 0x1.576ef8p-1, 0x1.a6da18p-1, -0x1.c56402p-3, 0x1.12fe44p-3, -0x1.443b74p+0, 0x1.2215ep-3, 0x1.381a3cp+0, 0x1.249276p-1, 0x1.1b6494p-2, -0x1.c2591ep-2, -0x1.886a9ep-3, -0x1.7e23dp-1, -0x1.15c95cp+0, 0x1.4cbbd2p+0, 0x1.b58b9cp-1, 0x1.98406ap-2, 0x1.ecd4dap-2, 0x1.98dd3ap-4, 0x1.faa78cp-2, 0x1.cf7e48p-3, 0x1.e8deb2p-2, -0x1.a45c06p-4, 0x1.91e652p-7, 0x1.ff27bcp-2, 0x1.b8f95ap-7),
#               f4:(0x1.8d4bcep-3, -0x1.5885ep-1, 0x1.6babc4p-1, -0x1.a47e1ap-1, 0x1.680586p-1, 0x1.44f808p-2, -0x1.b97adep-1, -0x1.02bd2ap-6, 0x1.849912p-3, -0x1.c03af8p-3, -0x1.05ba1p-1, 0x1.5347a4p-3, 0x1.af3dcep-2, -0x1.b40f04p-2, 0x1.84317cp-2, 0x1.d60d88p-1, 0x1.a9b9acp-3, 0x1.7e5372p-4, -0x1.7d2e16p+0, 0x1.b4d41p-4, 0x1.2a2af4p-6, -0x1.30f4a6p+0, 0x1.1940f4p-1, -0x1.04f7cp-2, 0x1.c9567ap-4, -0x1.aa2b32p-1, 0x1.adc21ap-2, 0x1.5e1096p-3, 0x1.794eb8p-2, -0x1.c26456p-1, -0x1.1ef29p-1, 0x1.da37dcp-2, -0x1.8b60a2p-3, 0x1.db50f4p-2, 0x1.33260ap+0, -0x1.10d65ep-1, -0x1.1b437ep-2, -0x1.115548p-1, 0x1.cde9d2p-1, 0x1.34b652p+0, -0x1.451a82p-1, 0x1.40f4c6p-1, -0x1.78988cp-1, -0x1.486634p+0, 0x1.2fc44ep-1, -0x1.a38bf4p-1, -0x1.bbe376p+0, -0x1.956f36p-3),
#               f5:(-0x1.0fedb2p-2, 0x1.567238p-5, 0x1.31ae3ap-1, -0x1.c60912p-4, 0x1.ea4128p-2, -0x1.a3a86ep+0, 0x1.569a06p-2, -0x1.30ba5cp-3, -0x1.b2effp-6, 0x1.5bf8dcp-1, -0x1.9f0a2cp-1, 0x1.237f98p+0, 0x1.2d29a8p-1, -0x1.80c7c4p+0, -0x1.94e7d2p-9, 0x1.8456eap-2, 0x1.a69108p-2, -0x1.d1af9ap-1, 0x1.5b57c8p-3, 0x1.31b746p-3, 0x1.4cb04p+0, 0x1.7cb32ap-1, -0x1.c21906p-1, -0x1.6e1a44p-2, -0x1.6c6c1cp-1, 0x1.26d044p-3, 0x1.965a14p-3, -0x1.e290a8p-2, 0x1.52b9e2p-1, -0x1.bd3cacp-1, -0x1.2f9abp-3, 0x1.e23aecp-1, -0x1.0b6532p-1, -0x1.e08424p-1, -0x1.7ebdp-1, 0x1.16e27p-1, 0x1.380218p-2, -0x1.f2deb2p-3, -0x1.860beap+0, 0x1.74fe96p+0, -0x1.8b64a2p+0, 0x1.23c15cp-2, -0x1.33a25cp+0, 0x1.398e2p-3, 0x1.ce2dd2p-1, 0x1.03ccd6p-1, 0x1.e82612p-2, -0x1.405d1ap-1),
#               f6:(-0x1.b4895ep-3, 0x1.45654ep-2, -0x1.04a688p-1, 0x1.231cp-5, -0x1.13510ap-2, 0x1.389f9p-1, -0x1.7c3a8cp-2, 0x1.78b176p-2, -0x1.01800ap+0, 0x1.7e8f64p-1, 0x1.c1e10ep-3, -0x1.3e36acp-2, -0x1.697282p-3, 0x1.512954p+0, 0x1.bc5c64p-2, 0x1.d21a5p-2, 0x1.e0e7a4p+0, 0x1.33c2e2p-1, 0x1.72edf6p-2, 0x1.921e0ap-1, -0x1.908582p+0, 0x1.df5a9cp-5, -0x1.1fe84cp-4, -0x1.d30b86p-2, 0x1.dd1452p-1, -0x1.04d8ap+0, 0x1.9155dcp-5, 0x1.d28fc4p-1, -0x1.e762c4p-1, 0x1.9d86a2p+0, 0x1.6e59c8p-3, 0x1.3c764ap-1, -0x1.666b6p-1, -0x1.8ef91ep-2, 0x1.0500ap+0, -0x1.26680ep-1, 0x1.0d7754p-3, 0x1.d0fd8ap-4, -0x1.d0b282p-2, -0x1.295f1cp-1, 0x1.eb42c6p-11, -0x1.1ff756p-3, -0x1.06d184p+1, 0x1.5c301cp-1, -0x1.b9f92p-3, -0x1.f244cep-3, 0x1.d552c2p-2, -0x1.2baa2cp+0)]
# {IN}  Y_N1 = [f1:(-0x1.9279c6p-3, -0x1.1cb5ep-6, 0x1.16a71ap-1, -0x1.07f49ep+1, -0x1.91ba6p-2, -0x1.51e242p-2, -0x1.0ef79p-1, 0x1.0bd004p-1, -0x1.1636c8p+0, -0x1.66608cp-2, -0x1.195068p+0, 0x1.d0b014p-2, -0x1.8ce4bp-5, -0x1.9a372ap-2, -0x1.1dfd7p+0, 0x1.3017a8p-1, 0x1.662468p-3, 0x1.afbf88p-1, -0x1.b72d66p-1, -0x1.6f7fbep+0, -0x1.325c4ep-1, 0x1.94c7dcp-4, 0x1.61939ap-1, -0x1.f06d3ap-4, -0x1.6c1174p-2, -0x1.c58d2ep-2, -0x1.9086c2p+0, 0x1.077f4cp-2, 0x1.efddb8p-1, 0x1.12fa7ap+0, 0x1.abbe9cp-2, 0x1.9386f6p-1, -0x1.7b3888p+0, 0x1.a5b4b6p-3, -0x1.07fab8p-3, 0x1.1b2026p-2, 0x1.6007fp-5, -0x1.2bdf16p-2, 0x1.08bc98p-1, 0x1.786cp-5, -0x1.232bc6p-2, 0x1.bf7158p-3, 0x1.0e0f74p-1, 0x1.c185dp-3, 0x1.ce45eep-1, -0x1.0709bp+0, -0x1.bb7cb8p-3, 0x1.544a74p+0),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# {OUT} Y_N2 = [f1:(0x1.41fb6p-2, 0x1.30365cp+2, 0x1.afaad4p+0, 0x1.1c1bc6p+3, 0x1.183b44p+2, -0x1.68d6aep+3, -0x1.910be8p+1, 0x1.df54dep+3, 0x1.2eedbp-1, -0x1.5771ep-2, 0x1.7ef964p+0, -0x1.c54b8p-3),
#               f2:(0x1.dab666p+0, 0x1.06bf62p+0, -0x1.db7dd4p+1, -0x1.be1518p+0, -0x1.e8dd1cp+1, -0x1.f5471p-1, 0x1.b952f4p+1, 0x1.103a4p-3, 0x1.96401ap+1, 0x1.c94a6p-1, 0x1.14d47p+2, -0x1.5f3cc8p+2),
#               f3:(0x1.ceb5cp+3, -0x1.ee0c2ap+4, -0x1.36f14p+0, 0x1.611384p+0, -0x1.5a391ep+2, 0x1.6a646ap+2, 0x1.c7a39p-1, 0x1.00ec3cp+2, -0x1.113ae8p-1, -0x1.d8f33p-1, 0x1.52dcdp+0, 0x1.a21534p+0),
#               f4:(-0x1.7ab214p+1, 0x1.82a078p-1, 0x1.f8a774p+1, -0x1.70aab8p+2, 0x1.725112p+1, 0x1.6ed81cp+0, 0x1.22b5p-6, 0x1.536a54p+1, 0x1.7a498p-2, 0x1.416e8p+1, 0x1.5e421cp+1, 0x1.7ea016p+3),
#               f5:(0x1.28bc98p+0, -0x1.0d57a8p-1, 0x1.6d04f4p+0, -0x1.4525d8p+1, 0x1.5250b2p+2, 0x1.19954ap+2, -0x1.3119b8p+1, -0x1.fad82ep+1, -0x1.bc4a9cp+2, 0x1.1801dcp+2, 0x1.a2674p+1, 0x1.b1f44ep+1),
#               f6:(-0x1.d29aa8p-1, -0x1.0fef1ap+1, -0x1.086744p+1, -0x1.439bd2p+1, -0x1.4c1d9cp+2, 0x1.15c67p+1, -0x1.3f4248p+2, 0x1.afc744p+3, -0x1.3ce4d8p+0, 0x1.381fp-6, -0x1.ee5774p+1, 0x1.e52316p+1)]
# Returned status: 0
#
# Quantizer_standard::process(const float32 Y_N1[6x12], int8 Y_N2[6x12])
# {IN}  Y_N1 = [f1:(0x1.41fb6p-2, 0x1.30365cp+2, 0x1.afaad4p+0, 0x1.1c1bc6p+3, 0x1.183b44p+2, -0x1.68d6aep+3, -0x1.910be8p+1, 0x1.df54dep+3, 0x1.2eedbp-1, -0x1.5771ep-2, 0x1.7ef964p+0, -0x1.c54b8p-3),
#               f2:(0x1.dab666p+0, 0x1.06bf62p+0, -0x1.db7dd4p+1, -0x1.be1518p+0, -0x1.e8dd1cp+1, -0x1.f5471p-1, 0x1.b952f4p+1, 0x1.103a4p-3, 0x1.96401ap+1, 0x1.c94a6p-1, 0x1.14d47p+2, -0x1.5f3cc8p+2),
#               f3:(0x1.ceb5cp+3, -0x1.ee0c2ap+4, -0x1.36f14p+0, 0x1.611384p+0, -0x1.5a391ep+2, 0x1.6a646ap+2, 0x1.c7a39p-1, 0x1.00ec3cp+2, -0x1.113ae8p-1, -0x1.d8f33p-1, 0x1.52dcdp+0, 0x1.a21534p+0),
#               f4:(-0x1.7ab214p+1, 0x1.82a078p-1, 0x1.f8a774p+1, -0x1.70aab8p+2, 0x1.725112p+1, 0x1.6ed81cp+0, 0x1.22b5p-6, 0x1.536a54p+1, 0x1.7a498p-2, 0x1.416e8p+1, 0x1.5e421cp+1, 0x1.7ea016p+3),
#               f5:(0x1.28bc98p+0, -0x1.0d57a8p-1, 0x1.6d04f4p+0, -0x1.4525d8p+1, 0x1.5250b2p+2, 0x1.19954ap+2, -0x1.3119b8p+1, -0x1.fad82ep+1, -0x1.bc4a9cp+2, 0x1.1801dcp+2, 0x1.a2674p+1, 0x1.b1f44ep+1),
#               f6:(-0x1.d29aa8p-1, -0x1.0fef1ap+1, -0x1.086744p+1, -0x1.439bd2p+1, -0x1.4c1d9cp+2, 0x1.15c67p+1, -0x1.3f4248p+2, 0x1.afc744p+3, -0x1.3ce4d8p+0, 0x1.381fp-6, -0x1.ee5774p+1, 0x1.e52316p+1)]
# {OUT} Y_N2 = [f1:(0x3, 0x26, 0xd, 0x47, 0x23, 0xffffffa6, 0xffffffe7, 0x78, 0x5, 0xfffffffd, 0xc, 0xfffffffe),
#               f2:(0xf, 0x8, 0xffffffe2, 0xfffffff2, 0xffffffe1, 0xfffffff8, 0x1c, 0x1, 0x19, 0x7, 0x23, 0xffffffd4),
#               f3:(0x74, 0xffffff81, 0xfffffff6, 0xb, 0xffffffd5, 0x2d, 0x7, 0x20, 0xfffffffc, 0xfffffff9, 0xb, 0xd),
#               f4:(0xffffffe8, 0x6, 0x20, 0xffffffd2, 0x17, 0xb, 0x0, 0x15, 0x3, 0x14, 0x16, 0x60),
#               f5:(0x9, 0xfffffffc, 0xb, 0xffffffec, 0x2a, 0x23, 0xffffffed, 0xffffffe0, 0xffffffc8, 0x23, 0x1a, 0x1b),
#               f6:(0xfffffff9, 0xffffffef, 0xffffffef, 0xffffffec, 0xffffffd6, 0x11, 0xffffffd8, 0x6c, 0xfffffff6, 0x0, 0xffffffe1, 0x1e)]
# Returned status: 0
#
# Puncturer_NO::depuncture(const int8 Y_N1[6x12], int8 Y_N2[6x12])
# {IN}  Y_N1 = [f1:(0x3, 0x26, 0xd, 0x47, 0x23, 0xffffffa6, 0xffffffe7, 0x78, 0x5, 0xfffffffd, 0xc, 0xfffffffe),
#               f2:(0xf, 0x8, 0xffffffe2, 0xfffffff2, 0xffffffe1, 0xfffffff8, 0x1c, 0x1, 0x19, 0x7, 0x23, 0xffffffd4),
#               f3:(0x74, 0xffffff81, 0xfffffff6, 0xb, 0xffffffd5, 0x2d, 0x7, 0x20, 0xfffffffc, 0xfffffff9, 0xb, 0xd),
#               f4:(0xffffffe8, 0x6, 0x20, 0xffffffd2, 0x17, 0xb, 0x0, 0x15, 0x3, 0x14, 0x16, 0x60),
#               f5:(0x9, 0xfffffffc, 0xb, 0xffffffec, 0x2a, 0x23, 0xffffffed, 0xffffffe0, 0xffffffc8, 0x23, 0x1a, 0x1b),
#               f6:(0xfffffff9, 0xffffffef, 0xffffffef, 0xffffffec, 0xffffffd6, 0x11, 0xffffffd8, 0x6c, 0xfffffff6, 0x0, 0xffffffe1, 0x1e)]
# {OUT} Y_N2 = [f1:(0x3, 0x26, 0xd, 0x47, 0x23, 0xffffffa6, 0xffffffe7, 0x78, 0x5, 0xfffffffd, 0xc, 0xfffffffe),
#               f2:(0xf, 0x8, 0xffffffe2, 0xfffffff2, 0xffffffe1, 0xfffffff8, 0x1c, 0x1, 0x19, 0x7, 0x23, 0xffffffd4),
#               f3:(0x74, 0xffffff81, 0xfffffff6, 0xb, 0xffffffd5, 0x2d, 0x7, 0x20, 0xfffffffc, 0xfffffff9, 0xb, 0xd),
#               f4:(0xffffffe8, 0x6, 0x20, 0xffffffd2, 0x17, 0xb, 0x0, 0x15, 0x3, 0x14, 0x16, 0x60),
#               f5:(0x9, 0xfffffffc, 0xb, 0xffffffec, 0x2a, 0x23, 0xffffffed, 0xffffffe0, 0xffffffc8, 0x23, 0x1a, 0x1b),
#               f6:(0xfffffff9, 0xffffffef, 0xffffffef, 0xffffffec, 0xffffffd6, 0x11, 0xffffffd8, 0x6c, 0xfffffff6, 0x0, 0xffffffe1, 0x1e)]
# Returned status: 0
#
# Decoder_NO::decode_siho(const int8 Y_N[6x12], int8 V_K[6x12])
# {IN}  Y_N = [f1:(0x3, 0x26, 0xd, 0x47, 0x23, 0xffffffa6, 0xffffffe7, 0x78, 0x5, 0xfffffffd, 0xc, 0xfffffffe),
#              f2:(0xf, 0x8, 0xffffffe2, 0xfffffff2, 0xffffffe1, 0xfffffff8, 0x1c, 0x1, 0x19, 0x7, 0x23, 0xffffffd4),
#              f3:(0x74, 0xffffff81, 0xfffffff6, 0xb, 0xffffffd5, 0x2d, 0x7, 0x20, 0xfffffffc, 0xfffffff9, 0xb, 0xd),
#              f4:(0xffffffe8, 0x6, 0x20, 0xffffffd2, 0x17, 0xb, 0x0, 0x15, 0x3, 0x14, 0x16, 0x60),
#              f5:(0x9, 0xfffffffc, 0xb, 0xffffffec, 0x2a, 0x23, 0xffffffed, 0xffffffe0, 0xffffffc8, 0x23, 0x1a, 0x1b),
#              f6:(0xfffffff9, 0xffffffef, 0xffffffef, 0xffffffec, 0xffffffd6, 0x11, 0xffffffd8, 0x6c, 0xfffffff6, 0x0, 0xffffffe1, 0x1e)]
# {OUT} V_K = [f1:(0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#              f2:(0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1),
#              f3:(0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0),
#              f4:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0),
#              f5:(0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0),
#              f6:(0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0)]
# Returned status: 0
#
# CRC_NO::extract(const int8 V_K1[6x12], int8 V_K2[6x12])
# {IN}  V_K1 = [f1:(0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#               f2:(0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1),
#               f3:(0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0),
#               f4:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0),
#               f5:(0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0),
#               f6:(0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0)]
# {OUT} V_K2 = [f1:(0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#               f2:(0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1),
#               f3:(0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0),
#               f4:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0),
#               f5:(0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0),
#               f6:(0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0)]
# Returned status: 0
#
# Monitor_BFER::check_errors(const int8 U[6x12], const int8 V[6x12])
# {IN}  U = [f1:(0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0),
#            f2:(0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1),
#            f3:(0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0),
#            f4:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0),
#            f5:(0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0),
#            f6:(0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0)]
# {IN}  V = [f1:(0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#            f2:(0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1),
#            f3:(0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0),
#            f4:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0),
#            f5:(0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0),
#            f6:(0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0)]
# Returned status: 5
#
# -------------------------------
# New communication (nÂ°9)
# -------------------------------
#
# Source_random::generate(int8 U_K[6x12])
# {OUT} U_K = [f1:(0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1),
#              f2:(0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0),
#              f3:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0),
#              f4:(0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#              f5:(0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0),
#              f6:(0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0)]
# Returned status: 0
#
# CRC_NO::build(const int8 U_K1[6x12], int8 U_K2[6x12])
# {IN}  U_K1 = [f1:(0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1),
#               f2:(0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0),
#               f3:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0),
#               f4:(0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#               f5:(0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0),
#               f6:(0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0)]
# {OUT} U_K2 = [f1:(0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1),
#               f2:(0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0),
#               f3:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0),
#               f4:(0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#               f5:(0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0),
#               f6:(0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0)]
# Returned status: 0
#
# Encoder_NO::encode(const int8 U_K[6x12], int8 X_N[6x12])
# {IN}  U_K = [f1:(0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1),
#              f2:(0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0),
#              f3:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0),
#              f4:(0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#              f5:(0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0),
#              f6:(0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0)]
# {OUT} X_N = [f1:(0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1),
#              f2:(0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0),
#              f3:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0),
#              f4:(0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#              f5:(0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0),
#              f6:(0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0)]
# Returned status: 0
#
# Puncturer_NO::puncture(const int8 X_N1[6x12], int8 X_N2[6x12])
# {IN}  X_N1 = [f1:(0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1),
#               f2:(0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0),
#               f3:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0),
#               f4:(0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#               f5:(0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0),
#               f6:(0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0)]
# {OUT} X_N2 = [f1:(0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1),
#               f2:(0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0),
#               f3:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0),
#               f4:(0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#               f5:(0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0),
#               f6:(0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0)]
# Returned status: 0
#
# Modem_SCMA::modulate(const int8 X_N1[6x12], float32 X_N2[6x48])
# {IN}  X_N1 = [f1:(0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1),
#               f2:(0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0),
#               f3:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0),
#               f4:(0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#               f5:(0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0),
#               f6:(0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0)]
# {OUT} X_N2 = [f1:(0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0),
#               f2:(0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0),
#               f3:(0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3),
#               f5:(0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2),
#               f6:(0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Channel_Rayleigh_LLR::add_noise_wg(const float32 X_N[6x48], float32 H_N[6x48], float32 Y_N[6x48])
# {IN}  X_N = [f1:(0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0),
#              f2:(0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0),
#              f3:(0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3),
#              f5:(0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2),
#              f6:(0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0)]
# {OUT} H_N = [f1:(0x1.0180cp-1, 0x1.7662aep-3, -0x1.1a779cp-1, 0x1.6a9774p+0, -0x1.d8987ap-5, -0x1.004826p-4, 0x1.2ef89cp-3, -0x1.2e9394p-1, -0x1.29280cp-4, -0x1.03151ep-4, -0x1.df1c98p-3, -0x1.06cb2ep-5, 0x1.4bd9fep-1, -0x1.1639p-4, 0x1.9a2712p-2, -0x1.ccb56p-1, 0x1.307258p-1, -0x1.98fcd8p-3, 0x1.f06426p-1, 0x1.50266cp+0, -0x1.3d8f1p-2, -0x1.076e12p+0, -0x1.080e54p-1, 0x1.74b502p+0, 0x1.77ddep-2, 0x1.6558f2p-2, 0x1.cad7f8p-1, -0x1.6c37ep-3, 0x1.746c06p-1, -0x1.9d85cep-2, -0x1.078d56p-2, 0x1.371aa8p-5, 0x1.d3fc0ap-2, -0x1.6fb1aap-1, -0x1.c5af86p-1, 0x1.0a27d2p-3, 0x1.4c4d1ap-1, -0x1.02185ep-1, -0x1.19e01p-2, -0x1.a481cep-3, -0x1.8806bap-5, -0x1.b7f7b6p-3, 0x1.abc37ep-3, 0x1.41d6bep-1, 0x1.093962p+0, -0x1.6b79e8p-3, -0x1.37a87cp-2, -0x1.3ab1cep-1),
#              f2:(-0x1.98af54p-1, -0x1.7c4854p-1, -0x1.1a1e2ap-5, -0x1.c8a2fep-2, -0x1.5d6974p-1, 0x1.e2603ep-2, 0x1.2f8834p-1, -0x1.62aa64p-4, 0x1.345cccp-2, -0x1.6bac74p-2, 0x1.af9df4p-2, 0x1.3e0bcp+1, 0x1.788ceap-2, 0x1.9db16ap-2, -0x1.f2b1c6p-3, 0x1.3aff7ap-6, -0x1.277126p-3, -0x1.ec1a54p-2, -0x1.871038p-2, 0x1.1b41b4p+0, -0x1.f8d0d8p-5, -0x1.e59862p-2, 0x1.cc950cp-1, 0x1.1094fap+0, 0x1.f53efap-1, 0x1.f504b4p-3, 0x1.667174p+0, -0x1.4204ccp+0, -0x1.f9c9eep+0, -0x1.d8e588p-3, 0x1.0003a6p-1, -0x1.478058p-2, -0x1.bf454ap-2, 0x1.240268p-1, 0x1.9d733cp-3, 0x1.ef2cdap-5, 0x1.75c7c6p-2, -0x1.c4ecd4p+0, 0x1.10d166p-3, 0x1.d784e4p-2, -0x1.4b1f9ep-1, -0x1.d2ea64p-5, -0x1.223e98p-4, 0x1.ef06c2p-3, 0x1.0f1f7ap-1, -0x1.fa12fcp-2, -0x1.28f04ep-6, -0x1.20b618p-6),
#              f3:(-0x1.a43926p+0, 0x1.6ee04ap+0, 0x1.502378p-2, -0x1.86020cp-1, -0x1.6cf1a8p+0, 0x1.336364p-3, -0x1.1712bp+0, 0x1.032cf2p-2, 0x1.85127ap-3, 0x1.65d1a8p-1, -0x1.cc3b5ep-3, 0x1.f2a928p-3, 0x1.f1de62p-2, 0x1.b6adf2p-4, 0x1.112402p+0, -0x1.2e53a2p-1, 0x1.385892p-1, -0x1.29ccc2p-1, 0x1.9a833p-5, 0x1.f00d5cp-7, -0x1.1e10d4p-1, 0x1.354198p-2, 0x1.64f69cp-4, -0x1.25cad2p-4, 0x1.e4335ap-2, 0x1.83d93ap-5, -0x1.e2803p-2, -0x1.4b72cep-4, -0x1.18cdbp-1, -0x1.5a4d16p-1, 0x1.81fc12p+0, 0x1.b7ded2p-5, -0x1.5f347p+0, 0x1.f40dfap+0, 0x1.84e87ap-2, -0x1.bd39dp-1, 0x1.e1598p-1, 0x1.07e9bcp-1, -0x1.47f79cp-2, -0x1.5e7b4ap+0, -0x1.7db1b2p-1, 0x1.81a776p-3, -0x1.0906fp-1, -0x1.9f8e88p+0, -0x1.f45c4p-3, -0x1.b9237ep-2, 0x1.b8cf4ap-1, -0x1.4397cap-4),
#              f4:(-0x1.3985cep+0, 0x1.72106ep-1, 0x1.47909cp+0, -0x1.2ec6c8p+0, -0x1.e1366p-2, -0x1.92cbeep-1, -0x1.887cdp-4, -0x1.f9826ep-2, 0x1.d557f8p-1, -0x1.e0bd16p-2, 0x1.cc0a2p-2, -0x1.ddb86cp-3, 0x1.7b9d7cp-1, 0x1.9efc2ap-2, -0x1.48a9ep-3, -0x1.23334cp-3, -0x1.e5f378p-2, -0x1.442d5p-1, -0x1.99e15ep-2, 0x1.0d71e8p+0, 0x1.175c32p+0, 0x1.40469ap-1, -0x1.dcd24cp-2, -0x1.a9061p-3, -0x1.2e6298p-2, 0x1.0ddc2p+0, -0x1.8c7cc4p-2, 0x1.851f56p-1, -0x1.d807d4p-4, 0x1.c04e36p-3, 0x1.06b2c2p-2, -0x1.13377cp+0, 0x1.731802p-1, -0x1.4f6322p-3, -0x1.d3d4eap-3, -0x1.3bc13ap-2, -0x1.c5fc94p-1, 0x1.a39d0ap+0, -0x1.5ede16p-1, 0x1.4b4146p-1, -0x1.d809a4p-1, 0x1.270b86p+0, 0x1.d1f012p-1, 0x1.c031bap-3, 0x1.638b8p-1, -0x1.c6f4ap-9, -0x1.525c0cp+0, 0x1.28397p-1),
#              f5:(-0x1.e3836ap-1, 0x1.76ab6cp-2, 0x1.6763c6p-2, 0x1.2292fcp-10, -0x1.66e444p-1, -0x1.36e992p-2, -0x1.e7df22p-1, 0x1.01884ap-3, -0x1.f65b54p-2, -0x1.01fdb8p-1, -0x1.374d02p-3, -0x1.7831f6p-2, -0x1.03dd8p+0, 0x1.550b96p-3, -0x1.a03468p-1, -0x1.dcaa5ep-2, 0x1.c7f962p-4, 0x1.130d54p+0, -0x1.60c4f6p-1, -0x1.2a3532p+0, 0x1.a9f602p-1, 0x1.342414p+0, -0x1.47b902p-2, 0x1.b1374cp-4, 0x1.16d216p-2, 0x1.9b8248p-1, 0x1.fe308p+0, -0x1.5cdddep-2, 0x1.0bd654p-1, 0x1.c84a84p-2, 0x1.dd49a6p-1, -0x1.787918p-1, -0x1.8bdd7p-3, -0x1.856ff4p-4, -0x1.77b97ep-2, 0x1.0204f2p-5, 0x1.35e50ap-1, 0x1.01fb54p-1, -0x1.69e772p+0, -0x1.388caep-7, 0x1.3cff6ap-1, -0x1.c5a168p-4, 0x1.611b9p-1, -0x1.b1a00ep-4, -0x1.b690fcp-2, 0x1.c1452ep-1, 0x1.157ba2p-5, -0x1.c52afcp-1),
#              f6:(-0x1.310d4ap-5, -0x1.7e9d5cp-5, 0x1.c4a3e2p-1, 0x1.4f9a82p-2, 0x1.1cf08ap-1, 0x1.a8638ap+0, -0x1.bb79eap-3, 0x1.4fd69cp-1, -0x1.6ed0a4p-3, 0x1.3c644p-3, -0x1.6bbdd2p+0, 0x1.7df12p-1, 0x1.43dafap-1, 0x1.3c2d4p-2, -0x1.c5d27p-1, 0x1.ee29b8p-2, 0x1.3b750ap-1, 0x1.fb7f5p-7, 0x1.fafd84p-4, -0x1.4bdd46p-2, -0x1.725078p-2, -0x1.b35b74p-2, -0x1.d2b33cp-1, -0x1.73973p-1, 0x1.16369p+0, 0x1.218384p-3, 0x1.49655p-1, -0x1.7992bcp-1, -0x1.c41ed4p-1, 0x1.8f522p-2, -0x1.467972p-2, 0x1.224422p-2, -0x1.b669eep-3, 0x1.41988p-1, 0x1.0abd7p-1, -0x1.19a4ap-2, 0x1.1e0164p+0, -0x1.d3d1dcp-2, -0x1.4eaad6p+0, 0x1.149f92p-2, -0x1.91d636p-1, 0x1.12a658p+0, 0x1.218fd6p-2, 0x1.724bf8p-5, 0x1.bdc09ap-1, -0x1.411876p-2, 0x1.edc15p-3, 0x1.f4b2bcp-2)]
# {OUT} Y_N = [f1:(-0x1.5950bep-1, 0x1.45189p-1, -0x1.8cc5ccp-1, 0x1.1c4dfap-1, 0x1.105016p-2, 0x1.61bf78p-5, -0x1.152ad4p-4, -0x1.f2f476p-3, 0x1.75c55p-5, 0x1.552dbp-1, -0x1.865c5p+0, 0x1.51b748p-2, 0x1.741bfep-3, 0x1.b01954p-3, -0x1.6a6156p-2, 0x1.2ecee2p-1, 0x1.b541b2p-1, 0x1.f8e61p-1, -0x1.b8b4f8p-4, 0x1.670adep-3, 0x1.4e00fep-1, -0x1.1d0c1p-1, 0x1.1598dap-1, -0x1.4318fep+0, 0x1.6d687p-1, 0x1.9ce31cp-2, 0x1.3ec32p-1, -0x1.bd779cp-2, 0x1.85718cp-1, -0x1.ad0f5ep-2, 0x1.fa73c8p-4, 0x1.8e9ebp-1, -0x1.d03d2p-3, 0x1.3f7c4p-1, 0x1.b98e4p-7, -0x1.13c54ap-1, 0x1.4792bp-3, 0x1.06865cp-1, -0x1.496452p-2, 0x1.b00f3ap-1, -0x1.6ecd6ep-1, 0x1.4ac1cp-5, -0x1.008f12p+0, -0x1.e90634p-4, -0x1.37833ap-2, -0x1.d25a14p-3, 0x1.383258p-2, 0x1.091cb2p-2),
#              f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Modem_SCMA::filter(const float32 Y_N1[6x48], float32 Y_N2[6x48])
# {IN}  Y_N1 = [f1:(-0x1.5950bep-1, 0x1.45189p-1, -0x1.8cc5ccp-1, 0x1.1c4dfap-1, 0x1.105016p-2, 0x1.61bf78p-5, -0x1.152ad4p-4, -0x1.f2f476p-3, 0x1.75c55p-5, 0x1.552dbp-1, -0x1.865c5p+0, 0x1.51b748p-2, 0x1.741bfep-3, 0x1.b01954p-3, -0x1.6a6156p-2, 0x1.2ecee2p-1, 0x1.b541b2p-1, 0x1.f8e61p-1, -0x1.b8b4f8p-4, 0x1.670adep-3, 0x1.4e00fep-1, -0x1.1d0c1p-1, 0x1.1598dap-1, -0x1.4318fep+0, 0x1.6d687p-1, 0x1.9ce31cp-2, 0x1.3ec32p-1, -0x1.bd779cp-2, 0x1.85718cp-1, -0x1.ad0f5ep-2, 0x1.fa73c8p-4, 0x1.8e9ebp-1, -0x1.d03d2p-3, 0x1.3f7c4p-1, 0x1.b98e4p-7, -0x1.13c54ap-1, 0x1.4792bp-3, 0x1.06865cp-1, -0x1.496452p-2, 0x1.b00f3ap-1, -0x1.6ecd6ep-1, 0x1.4ac1cp-5, -0x1.008f12p+0, -0x1.e90634p-4, -0x1.37833ap-2, -0x1.d25a14p-3, 0x1.383258p-2, 0x1.091cb2p-2),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# {OUT} Y_N2 = [f1:(-0x1.5950bep-1, 0x1.45189p-1, -0x1.8cc5ccp-1, 0x1.1c4dfap-1, 0x1.105016p-2, 0x1.61bf78p-5, -0x1.152ad4p-4, -0x1.f2f476p-3, 0x1.75c55p-5, 0x1.552dbp-1, -0x1.865c5p+0, 0x1.51b748p-2, 0x1.741bfep-3, 0x1.b01954p-3, -0x1.6a6156p-2, 0x1.2ecee2p-1, 0x1.b541b2p-1, 0x1.f8e61p-1, -0x1.b8b4f8p-4, 0x1.670adep-3, 0x1.4e00fep-1, -0x1.1d0c1p-1, 0x1.1598dap-1, -0x1.4318fep+0, 0x1.6d687p-1, 0x1.9ce31cp-2, 0x1.3ec32p-1, -0x1.bd779cp-2, 0x1.85718cp-1, -0x1.ad0f5ep-2, 0x1.fa73c8p-4, 0x1.8e9ebp-1, -0x1.d03d2p-3, 0x1.3f7c4p-1, 0x1.b98e4p-7, -0x1.13c54ap-1, 0x1.4792bp-3, 0x1.06865cp-1, -0x1.496452p-2, 0x1.b00f3ap-1, -0x1.6ecd6ep-1, 0x1.4ac1cp-5, -0x1.008f12p+0, -0x1.e90634p-4, -0x1.37833ap-2, -0x1.d25a14p-3, 0x1.383258p-2, 0x1.091cb2p-2),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Modem_SCMA::demodulate_wg(const float32 H_N[6x48], const float32 Y_N1[6x48], float32 Y_N2[6x12])
# {IN}  H_N  = [f1:(0x1.0180cp-1, 0x1.7662aep-3, -0x1.1a779cp-1, 0x1.6a9774p+0, -0x1.d8987ap-5, -0x1.004826p-4, 0x1.2ef89cp-3, -0x1.2e9394p-1, -0x1.29280cp-4, -0x1.03151ep-4, -0x1.df1c98p-3, -0x1.06cb2ep-5, 0x1.4bd9fep-1, -0x1.1639p-4, 0x1.9a2712p-2, -0x1.ccb56p-1, 0x1.307258p-1, -0x1.98fcd8p-3, 0x1.f06426p-1, 0x1.50266cp+0, -0x1.3d8f1p-2, -0x1.076e12p+0, -0x1.080e54p-1, 0x1.74b502p+0, 0x1.77ddep-2, 0x1.6558f2p-2, 0x1.cad7f8p-1, -0x1.6c37ep-3, 0x1.746c06p-1, -0x1.9d85cep-2, -0x1.078d56p-2, 0x1.371aa8p-5, 0x1.d3fc0ap-2, -0x1.6fb1aap-1, -0x1.c5af86p-1, 0x1.0a27d2p-3, 0x1.4c4d1ap-1, -0x1.02185ep-1, -0x1.19e01p-2, -0x1.a481cep-3, -0x1.8806bap-5, -0x1.b7f7b6p-3, 0x1.abc37ep-3, 0x1.41d6bep-1, 0x1.093962p+0, -0x1.6b79e8p-3, -0x1.37a87cp-2, -0x1.3ab1cep-1),
#               f2:(-0x1.98af54p-1, -0x1.7c4854p-1, -0x1.1a1e2ap-5, -0x1.c8a2fep-2, -0x1.5d6974p-1, 0x1.e2603ep-2, 0x1.2f8834p-1, -0x1.62aa64p-4, 0x1.345cccp-2, -0x1.6bac74p-2, 0x1.af9df4p-2, 0x1.3e0bcp+1, 0x1.788ceap-2, 0x1.9db16ap-2, -0x1.f2b1c6p-3, 0x1.3aff7ap-6, -0x1.277126p-3, -0x1.ec1a54p-2, -0x1.871038p-2, 0x1.1b41b4p+0, -0x1.f8d0d8p-5, -0x1.e59862p-2, 0x1.cc950cp-1, 0x1.1094fap+0, 0x1.f53efap-1, 0x1.f504b4p-3, 0x1.667174p+0, -0x1.4204ccp+0, -0x1.f9c9eep+0, -0x1.d8e588p-3, 0x1.0003a6p-1, -0x1.478058p-2, -0x1.bf454ap-2, 0x1.240268p-1, 0x1.9d733cp-3, 0x1.ef2cdap-5, 0x1.75c7c6p-2, -0x1.c4ecd4p+0, 0x1.10d166p-3, 0x1.d784e4p-2, -0x1.4b1f9ep-1, -0x1.d2ea64p-5, -0x1.223e98p-4, 0x1.ef06c2p-3, 0x1.0f1f7ap-1, -0x1.fa12fcp-2, -0x1.28f04ep-6, -0x1.20b618p-6),
#               f3:(-0x1.a43926p+0, 0x1.6ee04ap+0, 0x1.502378p-2, -0x1.86020cp-1, -0x1.6cf1a8p+0, 0x1.336364p-3, -0x1.1712bp+0, 0x1.032cf2p-2, 0x1.85127ap-3, 0x1.65d1a8p-1, -0x1.cc3b5ep-3, 0x1.f2a928p-3, 0x1.f1de62p-2, 0x1.b6adf2p-4, 0x1.112402p+0, -0x1.2e53a2p-1, 0x1.385892p-1, -0x1.29ccc2p-1, 0x1.9a833p-5, 0x1.f00d5cp-7, -0x1.1e10d4p-1, 0x1.354198p-2, 0x1.64f69cp-4, -0x1.25cad2p-4, 0x1.e4335ap-2, 0x1.83d93ap-5, -0x1.e2803p-2, -0x1.4b72cep-4, -0x1.18cdbp-1, -0x1.5a4d16p-1, 0x1.81fc12p+0, 0x1.b7ded2p-5, -0x1.5f347p+0, 0x1.f40dfap+0, 0x1.84e87ap-2, -0x1.bd39dp-1, 0x1.e1598p-1, 0x1.07e9bcp-1, -0x1.47f79cp-2, -0x1.5e7b4ap+0, -0x1.7db1b2p-1, 0x1.81a776p-3, -0x1.0906fp-1, -0x1.9f8e88p+0, -0x1.f45c4p-3, -0x1.b9237ep-2, 0x1.b8cf4ap-1, -0x1.4397cap-4),
#               f4:(-0x1.3985cep+0, 0x1.72106ep-1, 0x1.47909cp+0, -0x1.2ec6c8p+0, -0x1.e1366p-2, -0x1.92cbeep-1, -0x1.887cdp-4, -0x1.f9826ep-2, 0x1.d557f8p-1, -0x1.e0bd16p-2, 0x1.cc0a2p-2, -0x1.ddb86cp-3, 0x1.7b9d7cp-1, 0x1.9efc2ap-2, -0x1.48a9ep-3, -0x1.23334cp-3, -0x1.e5f378p-2, -0x1.442d5p-1, -0x1.99e15ep-2, 0x1.0d71e8p+0, 0x1.175c32p+0, 0x1.40469ap-1, -0x1.dcd24cp-2, -0x1.a9061p-3, -0x1.2e6298p-2, 0x1.0ddc2p+0, -0x1.8c7cc4p-2, 0x1.851f56p-1, -0x1.d807d4p-4, 0x1.c04e36p-3, 0x1.06b2c2p-2, -0x1.13377cp+0, 0x1.731802p-1, -0x1.4f6322p-3, -0x1.d3d4eap-3, -0x1.3bc13ap-2, -0x1.c5fc94p-1, 0x1.a39d0ap+0, -0x1.5ede16p-1, 0x1.4b4146p-1, -0x1.d809a4p-1, 0x1.270b86p+0, 0x1.d1f012p-1, 0x1.c031bap-3, 0x1.638b8p-1, -0x1.c6f4ap-9, -0x1.525c0cp+0, 0x1.28397p-1),
#               f5:(-0x1.e3836ap-1, 0x1.76ab6cp-2, 0x1.6763c6p-2, 0x1.2292fcp-10, -0x1.66e444p-1, -0x1.36e992p-2, -0x1.e7df22p-1, 0x1.01884ap-3, -0x1.f65b54p-2, -0x1.01fdb8p-1, -0x1.374d02p-3, -0x1.7831f6p-2, -0x1.03dd8p+0, 0x1.550b96p-3, -0x1.a03468p-1, -0x1.dcaa5ep-2, 0x1.c7f962p-4, 0x1.130d54p+0, -0x1.60c4f6p-1, -0x1.2a3532p+0, 0x1.a9f602p-1, 0x1.342414p+0, -0x1.47b902p-2, 0x1.b1374cp-4, 0x1.16d216p-2, 0x1.9b8248p-1, 0x1.fe308p+0, -0x1.5cdddep-2, 0x1.0bd654p-1, 0x1.c84a84p-2, 0x1.dd49a6p-1, -0x1.787918p-1, -0x1.8bdd7p-3, -0x1.856ff4p-4, -0x1.77b97ep-2, 0x1.0204f2p-5, 0x1.35e50ap-1, 0x1.01fb54p-1, -0x1.69e772p+0, -0x1.388caep-7, 0x1.3cff6ap-1, -0x1.c5a168p-4, 0x1.611b9p-1, -0x1.b1a00ep-4, -0x1.b690fcp-2, 0x1.c1452ep-1, 0x1.157ba2p-5, -0x1.c52afcp-1),
#               f6:(-0x1.310d4ap-5, -0x1.7e9d5cp-5, 0x1.c4a3e2p-1, 0x1.4f9a82p-2, 0x1.1cf08ap-1, 0x1.a8638ap+0, -0x1.bb79eap-3, 0x1.4fd69cp-1, -0x1.6ed0a4p-3, 0x1.3c644p-3, -0x1.6bbdd2p+0, 0x1.7df12p-1, 0x1.43dafap-1, 0x1.3c2d4p-2, -0x1.c5d27p-1, 0x1.ee29b8p-2, 0x1.3b750ap-1, 0x1.fb7f5p-7, 0x1.fafd84p-4, -0x1.4bdd46p-2, -0x1.725078p-2, -0x1.b35b74p-2, -0x1.d2b33cp-1, -0x1.73973p-1, 0x1.16369p+0, 0x1.218384p-3, 0x1.49655p-1, -0x1.7992bcp-1, -0x1.c41ed4p-1, 0x1.8f522p-2, -0x1.467972p-2, 0x1.224422p-2, -0x1.b669eep-3, 0x1.41988p-1, 0x1.0abd7p-1, -0x1.19a4ap-2, 0x1.1e0164p+0, -0x1.d3d1dcp-2, -0x1.4eaad6p+0, 0x1.149f92p-2, -0x1.91d636p-1, 0x1.12a658p+0, 0x1.218fd6p-2, 0x1.724bf8p-5, 0x1.bdc09ap-1, -0x1.411876p-2, 0x1.edc15p-3, 0x1.f4b2bcp-2)]
# {IN}  Y_N1 = [f1:(-0x1.5950bep-1, 0x1.45189p-1, -0x1.8cc5ccp-1, 0x1.1c4dfap-1, 0x1.105016p-2, 0x1.61bf78p-5, -0x1.152ad4p-4, -0x1.f2f476p-3, 0x1.75c55p-5, 0x1.552dbp-1, -0x1.865c5p+0, 0x1.51b748p-2, 0x1.741bfep-3, 0x1.b01954p-3, -0x1.6a6156p-2, 0x1.2ecee2p-1, 0x1.b541b2p-1, 0x1.f8e61p-1, -0x1.b8b4f8p-4, 0x1.670adep-3, 0x1.4e00fep-1, -0x1.1d0c1p-1, 0x1.1598dap-1, -0x1.4318fep+0, 0x1.6d687p-1, 0x1.9ce31cp-2, 0x1.3ec32p-1, -0x1.bd779cp-2, 0x1.85718cp-1, -0x1.ad0f5ep-2, 0x1.fa73c8p-4, 0x1.8e9ebp-1, -0x1.d03d2p-3, 0x1.3f7c4p-1, 0x1.b98e4p-7, -0x1.13c54ap-1, 0x1.4792bp-3, 0x1.06865cp-1, -0x1.496452p-2, 0x1.b00f3ap-1, -0x1.6ecd6ep-1, 0x1.4ac1cp-5, -0x1.008f12p+0, -0x1.e90634p-4, -0x1.37833ap-2, -0x1.d25a14p-3, 0x1.383258p-2, 0x1.091cb2p-2),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# {OUT} Y_N2 = [f1:(0x1.bb50d8p+0, -0x1.2148cep+2, -0x1.0c91dp+1, -0x1.a37cp+0, -0x1.792a1ap+3, -0x1.2f6dfp+3, -0x1.99048p-2, -0x1.40c75cp+0, -0x1.9d35b8p-1, 0x1.471384p+0, 0x1.57b9bp-2, -0x1.838cacp+0),
#               f2:(0x1.07bc46p+1, -0x1.0409p-5, 0x1.9fd92p-2, -0x1.12b2bap+0, -0x1.6e57cp-1, -0x1.163dbp+2, 0x1.ca7bacp+2, 0x1.a1ef72p+3, 0x1.c7fff8p+0, -0x1.d39ae8p-1, 0x1.4895e2p+1, 0x1.fd0dc4p+0),
#               f3:(-0x1.78f0a8p+2, -0x1.8f2eep-2, -0x1.ee246p+0, -0x1.d51d58p+0, 0x1.0d32dcp+2, 0x1.9ba428p+0, 0x1.7bd3fep+0, -0x1.36abacp+0, -0x1.8972fcp+2, 0x1.3e1e84p+2, -0x1.f9aff4p+1, 0x1.c3709p+2),
#               f4:(0x1.cecf2p-2, 0x1.50036p-1, 0x1.6b3cep-2, -0x1.2cf7cp-4, 0x1.4def2cp+0, -0x1.1831c8p+0, -0x1.834f6p-1, -0x1.a82b4p+0, 0x1.32f9bp-1, 0x1.ba97d4p+1, -0x1.4e3bf4p+0, -0x1.4947ap-2),
#               f5:(0x1.44f4f8p-1, -0x1.136f5p-2, -0x1.364f6p+1, 0x1.e81764p+0, -0x1.bc9eecp+0, 0x1.6883cap+2, 0x1.9ac8c2p+2, 0x1.a08cd4p+0, -0x1.785086p+2, -0x1.9011ep-1, 0x1.094d9p-2, 0x1.52361p-1),
#               f6:(0x1.3cfbcp-4, 0x1.c3c99p+0, 0x1.07c592p+4, 0x1.9d5464p+2, 0x1.3c6e74p+0, -0x1.42c62cp+0, 0x1.ac86b8p+2, -0x1.8c32d4p+1, 0x1.a8cb2p-3, -0x1.0ac7b8p+0, 0x1.2cb0bcp+0, 0x1.13c96p+1)]
# Returned status: 0
#
# Quantizer_standard::process(const float32 Y_N1[6x12], int8 Y_N2[6x12])
# {IN}  Y_N1 = [f1:(0x1.bb50d8p+0, -0x1.2148cep+2, -0x1.0c91dp+1, -0x1.a37cp+0, -0x1.792a1ap+3, -0x1.2f6dfp+3, -0x1.99048p-2, -0x1.40c75cp+0, -0x1.9d35b8p-1, 0x1.471384p+0, 0x1.57b9bp-2, -0x1.838cacp+0),
#               f2:(0x1.07bc46p+1, -0x1.0409p-5, 0x1.9fd92p-2, -0x1.12b2bap+0, -0x1.6e57cp-1, -0x1.163dbp+2, 0x1.ca7bacp+2, 0x1.a1ef72p+3, 0x1.c7fff8p+0, -0x1.d39ae8p-1, 0x1.4895e2p+1, 0x1.fd0dc4p+0),
#               f3:(-0x1.78f0a8p+2, -0x1.8f2eep-2, -0x1.ee246p+0, -0x1.d51d58p+0, 0x1.0d32dcp+2, 0x1.9ba428p+0, 0x1.7bd3fep+0, -0x1.36abacp+0, -0x1.8972fcp+2, 0x1.3e1e84p+2, -0x1.f9aff4p+1, 0x1.c3709p+2),
#               f4:(0x1.cecf2p-2, 0x1.50036p-1, 0x1.6b3cep-2, -0x1.2cf7cp-4, 0x1.4def2cp+0, -0x1.1831c8p+0, -0x1.834f6p-1, -0x1.a82b4p+0, 0x1.32f9bp-1, 0x1.ba97d4p+1, -0x1.4e3bf4p+0, -0x1.4947ap-2),
#               f5:(0x1.44f4f8p-1, -0x1.136f5p-2, -0x1.364f6p+1, 0x1.e81764p+0, -0x1.bc9eecp+0, 0x1.6883cap+2, 0x1.9ac8c2p+2, 0x1.a08cd4p+0, -0x1.785086p+2, -0x1.9011ep-1, 0x1.094d9p-2, 0x1.52361p-1),
#               f6:(0x1.3cfbcp-4, 0x1.c3c99p+0, 0x1.07c592p+4, 0x1.9d5464p+2, 0x1.3c6e74p+0, -0x1.42c62cp+0, 0x1.ac86b8p+2, -0x1.8c32d4p+1, 0x1.a8cb2p-3, -0x1.0ac7b8p+0, 0x1.2cb0bcp+0, 0x1.13c96p+1)]
# {OUT} Y_N2 = [f1:(0xe, 0xffffffdc, 0xffffffef, 0xfffffff3, 0xffffffa2, 0xffffffb4, 0xfffffffd, 0xfffffff6, 0xfffffffa, 0xa, 0x3, 0xfffffff4),
#               f2:(0x10, 0x0, 0x3, 0xfffffff7, 0xfffffffa, 0xffffffdd, 0x39, 0x68, 0xe, 0xfffffff9, 0x15, 0x10),
#               f3:(0xffffffd1, 0xfffffffd, 0xfffffff1, 0xfffffff1, 0x22, 0xd, 0xc, 0xfffffff6, 0xffffffcf, 0x28, 0xffffffe0, 0x38),
#               f4:(0x4, 0x5, 0x3, 0xffffffff, 0xa, 0xfffffff7, 0xfffffffa, 0xfffffff3, 0x5, 0x1c, 0xfffffff6, 0xfffffffd),
#               f5:(0x5, 0xfffffffe, 0xffffffed, 0xf, 0xfffffff2, 0x2d, 0x33, 0xd, 0xffffffd1, 0xfffffffa, 0x2, 0x5),
#               f6:(0x1, 0xe, 0x7f, 0x34, 0xa, 0xfffffff6, 0x36, 0xffffffe7, 0x2, 0xfffffff8, 0x9, 0x11)]
# Returned status: 0
#
# Puncturer_NO::depuncture(const int8 Y_N1[6x12], int8 Y_N2[6x12])
# {IN}  Y_N1 = [f1:(0xe, 0xffffffdc, 0xffffffef, 0xfffffff3, 0xffffffa2, 0xffffffb4, 0xfffffffd, 0xfffffff6, 0xfffffffa, 0xa, 0x3, 0xfffffff4),
#               f2:(0x10, 0x0, 0x3, 0xfffffff7, 0xfffffffa, 0xffffffdd, 0x39, 0x68, 0xe, 0xfffffff9, 0x15, 0x10),
#               f3:(0xffffffd1, 0xfffffffd, 0xfffffff1, 0xfffffff1, 0x22, 0xd, 0xc, 0xfffffff6, 0xffffffcf, 0x28, 0xffffffe0, 0x38),
#               f4:(0x4, 0x5, 0x3, 0xffffffff, 0xa, 0xfffffff7, 0xfffffffa, 0xfffffff3, 0x5, 0x1c, 0xfffffff6, 0xfffffffd),
#               f5:(0x5, 0xfffffffe, 0xffffffed, 0xf, 0xfffffff2, 0x2d, 0x33, 0xd, 0xffffffd1, 0xfffffffa, 0x2, 0x5),
#               f6:(0x1, 0xe, 0x7f, 0x34, 0xa, 0xfffffff6, 0x36, 0xffffffe7, 0x2, 0xfffffff8, 0x9, 0x11)]
# {OUT} Y_N2 = [f1:(0xe, 0xffffffdc, 0xffffffef, 0xfffffff3, 0xffffffa2, 0xffffffb4, 0xfffffffd, 0xfffffff6, 0xfffffffa, 0xa, 0x3, 0xfffffff4),
#               f2:(0x10, 0x0, 0x3, 0xfffffff7, 0xfffffffa, 0xffffffdd, 0x39, 0x68, 0xe, 0xfffffff9, 0x15, 0x10),
#               f3:(0xffffffd1, 0xfffffffd, 0xfffffff1, 0xfffffff1, 0x22, 0xd, 0xc, 0xfffffff6, 0xffffffcf, 0x28, 0xffffffe0, 0x38),
#               f4:(0x4, 0x5, 0x3, 0xffffffff, 0xa, 0xfffffff7, 0xfffffffa, 0xfffffff3, 0x5, 0x1c, 0xfffffff6, 0xfffffffd),
#               f5:(0x5, 0xfffffffe, 0xffffffed, 0xf, 0xfffffff2, 0x2d, 0x33, 0xd, 0xffffffd1, 0xfffffffa, 0x2, 0x5),
#               f6:(0x1, 0xe, 0x7f, 0x34, 0xa, 0xfffffff6, 0x36, 0xffffffe7, 0x2, 0xfffffff8, 0x9, 0x11)]
# Returned status: 0
#
# Decoder_NO::decode_siho(const int8 Y_N[6x12], int8 V_K[6x12])
# {IN}  Y_N = [f1:(0xe, 0xffffffdc, 0xffffffef, 0xfffffff3, 0xffffffa2, 0xffffffb4, 0xfffffffd, 0xfffffff6, 0xfffffffa, 0xa, 0x3, 0xfffffff4),
#              f2:(0x10, 0x0, 0x3, 0xfffffff7, 0xfffffffa, 0xffffffdd, 0x39, 0x68, 0xe, 0xfffffff9, 0x15, 0x10),
#              f3:(0xffffffd1, 0xfffffffd, 0xfffffff1, 0xfffffff1, 0x22, 0xd, 0xc, 0xfffffff6, 0xffffffcf, 0x28, 0xffffffe0, 0x38),
#              f4:(0x4, 0x5, 0x3, 0xffffffff, 0xa, 0xfffffff7, 0xfffffffa, 0xfffffff3, 0x5, 0x1c, 0xfffffff6, 0xfffffffd),
#              f5:(0x5, 0xfffffffe, 0xffffffed, 0xf, 0xfffffff2, 0x2d, 0x33, 0xd, 0xffffffd1, 0xfffffffa, 0x2, 0x5),
#              f6:(0x1, 0xe, 0x7f, 0x34, 0xa, 0xfffffff6, 0x36, 0xffffffe7, 0x2, 0xfffffff8, 0x9, 0x11)]
# {OUT} V_K = [f1:(0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1),
#              f2:(0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0),
#              f3:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0),
#              f4:(0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#              f5:(0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0),
#              f6:(0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0)]
# Returned status: 0
#
# CRC_NO::extract(const int8 V_K1[6x12], int8 V_K2[6x12])
# {IN}  V_K1 = [f1:(0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1),
#               f2:(0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0),
#               f3:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0),
#               f4:(0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#               f5:(0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0),
#               f6:(0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0)]
# {OUT} V_K2 = [f1:(0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1),
#               f2:(0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0),
#               f3:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0),
#               f4:(0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#               f5:(0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0),
#               f6:(0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0)]
# Returned status: 0
#
# Monitor_BFER::check_errors(const int8 U[6x12], const int8 V[6x12])
# {IN}  U = [f1:(0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1),
#            f2:(0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0),
#            f3:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0),
#            f4:(0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#            f5:(0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0),
#            f6:(0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0)]
# {IN}  V = [f1:(0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1),
#            f2:(0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0),
#            f3:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0),
#            f4:(0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#            f5:(0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0),
#            f6:(0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0)]
# Returned status: 8
#
# -------------------------------
# New communication (nÂ°10)
# -------------------------------
#
# Source_random::generate(int8 U_K[6x12])
# {OUT} U_K = [f1:(0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0),
#              f2:(0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0),
#              f3:(0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1),
#              f4:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#              f5:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1),
#              f6:(0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0)]
# Returned status: 0
#
# CRC_NO::build(const int8 U_K1[6x12], int8 U_K2[6x12])
# {IN}  U_K1 = [f1:(0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0),
#               f2:(0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0),
#               f3:(0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1),
#               f4:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#               f5:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1),
#               f6:(0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0)]
# {OUT} U_K2 = [f1:(0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0),
#               f2:(0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0),
#               f3:(0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1),
#               f4:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#               f5:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1),
#               f6:(0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0)]
# Returned status: 0
#
# Encoder_NO::encode(const int8 U_K[6x12], int8 X_N[6x12])
# {IN}  U_K = [f1:(0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0),
#              f2:(0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0),
#              f3:(0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1),
#              f4:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#              f5:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1),
#              f6:(0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0)]
# {OUT} X_N = [f1:(0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0),
#              f2:(0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0),
#              f3:(0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1),
#              f4:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#              f5:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1),
#              f6:(0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0)]
# Returned status: 0
#
# Puncturer_NO::puncture(const int8 X_N1[6x12], int8 X_N2[6x12])
# {IN}  X_N1 = [f1:(0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0),
#               f2:(0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0),
#               f3:(0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1),
#               f4:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#               f5:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1),
#               f6:(0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0)]
# {OUT} X_N2 = [f1:(0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0),
#               f2:(0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0),
#               f3:(0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1),
#               f4:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#               f5:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1),
#               f6:(0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0)]
# Returned status: 0
#
# Modem_SCMA::modulate(const int8 X_N1[6x12], float32 X_N2[6x48])
# {IN}  X_N1 = [f1:(0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0),
#               f2:(0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0),
#               f3:(0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1),
#               f4:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#               f5:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1),
#               f6:(0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0)]
# {OUT} X_N2 = [f1:(0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0),
#               f2:(-0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0),
#               f3:(0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3),
#               f5:(0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2),
#               f6:(0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Channel_Rayleigh_LLR::add_noise_wg(const float32 X_N[6x48], float32 H_N[6x48], float32 Y_N[6x48])
# {IN}  X_N = [f1:(0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0),
#              f2:(-0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0),
#              f3:(0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3),
#              f5:(0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2),
#              f6:(0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0)]
# {OUT} H_N = [f1:(-0x1.481696p+0, -0x1.6d689cp-1, 0x1.1ab6b6p-1, 0x1.d90656p-3, 0x1.0b7ba2p-1, 0x1.1e51f6p-2, 0x1.9f3324p-1, -0x1.be037ep-2, -0x1.bb6b9ep-1, -0x1.077c14p+0, 0x1.380a9cp-2, -0x1.b21b62p-1, -0x1.0d0124p+0, 0x1.5f319p-2, -0x1.f76732p-3, 0x1.354d4p-1, -0x1.a36f1ap-3, -0x1.25e43ep-2, -0x1.4a610ep-5, 0x1.b4d9bcp-2, -0x1.4fbbdep-2, -0x1.a9bfcap-1, 0x1.60c376p-7, 0x1.d4575ep-4, 0x1.33d8f8p-2, 0x1.97428ap-1, 0x1.b0a4acp-3, 0x1.ea89d4p-2, -0x1.ce43fap-1, -0x1.c17b0ap-9, 0x1.129348p-1, -0x1.738c72p-1, -0x1.8553bcp+0, 0x1.75221p+0, 0x1.6fb7fap-1, -0x1.f9be5ep-5, -0x1.9030a8p-2, 0x1.1ef23p-1, 0x1.c15c42p-1, 0x1.5a0e38p-2, 0x1.4ccba2p+0, 0x1.13a1ecp-1, 0x1.687136p-1, -0x1.466fa8p-1, -0x1.26d5fap-3, -0x1.7be068p-1, 0x1.20d1acp+0, 0x1.69f3fcp-6),
#              f2:(-0x1.54bc6ep-2, 0x1.13b5cep+0, 0x1.0578dep-2, -0x1.49e32ap-1, 0x1.28c088p+0, 0x1.67dd76p-3, 0x1.e9b896p-2, 0x1.47bc9p-1, -0x1.873e2p-2, -0x1.7d19p-6, -0x1.9f7d7cp+0, 0x1.b1888cp-1, -0x1.9d654ap-2, -0x1.38dc2p+0, -0x1.e54c9ap-4, -0x1.7a80a8p-3, -0x1.2e47p-1, 0x1.06ae64p-4, 0x1.0e915ep+0, 0x1.3d7d3cp+0, -0x1.76614ep+0, -0x1.112fa4p+0, 0x1.ad7dep-3, -0x1.aaa9fap-1, 0x1.e04f72p-2, -0x1.ded682p-2, -0x1.f42002p-3, -0x1.f40bb2p-1, 0x1.0e163ep+0, 0x1.01d53p-4, -0x1.23a86cp+0, 0x1.e96b6p-3, -0x1.c805e2p-3, -0x1.a5162ap-3, 0x1.6ae41p-3, -0x1.e0f7d2p-2, 0x1.610262p-1, -0x1.7261aep-4, -0x1.80e98cp-1, -0x1.af2ffcp-1, 0x1.0396fp-1, -0x1.599b4ep-1, 0x1.1ac9e4p-2, -0x1.8ce4c8p-1, 0x1.2a3e3ap-2, 0x1.765522p-1, -0x1.0ddd84p-2, 0x1.3e6474p-1),
#              f3:(0x1.6edacep+0, 0x1.f7f656p-2, 0x1.57ab1p-5, -0x1.113ccp-1, 0x1.e35a2cp-2, -0x1.a90e54p-3, -0x1.15a528p-1, 0x1.9c0074p-2, -0x1.a5f59p-2, -0x1.3cbc32p-2, -0x1.68fb56p-4, 0x1.9be524p-2, -0x1.4123e8p-4, 0x1.b306ep-1, -0x1.52254p-1, -0x1.076972p-5, 0x1.273ceep-1, 0x1.c0c10ep-2, 0x1.61fc52p-2, -0x1.0238c2p-4, 0x1.23774ap-2, -0x1.08e9fap+0, -0x1.d37458p-2, 0x1.49788ap-1, -0x1.1e677ep-1, -0x1.e9d188p-4, -0x1.bb3896p-2, 0x1.cdd8b8p-1, -0x1.a1723ap-1, -0x1.fa8f24p-4, 0x1.d4c19ep-4, 0x1.4f525p-1, -0x1.ed38d4p-2, 0x1.237d0ep-4, 0x1.439b78p-1, -0x1.254588p-1, 0x1.80d332p-3, 0x1.81315ap-1, -0x1.9db3bep-3, -0x1.86f7e8p-2, -0x1.a62fa2p-1, 0x1.4b8286p-3, 0x1.6b5efep-1, 0x1.d62a0ep-4, 0x1.b2f54p-8, 0x1.46f6ecp-5, 0x1.83c1fap-2, -0x1.7bc3c4p-4),
#              f4:(0x1.57c13ep-1, 0x1.7488fp-2, -0x1.c5b258p+0, -0x1.222296p-1, -0x1.0b8a4ep-5, -0x1.012ac4p-3, 0x1.1bfddap+0, -0x1.70f744p-1, 0x1.88cb44p-5, 0x1.7e0bb8p-1, -0x1.6685f2p+0, 0x1.1f86a4p-2, -0x1.b6db6p-2, -0x1.59d71p-2, 0x1.eaf21p-3, -0x1.ec0eccp-3, 0x1.3889c4p-2, -0x1.c38b84p-4, 0x1.5ba5ep-2, -0x1.1543ccp-1, -0x1.635bc6p-1, 0x1.817506p-3, 0x1.50db4ap-2, -0x1.f0c204p-1, 0x1.e67daep-1, -0x1.3f8704p-2, 0x1.4c4a72p-1, -0x1.8a216ep+0, -0x1.11237ap-2, 0x1.12dd66p-5, 0x1.c0eee2p-1, 0x1.70250ap-2, -0x1.c6267ap-1, -0x1.3c5176p-1, -0x1.42ea9ap-5, -0x1.e91432p-1, 0x1.05a276p-2, 0x1.eb23c2p-7, 0x1.567acp-1, 0x1.316b28p+0, 0x1.d51dccp-2, -0x1.d8cfd4p-4, 0x1.165becp-1, 0x1.648fd4p-3, 0x1.24b74p-4, -0x1.39633cp-6, -0x1.4559c4p-3, 0x1.d21578p-3),
#              f5:(0x1.ea2196p-2, -0x1.de6dep-2, 0x1.7f3b7ep-3, 0x1.58a258p+0, -0x1.328dbap-2, -0x1.036b06p-2, -0x1.2843d8p-1, 0x1.fd6672p-1, 0x1.633d94p-2, 0x1.1da3c8p+0, -0x1.a70d34p-1, 0x1.fc4a6ep-4, -0x1.e44e0ep-3, 0x1.67882ep-2, 0x1.775712p+0, -0x1.64af42p-1, -0x1.ca244ep-7, -0x1.cfad4ep-2, 0x1.00c844p-1, 0x1.b641eap-1, -0x1.8050b2p-2, 0x1.2c8874p-2, -0x1.a186aep+0, -0x1.67e292p-4, -0x1.e909cep-5, 0x1.2b82c6p-6, -0x1.16db4ap-1, -0x1.08a2c4p+0, -0x1.6871e6p-1, 0x1.282ee2p+0, -0x1.7ddbdap-4, 0x1.a88dfep-1, 0x1.f2b472p-1, -0x1.b325b6p-2, 0x1.c95cp-4, 0x1.3750d8p+0, -0x1.b0c9cap-1, 0x1.9c2d6ep-1, -0x1.f5023p-1, -0x1.8eb61cp-1, 0x1.adbd3p-1, 0x1.ee08dap-3, -0x1.69e88ap-2, -0x1.208282p-1, 0x1.61a204p-1, -0x1.83faecp+0, 0x1.a8cffp-1, 0x1.fad9f6p-2),
#              f6:(-0x1.876e74p-1, 0x1.5ed8dp-4, -0x1.0ca854p-1, 0x1.823ab8p-4, -0x1.27f688p-1, 0x1.65677ep-4, 0x1.8cb13ap+0, -0x1.94c47cp-1, 0x1.1bdbp-3, -0x1.4e4654p+0, -0x1.d6fbap-1, -0x1.cecc7ap-1, -0x1.7e6f58p-1, -0x1.04d3a6p+0, 0x1.c499d8p-2, 0x1.1d7308p-2, -0x1.38a834p-2, -0x1.4b1a32p-1, -0x1.18ece8p-1, 0x1.03997ep-3, -0x1.e8cdfap-5, 0x1.7b4228p-2, 0x1.9f7d52p+0, -0x1.bbe896p-1, -0x1.909adap-2, -0x1.9e5c5ep-1, -0x1.684d06p-3, 0x1.72871ap-5, -0x1.7bf67p-1, -0x1.0e1784p-1, -0x1.0978f2p+0, -0x1.df597ap-2, -0x1.444b92p-4, -0x1.a32554p+0, 0x1.bc77ep-1, 0x1.b7cb1ep-4, -0x1.41e7d4p-4, -0x1.20b6cap+0, -0x1.7a342ap-1, 0x1.0df4fep+0, -0x1.0548dep-2, 0x1.c765fcp-1, 0x1.98bd4p-6, -0x1.779f5cp+0, 0x1.155ccp-4, 0x1.c35cp-1, 0x1.8bd1dep+0, 0x1.3b29d6p-1)]
# {OUT} Y_N = [f1:(0x1.beeb3cp-1, -0x1.c38ab6p-2, -0x1.9b881cp-3, 0x1.072a52p-3, 0x1.d2da14p-2, -0x1.1da35cp-3, 0x1.d26b3cp-2, 0x1.464008p-1, 0x1.2c084p-1, -0x1.c929ep-2, -0x1.b6c47ap-1, -0x1.99c0ep-6, 0x1.b69efcp-1, 0x1.1b8e06p-2, 0x1.78b952p-2, -0x1.59adbcp-2, 0x1.811eacp-1, 0x1.a8376ep-6, -0x1.ce3934p-2, -0x1.58df1p-1, -0x1.7a3eccp-4, -0x1.5b2cc8p+0, -0x1.3009c8p-4, -0x1.99ebbp-3, -0x1.4d014ap-4, -0x1.be088p-4, -0x1.7ed22p-3, -0x1.88bb9ep-1, 0x1.d7a16p-5, -0x1.981f2ep-1, 0x1.df4eep-2, 0x1.f44538p-3, 0x1.974ccp-1, 0x1.19567ap+0, 0x1.a5b048p-1, -0x1.2027acp-3, 0x1.7d1c36p-4, -0x1.c3895p-2, 0x1.84794cp-1, -0x1.479fc8p-2, 0x1.4a0942p-4, -0x1.0a1ac6p-2, -0x1.9e2ddcp-1, 0x1.136ea6p-1, 0x1.9ddbfcp-2, 0x1.bae404p-2, 0x1.0a8adep-1, -0x1.487e4p-9),
#              f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Modem_SCMA::filter(const float32 Y_N1[6x48], float32 Y_N2[6x48])
# {IN}  Y_N1 = [f1:(0x1.beeb3cp-1, -0x1.c38ab6p-2, -0x1.9b881cp-3, 0x1.072a52p-3, 0x1.d2da14p-2, -0x1.1da35cp-3, 0x1.d26b3cp-2, 0x1.464008p-1, 0x1.2c084p-1, -0x1.c929ep-2, -0x1.b6c47ap-1, -0x1.99c0ep-6, 0x1.b69efcp-1, 0x1.1b8e06p-2, 0x1.78b952p-2, -0x1.59adbcp-2, 0x1.811eacp-1, 0x1.a8376ep-6, -0x1.ce3934p-2, -0x1.58df1p-1, -0x1.7a3eccp-4, -0x1.5b2cc8p+0, -0x1.3009c8p-4, -0x1.99ebbp-3, -0x1.4d014ap-4, -0x1.be088p-4, -0x1.7ed22p-3, -0x1.88bb9ep-1, 0x1.d7a16p-5, -0x1.981f2ep-1, 0x1.df4eep-2, 0x1.f44538p-3, 0x1.974ccp-1, 0x1.19567ap+0, 0x1.a5b048p-1, -0x1.2027acp-3, 0x1.7d1c36p-4, -0x1.c3895p-2, 0x1.84794cp-1, -0x1.479fc8p-2, 0x1.4a0942p-4, -0x1.0a1ac6p-2, -0x1.9e2ddcp-1, 0x1.136ea6p-1, 0x1.9ddbfcp-2, 0x1.bae404p-2, 0x1.0a8adep-1, -0x1.487e4p-9),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# {OUT} Y_N2 = [f1:(0x1.beeb3cp-1, -0x1.c38ab6p-2, -0x1.9b881cp-3, 0x1.072a52p-3, 0x1.d2da14p-2, -0x1.1da35cp-3, 0x1.d26b3cp-2, 0x1.464008p-1, 0x1.2c084p-1, -0x1.c929ep-2, -0x1.b6c47ap-1, -0x1.99c0ep-6, 0x1.b69efcp-1, 0x1.1b8e06p-2, 0x1.78b952p-2, -0x1.59adbcp-2, 0x1.811eacp-1, 0x1.a8376ep-6, -0x1.ce3934p-2, -0x1.58df1p-1, -0x1.7a3eccp-4, -0x1.5b2cc8p+0, -0x1.3009c8p-4, -0x1.99ebbp-3, -0x1.4d014ap-4, -0x1.be088p-4, -0x1.7ed22p-3, -0x1.88bb9ep-1, 0x1.d7a16p-5, -0x1.981f2ep-1, 0x1.df4eep-2, 0x1.f44538p-3, 0x1.974ccp-1, 0x1.19567ap+0, 0x1.a5b048p-1, -0x1.2027acp-3, 0x1.7d1c36p-4, -0x1.c3895p-2, 0x1.84794cp-1, -0x1.479fc8p-2, 0x1.4a0942p-4, -0x1.0a1ac6p-2, -0x1.9e2ddcp-1, 0x1.136ea6p-1, 0x1.9ddbfcp-2, 0x1.bae404p-2, 0x1.0a8adep-1, -0x1.487e4p-9),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Modem_SCMA::demodulate_wg(const float32 H_N[6x48], const float32 Y_N1[6x48], float32 Y_N2[6x12])
# {IN}  H_N  = [f1:(-0x1.481696p+0, -0x1.6d689cp-1, 0x1.1ab6b6p-1, 0x1.d90656p-3, 0x1.0b7ba2p-1, 0x1.1e51f6p-2, 0x1.9f3324p-1, -0x1.be037ep-2, -0x1.bb6b9ep-1, -0x1.077c14p+0, 0x1.380a9cp-2, -0x1.b21b62p-1, -0x1.0d0124p+0, 0x1.5f319p-2, -0x1.f76732p-3, 0x1.354d4p-1, -0x1.a36f1ap-3, -0x1.25e43ep-2, -0x1.4a610ep-5, 0x1.b4d9bcp-2, -0x1.4fbbdep-2, -0x1.a9bfcap-1, 0x1.60c376p-7, 0x1.d4575ep-4, 0x1.33d8f8p-2, 0x1.97428ap-1, 0x1.b0a4acp-3, 0x1.ea89d4p-2, -0x1.ce43fap-1, -0x1.c17b0ap-9, 0x1.129348p-1, -0x1.738c72p-1, -0x1.8553bcp+0, 0x1.75221p+0, 0x1.6fb7fap-1, -0x1.f9be5ep-5, -0x1.9030a8p-2, 0x1.1ef23p-1, 0x1.c15c42p-1, 0x1.5a0e38p-2, 0x1.4ccba2p+0, 0x1.13a1ecp-1, 0x1.687136p-1, -0x1.466fa8p-1, -0x1.26d5fap-3, -0x1.7be068p-1, 0x1.20d1acp+0, 0x1.69f3fcp-6),
#               f2:(-0x1.54bc6ep-2, 0x1.13b5cep+0, 0x1.0578dep-2, -0x1.49e32ap-1, 0x1.28c088p+0, 0x1.67dd76p-3, 0x1.e9b896p-2, 0x1.47bc9p-1, -0x1.873e2p-2, -0x1.7d19p-6, -0x1.9f7d7cp+0, 0x1.b1888cp-1, -0x1.9d654ap-2, -0x1.38dc2p+0, -0x1.e54c9ap-4, -0x1.7a80a8p-3, -0x1.2e47p-1, 0x1.06ae64p-4, 0x1.0e915ep+0, 0x1.3d7d3cp+0, -0x1.76614ep+0, -0x1.112fa4p+0, 0x1.ad7dep-3, -0x1.aaa9fap-1, 0x1.e04f72p-2, -0x1.ded682p-2, -0x1.f42002p-3, -0x1.f40bb2p-1, 0x1.0e163ep+0, 0x1.01d53p-4, -0x1.23a86cp+0, 0x1.e96b6p-3, -0x1.c805e2p-3, -0x1.a5162ap-3, 0x1.6ae41p-3, -0x1.e0f7d2p-2, 0x1.610262p-1, -0x1.7261aep-4, -0x1.80e98cp-1, -0x1.af2ffcp-1, 0x1.0396fp-1, -0x1.599b4ep-1, 0x1.1ac9e4p-2, -0x1.8ce4c8p-1, 0x1.2a3e3ap-2, 0x1.765522p-1, -0x1.0ddd84p-2, 0x1.3e6474p-1),
#               f3:(0x1.6edacep+0, 0x1.f7f656p-2, 0x1.57ab1p-5, -0x1.113ccp-1, 0x1.e35a2cp-2, -0x1.a90e54p-3, -0x1.15a528p-1, 0x1.9c0074p-2, -0x1.a5f59p-2, -0x1.3cbc32p-2, -0x1.68fb56p-4, 0x1.9be524p-2, -0x1.4123e8p-4, 0x1.b306ep-1, -0x1.52254p-1, -0x1.076972p-5, 0x1.273ceep-1, 0x1.c0c10ep-2, 0x1.61fc52p-2, -0x1.0238c2p-4, 0x1.23774ap-2, -0x1.08e9fap+0, -0x1.d37458p-2, 0x1.49788ap-1, -0x1.1e677ep-1, -0x1.e9d188p-4, -0x1.bb3896p-2, 0x1.cdd8b8p-1, -0x1.a1723ap-1, -0x1.fa8f24p-4, 0x1.d4c19ep-4, 0x1.4f525p-1, -0x1.ed38d4p-2, 0x1.237d0ep-4, 0x1.439b78p-1, -0x1.254588p-1, 0x1.80d332p-3, 0x1.81315ap-1, -0x1.9db3bep-3, -0x1.86f7e8p-2, -0x1.a62fa2p-1, 0x1.4b8286p-3, 0x1.6b5efep-1, 0x1.d62a0ep-4, 0x1.b2f54p-8, 0x1.46f6ecp-5, 0x1.83c1fap-2, -0x1.7bc3c4p-4),
#               f4:(0x1.57c13ep-1, 0x1.7488fp-2, -0x1.c5b258p+0, -0x1.222296p-1, -0x1.0b8a4ep-5, -0x1.012ac4p-3, 0x1.1bfddap+0, -0x1.70f744p-1, 0x1.88cb44p-5, 0x1.7e0bb8p-1, -0x1.6685f2p+0, 0x1.1f86a4p-2, -0x1.b6db6p-2, -0x1.59d71p-2, 0x1.eaf21p-3, -0x1.ec0eccp-3, 0x1.3889c4p-2, -0x1.c38b84p-4, 0x1.5ba5ep-2, -0x1.1543ccp-1, -0x1.635bc6p-1, 0x1.817506p-3, 0x1.50db4ap-2, -0x1.f0c204p-1, 0x1.e67daep-1, -0x1.3f8704p-2, 0x1.4c4a72p-1, -0x1.8a216ep+0, -0x1.11237ap-2, 0x1.12dd66p-5, 0x1.c0eee2p-1, 0x1.70250ap-2, -0x1.c6267ap-1, -0x1.3c5176p-1, -0x1.42ea9ap-5, -0x1.e91432p-1, 0x1.05a276p-2, 0x1.eb23c2p-7, 0x1.567acp-1, 0x1.316b28p+0, 0x1.d51dccp-2, -0x1.d8cfd4p-4, 0x1.165becp-1, 0x1.648fd4p-3, 0x1.24b74p-4, -0x1.39633cp-6, -0x1.4559c4p-3, 0x1.d21578p-3),
#               f5:(0x1.ea2196p-2, -0x1.de6dep-2, 0x1.7f3b7ep-3, 0x1.58a258p+0, -0x1.328dbap-2, -0x1.036b06p-2, -0x1.2843d8p-1, 0x1.fd6672p-1, 0x1.633d94p-2, 0x1.1da3c8p+0, -0x1.a70d34p-1, 0x1.fc4a6ep-4, -0x1.e44e0ep-3, 0x1.67882ep-2, 0x1.775712p+0, -0x1.64af42p-1, -0x1.ca244ep-7, -0x1.cfad4ep-2, 0x1.00c844p-1, 0x1.b641eap-1, -0x1.8050b2p-2, 0x1.2c8874p-2, -0x1.a186aep+0, -0x1.67e292p-4, -0x1.e909cep-5, 0x1.2b82c6p-6, -0x1.16db4ap-1, -0x1.08a2c4p+0, -0x1.6871e6p-1, 0x1.282ee2p+0, -0x1.7ddbdap-4, 0x1.a88dfep-1, 0x1.f2b472p-1, -0x1.b325b6p-2, 0x1.c95cp-4, 0x1.3750d8p+0, -0x1.b0c9cap-1, 0x1.9c2d6ep-1, -0x1.f5023p-1, -0x1.8eb61cp-1, 0x1.adbd3p-1, 0x1.ee08dap-3, -0x1.69e88ap-2, -0x1.208282p-1, 0x1.61a204p-1, -0x1.83faecp+0, 0x1.a8cffp-1, 0x1.fad9f6p-2),
#               f6:(-0x1.876e74p-1, 0x1.5ed8dp-4, -0x1.0ca854p-1, 0x1.823ab8p-4, -0x1.27f688p-1, 0x1.65677ep-4, 0x1.8cb13ap+0, -0x1.94c47cp-1, 0x1.1bdbp-3, -0x1.4e4654p+0, -0x1.d6fbap-1, -0x1.cecc7ap-1, -0x1.7e6f58p-1, -0x1.04d3a6p+0, 0x1.c499d8p-2, 0x1.1d7308p-2, -0x1.38a834p-2, -0x1.4b1a32p-1, -0x1.18ece8p-1, 0x1.03997ep-3, -0x1.e8cdfap-5, 0x1.7b4228p-2, 0x1.9f7d52p+0, -0x1.bbe896p-1, -0x1.909adap-2, -0x1.9e5c5ep-1, -0x1.684d06p-3, 0x1.72871ap-5, -0x1.7bf67p-1, -0x1.0e1784p-1, -0x1.0978f2p+0, -0x1.df597ap-2, -0x1.444b92p-4, -0x1.a32554p+0, 0x1.bc77ep-1, 0x1.b7cb1ep-4, -0x1.41e7d4p-4, -0x1.20b6cap+0, -0x1.7a342ap-1, 0x1.0df4fep+0, -0x1.0548dep-2, 0x1.c765fcp-1, 0x1.98bd4p-6, -0x1.779f5cp+0, 0x1.155ccp-4, 0x1.c35cp-1, 0x1.8bd1dep+0, 0x1.3b29d6p-1)]
# {IN}  Y_N1 = [f1:(0x1.beeb3cp-1, -0x1.c38ab6p-2, -0x1.9b881cp-3, 0x1.072a52p-3, 0x1.d2da14p-2, -0x1.1da35cp-3, 0x1.d26b3cp-2, 0x1.464008p-1, 0x1.2c084p-1, -0x1.c929ep-2, -0x1.b6c47ap-1, -0x1.99c0ep-6, 0x1.b69efcp-1, 0x1.1b8e06p-2, 0x1.78b952p-2, -0x1.59adbcp-2, 0x1.811eacp-1, 0x1.a8376ep-6, -0x1.ce3934p-2, -0x1.58df1p-1, -0x1.7a3eccp-4, -0x1.5b2cc8p+0, -0x1.3009c8p-4, -0x1.99ebbp-3, -0x1.4d014ap-4, -0x1.be088p-4, -0x1.7ed22p-3, -0x1.88bb9ep-1, 0x1.d7a16p-5, -0x1.981f2ep-1, 0x1.df4eep-2, 0x1.f44538p-3, 0x1.974ccp-1, 0x1.19567ap+0, 0x1.a5b048p-1, -0x1.2027acp-3, 0x1.7d1c36p-4, -0x1.c3895p-2, 0x1.84794cp-1, -0x1.479fc8p-2, 0x1.4a0942p-4, -0x1.0a1ac6p-2, -0x1.9e2ddcp-1, 0x1.136ea6p-1, 0x1.9ddbfcp-2, 0x1.bae404p-2, 0x1.0a8adep-1, -0x1.487e4p-9),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# {OUT} Y_N2 = [f1:(0x1.372368p+0, -0x1.f4d458p-1, -0x1.373708p+1, 0x1.fe66b8p+1, -0x1.3a262p-2, 0x1.12422p+0, 0x1.6910ep-2, 0x1.426cdp+0, 0x1.eb51f8p-1, -0x1.5e9ae8p+0, -0x1.80b26p-2, 0x1.290cbep+2),
#               f2:(-0x1.cb072p+0, -0x1.11d52ep+2, 0x1.852214p+0, 0x1.04c8f4p+1, 0x1.3e6558p+1, -0x1.8fdc04p+3, -0x1.9225fcp+0, 0x1.38de48p+2, -0x1.bd24ap+0, -0x1.678388p+0, 0x1.132328p-1, -0x1.8072p-7),
#               f3:(-0x1.0e324ap+1, 0x1.06abe8p+0, 0x1.248c9p-2, -0x1.f15174p-1, -0x1.beb34p+1, 0x1.ad12p-2, 0x1.4574d6p+0, -0x1.daa332p+1, -0x1.58faep-2, 0x1.eec72cp+0, 0x1.7997cp-1, -0x1.f65f48p-1),
#               f4:(0x1.20b20cp+0, -0x1.521ddp+0, 0x1.35718p-1, -0x1.0fd04p-1, -0x1.75ef5ap+1, 0x1.af597p-1, -0x1.4b084p-2, -0x1.c222p-3, 0x1.6b1748p-1, 0x1.94c918p+1, -0x1.cceep-3, 0x1.8a136p-3),
#               f5:(0x1.cf3ap-3, -0x1.ffa66cp+0, -0x1.39eb34p+3, 0x1.10fcf4p+2, 0x1.7e1ad6p+1, -0x1.55809ap+1, -0x1.174868p+1, -0x1.6a3c5p-1, 0x1.0effb8p+2, -0x1.0b4bccp+3, -0x1.714becp-1, -0x1.9c24cp-4),
#               f6:(0x1.d9fd08p+0, -0x1.b8b708p+0, 0x1.0ba3a6p+3, -0x1.185bd4p+2, 0x1.ca8bcp+0, 0x1.16cc88p+0, 0x1.b115ep-1, -0x1.a37b14p+1, 0x1.0e3eccp+1, 0x1.76fceap+1, -0x1.cdf02cp+2, 0x1.f3025ep+1)]
# Returned status: 0
#
# Quantizer_standard::process(const float32 Y_N1[6x12], int8 Y_N2[6x12])
# {IN}  Y_N1 = [f1:(0x1.372368p+0, -0x1.f4d458p-1, -0x1.373708p+1, 0x1.fe66b8p+1, -0x1.3a262p-2, 0x1.12422p+0, 0x1.6910ep-2, 0x1.426cdp+0, 0x1.eb51f8p-1, -0x1.5e9ae8p+0, -0x1.80b26p-2, 0x1.290cbep+2),
#               f2:(-0x1.cb072p+0, -0x1.11d52ep+2, 0x1.852214p+0, 0x1.04c8f4p+1, 0x1.3e6558p+1, -0x1.8fdc04p+3, -0x1.9225fcp+0, 0x1.38de48p+2, -0x1.bd24ap+0, -0x1.678388p+0, 0x1.132328p-1, -0x1.8072p-7),
#               f3:(-0x1.0e324ap+1, 0x1.06abe8p+0, 0x1.248c9p-2, -0x1.f15174p-1, -0x1.beb34p+1, 0x1.ad12p-2, 0x1.4574d6p+0, -0x1.daa332p+1, -0x1.58faep-2, 0x1.eec72cp+0, 0x1.7997cp-1, -0x1.f65f48p-1),
#               f4:(0x1.20b20cp+0, -0x1.521ddp+0, 0x1.35718p-1, -0x1.0fd04p-1, -0x1.75ef5ap+1, 0x1.af597p-1, -0x1.4b084p-2, -0x1.c222p-3, 0x1.6b1748p-1, 0x1.94c918p+1, -0x1.cceep-3, 0x1.8a136p-3),
#               f5:(0x1.cf3ap-3, -0x1.ffa66cp+0, -0x1.39eb34p+3, 0x1.10fcf4p+2, 0x1.7e1ad6p+1, -0x1.55809ap+1, -0x1.174868p+1, -0x1.6a3c5p-1, 0x1.0effb8p+2, -0x1.0b4bccp+3, -0x1.714becp-1, -0x1.9c24cp-4),
#               f6:(0x1.d9fd08p+0, -0x1.b8b708p+0, 0x1.0ba3a6p+3, -0x1.185bd4p+2, 0x1.ca8bcp+0, 0x1.16cc88p+0, 0x1.b115ep-1, -0x1.a37b14p+1, 0x1.0e3eccp+1, 0x1.76fceap+1, -0x1.cdf02cp+2, 0x1.f3025ep+1)]
# {OUT} Y_N2 = [f1:(0xa, 0xfffffff8, 0xffffffed, 0x20, 0xfffffffe, 0x9, 0x3, 0xa, 0x8, 0xfffffff5, 0xfffffffd, 0x25),
#               f2:(0xfffffff2, 0xffffffde, 0xc, 0x10, 0x14, 0xffffff9c, 0xfffffff3, 0x27, 0xfffffff2, 0xfffffff5, 0x4, 0x0),
#               f3:(0xffffffef, 0x8, 0x2, 0xfffffff8, 0xffffffe4, 0x3, 0xa, 0xffffffe2, 0xfffffffd, 0xf, 0x6, 0xfffffff8),
#               f4:(0x9, 0xfffffff5, 0x5, 0xfffffffc, 0xffffffe9, 0x7, 0xfffffffd, 0xfffffffe, 0x6, 0x19, 0xfffffffe, 0x2),
#               f5:(0x2, 0xfffffff0, 0xffffffb2, 0x22, 0x18, 0xffffffeb, 0xffffffef, 0xfffffffa, 0x22, 0xffffffbd, 0xfffffffa, 0xffffffff),
#               f6:(0xf, 0xfffffff2, 0x43, 0xffffffdd, 0xe, 0x9, 0x7, 0xffffffe6, 0x11, 0x17, 0xffffffc6, 0x1f)]
# Returned status: 0
#
# Puncturer_NO::depuncture(const int8 Y_N1[6x12], int8 Y_N2[6x12])
# {IN}  Y_N1 = [f1:(0xa, 0xfffffff8, 0xffffffed, 0x20, 0xfffffffe, 0x9, 0x3, 0xa, 0x8, 0xfffffff5, 0xfffffffd, 0x25),
#               f2:(0xfffffff2, 0xffffffde, 0xc, 0x10, 0x14, 0xffffff9c, 0xfffffff3, 0x27, 0xfffffff2, 0xfffffff5, 0x4, 0x0),
#               f3:(0xffffffef, 0x8, 0x2, 0xfffffff8, 0xffffffe4, 0x3, 0xa, 0xffffffe2, 0xfffffffd, 0xf, 0x6, 0xfffffff8),
#               f4:(0x9, 0xfffffff5, 0x5, 0xfffffffc, 0xffffffe9, 0x7, 0xfffffffd, 0xfffffffe, 0x6, 0x19, 0xfffffffe, 0x2),
#               f5:(0x2, 0xfffffff0, 0xffffffb2, 0x22, 0x18, 0xffffffeb, 0xffffffef, 0xfffffffa, 0x22, 0xffffffbd, 0xfffffffa, 0xffffffff),
#               f6:(0xf, 0xfffffff2, 0x43, 0xffffffdd, 0xe, 0x9, 0x7, 0xffffffe6, 0x11, 0x17, 0xffffffc6, 0x1f)]
# {OUT} Y_N2 = [f1:(0xa, 0xfffffff8, 0xffffffed, 0x20, 0xfffffffe, 0x9, 0x3, 0xa, 0x8, 0xfffffff5, 0xfffffffd, 0x25),
#               f2:(0xfffffff2, 0xffffffde, 0xc, 0x10, 0x14, 0xffffff9c, 0xfffffff3, 0x27, 0xfffffff2, 0xfffffff5, 0x4, 0x0),
#               f3:(0xffffffef, 0x8, 0x2, 0xfffffff8, 0xffffffe4, 0x3, 0xa, 0xffffffe2, 0xfffffffd, 0xf, 0x6, 0xfffffff8),
#               f4:(0x9, 0xfffffff5, 0x5, 0xfffffffc, 0xffffffe9, 0x7, 0xfffffffd, 0xfffffffe, 0x6, 0x19, 0xfffffffe, 0x2),
#               f5:(0x2, 0xfffffff0, 0xffffffb2, 0x22, 0x18, 0xffffffeb, 0xffffffef, 0xfffffffa, 0x22, 0xffffffbd, 0xfffffffa, 0xffffffff),
#               f6:(0xf, 0xfffffff2, 0x43, 0xffffffdd, 0xe, 0x9, 0x7, 0xffffffe6, 0x11, 0x17, 0xffffffc6, 0x1f)]
# Returned status: 0
#
# Decoder_NO::decode_siho(const int8 Y_N[6x12], int8 V_K[6x12])
# {IN}  Y_N = [f1:(0xa, 0xfffffff8, 0xffffffed, 0x20, 0xfffffffe, 0x9, 0x3, 0xa, 0x8, 0xfffffff5, 0xfffffffd, 0x25),
#              f2:(0xfffffff2, 0xffffffde, 0xc, 0x10, 0x14, 0xffffff9c, 0xfffffff3, 0x27, 0xfffffff2, 0xfffffff5, 0x4, 0x0),
#              f3:(0xffffffef, 0x8, 0x2, 0xfffffff8, 0xffffffe4, 0x3, 0xa, 0xffffffe2, 0xfffffffd, 0xf, 0x6, 0xfffffff8),
#              f4:(0x9, 0xfffffff5, 0x5, 0xfffffffc, 0xffffffe9, 0x7, 0xfffffffd, 0xfffffffe, 0x6, 0x19, 0xfffffffe, 0x2),
#              f5:(0x2, 0xfffffff0, 0xffffffb2, 0x22, 0x18, 0xffffffeb, 0xffffffef, 0xfffffffa, 0x22, 0xffffffbd, 0xfffffffa, 0xffffffff),
#              f6:(0xf, 0xfffffff2, 0x43, 0xffffffdd, 0xe, 0x9, 0x7, 0xffffffe6, 0x11, 0x17, 0xffffffc6, 0x1f)]
# {OUT} V_K = [f1:(0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0),
#              f2:(0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0),
#              f3:(0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1),
#              f4:(0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0),
#              f5:(0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1),
#              f6:(0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0)]
# Returned status: 0
#
# CRC_NO::extract(const int8 V_K1[6x12], int8 V_K2[6x12])
# {IN}  V_K1 = [f1:(0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0),
#               f2:(0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0),
#               f3:(0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1),
#               f4:(0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0),
#               f5:(0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1),
#               f6:(0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0)]
# {OUT} V_K2 = [f1:(0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0),
#               f2:(0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0),
#               f3:(0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1),
#               f4:(0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0),
#               f5:(0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1),
#               f6:(0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0)]
# Returned status: 0
#
# Monitor_BFER::check_errors(const int8 U[6x12], const int8 V[6x12])
# {IN}  U = [f1:(0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0),
#            f2:(0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0),
#            f3:(0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1),
#            f4:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#            f5:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1),
#            f6:(0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0)]
# {IN}  V = [f1:(0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0),
#            f2:(0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0),
#            f3:(0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1),
#            f4:(0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0),
#            f5:(0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1),
#            f6:(0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0)]
# Returned status: 7
#
# -------------------------------
# New communication (nÂ°11)
# -------------------------------
#
# Source_random::generate(int8 U_K[6x12])
# {OUT} U_K = [f1:(0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0),
#              f2:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0),
#              f3:(0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0),
#              f4:(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#              f5:(0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1),
#              f6:(0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0)]
# Returned status: 0
#
# CRC_NO::build(const int8 U_K1[6x12], int8 U_K2[6x12])
# {IN}  U_K1 = [f1:(0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0),
#               f2:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0),
#               f3:(0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0),
#               f4:(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#               f5:(0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1),
#               f6:(0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0)]
# {OUT} U_K2 = [f1:(0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0),
#               f2:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0),
#               f3:(0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0),
#               f4:(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#               f5:(0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1),
#               f6:(0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0)]
# Returned status: 0
#
# Encoder_NO::encode(const int8 U_K[6x12], int8 X_N[6x12])
# {IN}  U_K = [f1:(0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0),
#              f2:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0),
#              f3:(0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0),
#              f4:(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#              f5:(0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1),
#              f6:(0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0)]
# {OUT} X_N = [f1:(0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0),
#              f2:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0),
#              f3:(0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0),
#              f4:(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#              f5:(0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1),
#              f6:(0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0)]
# Returned status: 0
#
# Puncturer_NO::puncture(const int8 X_N1[6x12], int8 X_N2[6x12])
# {IN}  X_N1 = [f1:(0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0),
#               f2:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0),
#               f3:(0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0),
#               f4:(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#               f5:(0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1),
#               f6:(0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0)]
# {OUT} X_N2 = [f1:(0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0),
#               f2:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0),
#               f3:(0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0),
#               f4:(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#               f5:(0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1),
#               f6:(0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0)]
# Returned status: 0
#
# Modem_SCMA::modulate(const int8 X_N1[6x12], float32 X_N2[6x48])
# {IN}  X_N1 = [f1:(0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0),
#               f2:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0),
#               f3:(0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0),
#               f4:(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#               f5:(0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1),
#               f6:(0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0)]
# {OUT} X_N2 = [f1:(0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0),
#               f2:(-0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0),
#               f3:(-0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3),
#               f5:(0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2),
#               f6:(0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Channel_Rayleigh_LLR::add_noise_wg(const float32 X_N[6x48], float32 H_N[6x48], float32 Y_N[6x48])
# {IN}  X_N = [f1:(0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0),
#              f2:(-0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0),
#              f3:(-0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3),
#              f5:(0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2),
#              f6:(0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0)]
# {OUT} H_N = [f1:(-0x1.1c12f8p+0, -0x1.63cd0ap-2, 0x1.316128p+0, -0x1.58cb68p-4, -0x1.714512p-1, -0x1.50191ep-1, -0x1.20f088p-3, -0x1.7eca3cp-1, -0x1.f6a7ccp-1, 0x1.94785cp-1, 0x1.cdd57ep+0, 0x1.2b837cp-1, 0x1.7f39e4p-5, -0x1.75db22p+0, 0x1.fbab9ep-2, 0x1.3637fcp-8, -0x1.9da23ep-5, -0x1.2035fap-1, 0x1.374442p-3, 0x1.2735a8p-3, 0x1.848004p-4, 0x1.ca0604p-3, -0x1.c6940ap-3, -0x1.d90b2cp-1, -0x1.265198p-2, 0x1.1cede2p-2, 0x1.1c7396p-3, -0x1.a99a34p-2, -0x1.d1518ap-3, -0x1.1c9936p-4, -0x1.beaddep-1, 0x1.1e4066p-5, 0x1.361bc6p+0, 0x1.d7cae2p-2, -0x1.a12cc4p-4, 0x1.7dce22p-1, -0x1.0b2bb2p-1, -0x1.d78ff4p-4, 0x1.b1aee6p+0, 0x1.5e681cp-2, -0x1.1542bcp-2, 0x1.6dfb72p-1, -0x1.17092p+0, 0x1.09de66p-1, -0x1.096154p-2, 0x1.222fcap-1, 0x1.50a87ap-2, 0x1.6a16eap+0),
#              f2:(-0x1.15e742p+0, -0x1.3775eep-2, -0x1.d7ca3p-2, -0x1.4908e8p-1, -0x1.e1a268p-3, -0x1.f440c6p-3, -0x1.65c58cp-3, 0x1.6e6378p-2, 0x1.eabff6p-1, 0x1.033a58p+0, 0x1.089a6ap-1, 0x1.77e8bcp-2, 0x1.209ed8p+0, -0x1.3ba39cp-5, 0x1.7319c2p-2, 0x1.8b2548p-1, -0x1.83c2bp-2, 0x1.67761cp-1, 0x1.09ec0ep-3, -0x1.187672p-1, 0x1.373622p-1, 0x1.c98684p-5, -0x1.2727d2p-2, 0x1.0172fep-1, 0x1.597074p+0, -0x1.a93a76p-6, -0x1.0175dep-1, -0x1.4c3778p-2, -0x1.8a2366p-1, 0x1.6a95p-1, -0x1.cf0ae8p-4, 0x1.b9882p-4, -0x1.a461fp-5, 0x1.e5f9f2p-3, -0x1.2cd4b6p-4, -0x1.6e4ec6p-1, -0x1.bbf74ep-1, 0x1.393978p-1, -0x1.b9a68cp-3, 0x1.44d982p-1, 0x1.0080fep+0, 0x1.05e57ap-1, -0x1.7ce9d2p-3, -0x1.6c1886p-2, -0x1.88d03ap-2, 0x1.036d7ep+0, -0x1.2d8fc6p-1, -0x1.39ddacp-2),
#              f3:(-0x1.229bbep-1, 0x1.418fbp-2, 0x1.24ed88p-2, 0x1.b03886p-1, -0x1.3c81ap-5, -0x1.a8af48p-1, -0x1.57c86ep-2, -0x1.71b03ep-9, 0x1.749d0ep-1, 0x1.968b6cp-10, -0x1.18a54cp-3, -0x1.cf524cp-1, 0x1.19564ap-4, -0x1.6418dp-3, -0x1.1e85c6p+0, -0x1.dc4c94p-3, 0x1.7fe99ap-1, 0x1.c3877p-1, 0x1.66a05ap-7, -0x1.6a181ep-2, -0x1.d8dc2cp-3, -0x1.6378e6p-2, -0x1.74e0f4p+0, 0x1.3429aep-3, 0x1.6b026cp-1, -0x1.d3a22cp-3, 0x1.427fa6p-5, 0x1.b0b164p-1, 0x1.d779bcp-7, 0x1.f63ba2p-1, -0x1.2ceeaep-3, -0x1.0ea284p+0, 0x1.5ba77cp-1, -0x1.d5a81ap-2, -0x1.ce8138p-2, 0x1.481074p-1, -0x1.0a445cp+0, 0x1.8b843cp-1, -0x1.c0cc66p-1, -0x1.33b83ap+0, -0x1.1b5f9ap-2, 0x1.d733b6p-2, 0x1.ced3cp-2, -0x1.33c324p-2, 0x1.d2889ep-2, 0x1.b104bap-2, -0x1.2130dep-1, -0x1.17016cp+0),
#              f4:(-0x1.8e8872p-3, -0x1.0d007ep-1, 0x1.feb53cp-2, -0x1.9e50d6p+0, -0x1.4d5254p-2, 0x1.18f5cep-3, 0x1.542e36p-1, -0x1.6ae066p-2, -0x1.01d934p-1, 0x1.3533e4p-1, -0x1.0d6646p-1, 0x1.06f638p-1, 0x1.25eaeap-2, -0x1.4a56ccp-2, -0x1.62133p-3, 0x1.6a8756p+0, -0x1.4b486ep-2, -0x1.47e5fcp-1, -0x1.7b6628p-5, 0x1.4ed03p+0, 0x1.640ef2p-3, 0x1.b7d91ep-4, 0x1.d1b33p-1, 0x1.c6cd5ap-4, -0x1.2adc1ap-2, -0x1.281efap+0, -0x1.e14922p-1, -0x1.32fa54p+0, -0x1.a96e7ap-1, 0x1.ed507p-2, -0x1.771e18p-2, 0x1.f453fcp-4, -0x1.c75d64p-2, -0x1.46b69ep-1, -0x1.7b98c6p-1, -0x1.225274p-2, 0x1.2b23c6p+0, -0x1.a269e8p-2, 0x1.50ef72p+0, 0x1.f2746p-1, -0x1.d5c7b6p-3, -0x1.2ca08p+0, 0x1.75e9d2p+0, -0x1.3aee34p+0, -0x1.5e347ap+0, 0x1.0bf2dep-1, 0x1.d2c0dcp-1, -0x1.2f218p-3),
#              f5:(-0x1.520ed2p-1, 0x1.443caap-3, -0x1.a90cdcp-2, 0x1.c51b92p-3, -0x1.23cfecp-1, -0x1.2f7d0ep-2, 0x1.7198ecp-4, -0x1.3f3de6p-3, 0x1.d23852p-1, 0x1.45430ap-1, -0x1.cf31e4p-1, -0x1.43bfcp-2, -0x1.187982p-1, -0x1.974da4p-3, 0x1.c67b48p-2, -0x1.344946p-3, 0x1.e5f3acp-1, -0x1.abbf8cp-1, -0x1.8dd1a8p-4, 0x1.29f604p-7, 0x1.45fd3p-4, -0x1.1fdbd6p+0, -0x1.415b4p-4, -0x1.928b82p+0, 0x1.8c11d8p+0, 0x1.bccf8ep-2, 0x1.424baap-4, -0x1.33099ep-2, 0x1.cfbc56p-2, 0x1.f6b1c4p-1, 0x1.05fe4ep-6, -0x1.024e5cp-1, 0x1.4f579ap-2, -0x1.d6c8fp-3, 0x1.efa9d2p-1, -0x1.30304ap+0, 0x1.2812fcp-1, -0x1.3f2066p+0, 0x1.818024p+0, 0x1.868c88p-1, 0x1.8d2dccp-3, 0x1.bf1c22p-1, -0x1.649b68p-4, 0x1.1bb668p-7, -0x1.097982p-2, -0x1.0f208cp+0, -0x1.b0058ep-2, 0x1.8bfb52p-2),
#              f6:(0x1.dc65c4p-2, 0x1.b03e46p-1, 0x1.dc04b6p+0, 0x1.291536p+0, -0x1.88d042p-1, 0x1.37ad0ep-1, 0x1.423678p-1, 0x1.c232dp-4, 0x1.60d87cp-1, 0x1.4d29aap-1, 0x1.7a0fd8p-2, -0x1.433ec6p-2, 0x1.80f40cp-1, 0x1.66536ap-3, -0x1.1347d4p+0, 0x1.9de4f8p-3, -0x1.0b5c72p+0, 0x1.55c17cp-2, 0x1.351f36p-1, 0x1.a4d90ep-3, -0x1.1c97d8p-1, -0x1.418c16p+0, 0x1.c20f4p-2, -0x1.05258cp-5, 0x1.361be4p-1, -0x1.2b865ap-2, -0x1.7dc8d6p-2, -0x1.d4dc76p-2, 0x1.6cb314p-2, 0x1.7d72f2p-1, -0x1.6d9534p-2, -0x1.33507ep-2, 0x1.5822f8p+0, -0x1.38932cp-1, 0x1.1f8416p-3, 0x1.3fb26ap-3, -0x1.440bd2p-2, -0x1.fdfca6p-1, -0x1.b6a6cap-1, -0x1.8549c8p-3, 0x1.1c6d72p-1, -0x1.66852p+0, -0x1.cad5bcp-4, 0x1.24f2b2p-1, -0x1.c494ap-2, -0x1.eff17ap-3, 0x1.fd8666p-2, -0x1.1f110ep-2)]
# {OUT} Y_N = [f1:(0x1.c9c8dep-2, -0x1.951f9p-1, 0x1.cff768p-8, 0x1.089cdep-3, 0x1.1f3064p-3, 0x1.a7b1e8p+0, -0x1.2c6e1p-3, 0x1.f43792p-2, 0x1.2e9c54p+0, -0x1.0e2c5p-1, -0x1.43e6d8p-1, -0x1.1cd884p-1, 0x1.2909b6p+0, -0x1.6c8a22p-3, 0x1.1dff66p-3, 0x1.46f33p-4, 0x1.877384p-4, 0x1.fc9c9cp-1, -0x1.39d1ccp-2, 0x1.9170c8p-4, -0x1.ee4bdp-1, -0x1.323278p-3, -0x1.cdf0bep-1, -0x1.2e8804p-3, 0x1.729d8cp-1, -0x1.e79fcp-4, -0x1.43834p-8, 0x1.84e21ep-3, -0x1.68317ap+0, -0x1.0f30cp-6, 0x1.c0447cp-2, -0x1.7433fcp-1, -0x1.1064p-6, -0x1.37574ep-3, 0x1.75dad4p-2, 0x1.d0f4dep-1, -0x1.27ae6p-2, -0x1.ce778ep-3, -0x1.c52b24p+0, -0x1.354d56p-2, -0x1.88a7ep-2, -0x1.80d69ep-3, 0x1.305df4p+0, 0x1.ce1454p-2, -0x1.bf21fap-2, -0x1.648f9p-3, -0x1.eecca2p-4, -0x1.23a9a6p-5),
#              f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Modem_SCMA::filter(const float32 Y_N1[6x48], float32 Y_N2[6x48])
# {IN}  Y_N1 = [f1:(0x1.c9c8dep-2, -0x1.951f9p-1, 0x1.cff768p-8, 0x1.089cdep-3, 0x1.1f3064p-3, 0x1.a7b1e8p+0, -0x1.2c6e1p-3, 0x1.f43792p-2, 0x1.2e9c54p+0, -0x1.0e2c5p-1, -0x1.43e6d8p-1, -0x1.1cd884p-1, 0x1.2909b6p+0, -0x1.6c8a22p-3, 0x1.1dff66p-3, 0x1.46f33p-4, 0x1.877384p-4, 0x1.fc9c9cp-1, -0x1.39d1ccp-2, 0x1.9170c8p-4, -0x1.ee4bdp-1, -0x1.323278p-3, -0x1.cdf0bep-1, -0x1.2e8804p-3, 0x1.729d8cp-1, -0x1.e79fcp-4, -0x1.43834p-8, 0x1.84e21ep-3, -0x1.68317ap+0, -0x1.0f30cp-6, 0x1.c0447cp-2, -0x1.7433fcp-1, -0x1.1064p-6, -0x1.37574ep-3, 0x1.75dad4p-2, 0x1.d0f4dep-1, -0x1.27ae6p-2, -0x1.ce778ep-3, -0x1.c52b24p+0, -0x1.354d56p-2, -0x1.88a7ep-2, -0x1.80d69ep-3, 0x1.305df4p+0, 0x1.ce1454p-2, -0x1.bf21fap-2, -0x1.648f9p-3, -0x1.eecca2p-4, -0x1.23a9a6p-5),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# {OUT} Y_N2 = [f1:(0x1.c9c8dep-2, -0x1.951f9p-1, 0x1.cff768p-8, 0x1.089cdep-3, 0x1.1f3064p-3, 0x1.a7b1e8p+0, -0x1.2c6e1p-3, 0x1.f43792p-2, 0x1.2e9c54p+0, -0x1.0e2c5p-1, -0x1.43e6d8p-1, -0x1.1cd884p-1, 0x1.2909b6p+0, -0x1.6c8a22p-3, 0x1.1dff66p-3, 0x1.46f33p-4, 0x1.877384p-4, 0x1.fc9c9cp-1, -0x1.39d1ccp-2, 0x1.9170c8p-4, -0x1.ee4bdp-1, -0x1.323278p-3, -0x1.cdf0bep-1, -0x1.2e8804p-3, 0x1.729d8cp-1, -0x1.e79fcp-4, -0x1.43834p-8, 0x1.84e21ep-3, -0x1.68317ap+0, -0x1.0f30cp-6, 0x1.c0447cp-2, -0x1.7433fcp-1, -0x1.1064p-6, -0x1.37574ep-3, 0x1.75dad4p-2, 0x1.d0f4dep-1, -0x1.27ae6p-2, -0x1.ce778ep-3, -0x1.c52b24p+0, -0x1.354d56p-2, -0x1.88a7ep-2, -0x1.80d69ep-3, 0x1.305df4p+0, 0x1.ce1454p-2, -0x1.bf21fap-2, -0x1.648f9p-3, -0x1.eecca2p-4, -0x1.23a9a6p-5),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Modem_SCMA::demodulate_wg(const float32 H_N[6x48], const float32 Y_N1[6x48], float32 Y_N2[6x12])
# {IN}  H_N  = [f1:(-0x1.1c12f8p+0, -0x1.63cd0ap-2, 0x1.316128p+0, -0x1.58cb68p-4, -0x1.714512p-1, -0x1.50191ep-1, -0x1.20f088p-3, -0x1.7eca3cp-1, -0x1.f6a7ccp-1, 0x1.94785cp-1, 0x1.cdd57ep+0, 0x1.2b837cp-1, 0x1.7f39e4p-5, -0x1.75db22p+0, 0x1.fbab9ep-2, 0x1.3637fcp-8, -0x1.9da23ep-5, -0x1.2035fap-1, 0x1.374442p-3, 0x1.2735a8p-3, 0x1.848004p-4, 0x1.ca0604p-3, -0x1.c6940ap-3, -0x1.d90b2cp-1, -0x1.265198p-2, 0x1.1cede2p-2, 0x1.1c7396p-3, -0x1.a99a34p-2, -0x1.d1518ap-3, -0x1.1c9936p-4, -0x1.beaddep-1, 0x1.1e4066p-5, 0x1.361bc6p+0, 0x1.d7cae2p-2, -0x1.a12cc4p-4, 0x1.7dce22p-1, -0x1.0b2bb2p-1, -0x1.d78ff4p-4, 0x1.b1aee6p+0, 0x1.5e681cp-2, -0x1.1542bcp-2, 0x1.6dfb72p-1, -0x1.17092p+0, 0x1.09de66p-1, -0x1.096154p-2, 0x1.222fcap-1, 0x1.50a87ap-2, 0x1.6a16eap+0),
#               f2:(-0x1.15e742p+0, -0x1.3775eep-2, -0x1.d7ca3p-2, -0x1.4908e8p-1, -0x1.e1a268p-3, -0x1.f440c6p-3, -0x1.65c58cp-3, 0x1.6e6378p-2, 0x1.eabff6p-1, 0x1.033a58p+0, 0x1.089a6ap-1, 0x1.77e8bcp-2, 0x1.209ed8p+0, -0x1.3ba39cp-5, 0x1.7319c2p-2, 0x1.8b2548p-1, -0x1.83c2bp-2, 0x1.67761cp-1, 0x1.09ec0ep-3, -0x1.187672p-1, 0x1.373622p-1, 0x1.c98684p-5, -0x1.2727d2p-2, 0x1.0172fep-1, 0x1.597074p+0, -0x1.a93a76p-6, -0x1.0175dep-1, -0x1.4c3778p-2, -0x1.8a2366p-1, 0x1.6a95p-1, -0x1.cf0ae8p-4, 0x1.b9882p-4, -0x1.a461fp-5, 0x1.e5f9f2p-3, -0x1.2cd4b6p-4, -0x1.6e4ec6p-1, -0x1.bbf74ep-1, 0x1.393978p-1, -0x1.b9a68cp-3, 0x1.44d982p-1, 0x1.0080fep+0, 0x1.05e57ap-1, -0x1.7ce9d2p-3, -0x1.6c1886p-2, -0x1.88d03ap-2, 0x1.036d7ep+0, -0x1.2d8fc6p-1, -0x1.39ddacp-2),
#               f3:(-0x1.229bbep-1, 0x1.418fbp-2, 0x1.24ed88p-2, 0x1.b03886p-1, -0x1.3c81ap-5, -0x1.a8af48p-1, -0x1.57c86ep-2, -0x1.71b03ep-9, 0x1.749d0ep-1, 0x1.968b6cp-10, -0x1.18a54cp-3, -0x1.cf524cp-1, 0x1.19564ap-4, -0x1.6418dp-3, -0x1.1e85c6p+0, -0x1.dc4c94p-3, 0x1.7fe99ap-1, 0x1.c3877p-1, 0x1.66a05ap-7, -0x1.6a181ep-2, -0x1.d8dc2cp-3, -0x1.6378e6p-2, -0x1.74e0f4p+0, 0x1.3429aep-3, 0x1.6b026cp-1, -0x1.d3a22cp-3, 0x1.427fa6p-5, 0x1.b0b164p-1, 0x1.d779bcp-7, 0x1.f63ba2p-1, -0x1.2ceeaep-3, -0x1.0ea284p+0, 0x1.5ba77cp-1, -0x1.d5a81ap-2, -0x1.ce8138p-2, 0x1.481074p-1, -0x1.0a445cp+0, 0x1.8b843cp-1, -0x1.c0cc66p-1, -0x1.33b83ap+0, -0x1.1b5f9ap-2, 0x1.d733b6p-2, 0x1.ced3cp-2, -0x1.33c324p-2, 0x1.d2889ep-2, 0x1.b104bap-2, -0x1.2130dep-1, -0x1.17016cp+0),
#               f4:(-0x1.8e8872p-3, -0x1.0d007ep-1, 0x1.feb53cp-2, -0x1.9e50d6p+0, -0x1.4d5254p-2, 0x1.18f5cep-3, 0x1.542e36p-1, -0x1.6ae066p-2, -0x1.01d934p-1, 0x1.3533e4p-1, -0x1.0d6646p-1, 0x1.06f638p-1, 0x1.25eaeap-2, -0x1.4a56ccp-2, -0x1.62133p-3, 0x1.6a8756p+0, -0x1.4b486ep-2, -0x1.47e5fcp-1, -0x1.7b6628p-5, 0x1.4ed03p+0, 0x1.640ef2p-3, 0x1.b7d91ep-4, 0x1.d1b33p-1, 0x1.c6cd5ap-4, -0x1.2adc1ap-2, -0x1.281efap+0, -0x1.e14922p-1, -0x1.32fa54p+0, -0x1.a96e7ap-1, 0x1.ed507p-2, -0x1.771e18p-2, 0x1.f453fcp-4, -0x1.c75d64p-2, -0x1.46b69ep-1, -0x1.7b98c6p-1, -0x1.225274p-2, 0x1.2b23c6p+0, -0x1.a269e8p-2, 0x1.50ef72p+0, 0x1.f2746p-1, -0x1.d5c7b6p-3, -0x1.2ca08p+0, 0x1.75e9d2p+0, -0x1.3aee34p+0, -0x1.5e347ap+0, 0x1.0bf2dep-1, 0x1.d2c0dcp-1, -0x1.2f218p-3),
#               f5:(-0x1.520ed2p-1, 0x1.443caap-3, -0x1.a90cdcp-2, 0x1.c51b92p-3, -0x1.23cfecp-1, -0x1.2f7d0ep-2, 0x1.7198ecp-4, -0x1.3f3de6p-3, 0x1.d23852p-1, 0x1.45430ap-1, -0x1.cf31e4p-1, -0x1.43bfcp-2, -0x1.187982p-1, -0x1.974da4p-3, 0x1.c67b48p-2, -0x1.344946p-3, 0x1.e5f3acp-1, -0x1.abbf8cp-1, -0x1.8dd1a8p-4, 0x1.29f604p-7, 0x1.45fd3p-4, -0x1.1fdbd6p+0, -0x1.415b4p-4, -0x1.928b82p+0, 0x1.8c11d8p+0, 0x1.bccf8ep-2, 0x1.424baap-4, -0x1.33099ep-2, 0x1.cfbc56p-2, 0x1.f6b1c4p-1, 0x1.05fe4ep-6, -0x1.024e5cp-1, 0x1.4f579ap-2, -0x1.d6c8fp-3, 0x1.efa9d2p-1, -0x1.30304ap+0, 0x1.2812fcp-1, -0x1.3f2066p+0, 0x1.818024p+0, 0x1.868c88p-1, 0x1.8d2dccp-3, 0x1.bf1c22p-1, -0x1.649b68p-4, 0x1.1bb668p-7, -0x1.097982p-2, -0x1.0f208cp+0, -0x1.b0058ep-2, 0x1.8bfb52p-2),
#               f6:(0x1.dc65c4p-2, 0x1.b03e46p-1, 0x1.dc04b6p+0, 0x1.291536p+0, -0x1.88d042p-1, 0x1.37ad0ep-1, 0x1.423678p-1, 0x1.c232dp-4, 0x1.60d87cp-1, 0x1.4d29aap-1, 0x1.7a0fd8p-2, -0x1.433ec6p-2, 0x1.80f40cp-1, 0x1.66536ap-3, -0x1.1347d4p+0, 0x1.9de4f8p-3, -0x1.0b5c72p+0, 0x1.55c17cp-2, 0x1.351f36p-1, 0x1.a4d90ep-3, -0x1.1c97d8p-1, -0x1.418c16p+0, 0x1.c20f4p-2, -0x1.05258cp-5, 0x1.361be4p-1, -0x1.2b865ap-2, -0x1.7dc8d6p-2, -0x1.d4dc76p-2, 0x1.6cb314p-2, 0x1.7d72f2p-1, -0x1.6d9534p-2, -0x1.33507ep-2, 0x1.5822f8p+0, -0x1.38932cp-1, 0x1.1f8416p-3, 0x1.3fb26ap-3, -0x1.440bd2p-2, -0x1.fdfca6p-1, -0x1.b6a6cap-1, -0x1.8549c8p-3, 0x1.1c6d72p-1, -0x1.66852p+0, -0x1.cad5bcp-4, 0x1.24f2b2p-1, -0x1.c494ap-2, -0x1.eff17ap-3, 0x1.fd8666p-2, -0x1.1f110ep-2)]
# {IN}  Y_N1 = [f1:(0x1.c9c8dep-2, -0x1.951f9p-1, 0x1.cff768p-8, 0x1.089cdep-3, 0x1.1f3064p-3, 0x1.a7b1e8p+0, -0x1.2c6e1p-3, 0x1.f43792p-2, 0x1.2e9c54p+0, -0x1.0e2c5p-1, -0x1.43e6d8p-1, -0x1.1cd884p-1, 0x1.2909b6p+0, -0x1.6c8a22p-3, 0x1.1dff66p-3, 0x1.46f33p-4, 0x1.877384p-4, 0x1.fc9c9cp-1, -0x1.39d1ccp-2, 0x1.9170c8p-4, -0x1.ee4bdp-1, -0x1.323278p-3, -0x1.cdf0bep-1, -0x1.2e8804p-3, 0x1.729d8cp-1, -0x1.e79fcp-4, -0x1.43834p-8, 0x1.84e21ep-3, -0x1.68317ap+0, -0x1.0f30cp-6, 0x1.c0447cp-2, -0x1.7433fcp-1, -0x1.1064p-6, -0x1.37574ep-3, 0x1.75dad4p-2, 0x1.d0f4dep-1, -0x1.27ae6p-2, -0x1.ce778ep-3, -0x1.c52b24p+0, -0x1.354d56p-2, -0x1.88a7ep-2, -0x1.80d69ep-3, 0x1.305df4p+0, 0x1.ce1454p-2, -0x1.bf21fap-2, -0x1.648f9p-3, -0x1.eecca2p-4, -0x1.23a9a6p-5),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# {OUT} Y_N2 = [f1:(-0x1.7673a4p+0, -0x1.d94704p+1, -0x1.674bp-1, 0x1.d703c4p+0, -0x1.8bbc28p-1, -0x1.9612fp-1, -0x1.1f3868p+2, -0x1.41e2d4p+0, -0x1.870f9ep+2, -0x1.20f29cp+1, -0x1.5b691ap+2, 0x1.653e2ap+3),
#               f2:(-0x1.53e97ep+2, 0x1.d3b0d8p+1, 0x1.8c9272p+3, -0x1.38a55ep+2, 0x1.430ffp+2, 0x1.d00eap+0, 0x1.1e0288p+3, -0x1.7abcb4p+1, 0x1.bcbbbp-2, -0x1.ccfb4p-1, -0x1.046344p+1, 0x1.d06e5p-1),
#               f3:(0x1.823878p+1, 0x1.0f9e68p+1, -0x1.0a5b82p+1, -0x1.05436p-1, -0x1.78c5ep+0, 0x1.f01f88p-1, -0x1.3216acp+1, -0x1.6ff64ap+0, -0x1.1a1892p+2, 0x1.41c294p+2, 0x1.5c7f68p-1, -0x1.ef2b5p-2),
#               f4:(0x1.38b7ep-1, 0x1.83f728p-1, 0x1.74a26cp+0, 0x1.7e35p+0, 0x1.e74a78p-1, -0x1.7562a8p+0, 0x1.351fdcp+1, -0x1.43587p+0, 0x1.8ea38p-1, 0x1.30ff08p+0, 0x1.177ae8p+1, 0x1.5a2b0cp-1),
#               f5:(0x1.7c126cp-1, -0x1.d6c47cp+0, -0x1.348ab4p+0, 0x1.4df3ep+2, -0x1.0bac5p+2, -0x1.7d9268p+2, -0x1.87279p+1, -0x1.38e9c2p+1, 0x1.4429ap+1, -0x1.31b25p-2, -0x1.725b78p-1, -0x1.c16508p-1),
#               f6:(-0x1.70d86p+2, 0x1.942bdap+3, -0x1.8b2b18p+0, 0x1.05959cp+1, -0x1.4c3c56p+1, 0x1.774e0cp+2, -0x1.9db52p-3, -0x1.58f52cp+1, 0x1.65954p-1, 0x1.26b7fep+1, 0x1.e64d6p-3, 0x1.61355p-2)]
# Returned status: 0
#
# Quantizer_standard::process(const float32 Y_N1[6x12], int8 Y_N2[6x12])
# {IN}  Y_N1 = [f1:(-0x1.7673a4p+0, -0x1.d94704p+1, -0x1.674bp-1, 0x1.d703c4p+0, -0x1.8bbc28p-1, -0x1.9612fp-1, -0x1.1f3868p+2, -0x1.41e2d4p+0, -0x1.870f9ep+2, -0x1.20f29cp+1, -0x1.5b691ap+2, 0x1.653e2ap+3),
#               f2:(-0x1.53e97ep+2, 0x1.d3b0d8p+1, 0x1.8c9272p+3, -0x1.38a55ep+2, 0x1.430ffp+2, 0x1.d00eap+0, 0x1.1e0288p+3, -0x1.7abcb4p+1, 0x1.bcbbbp-2, -0x1.ccfb4p-1, -0x1.046344p+1, 0x1.d06e5p-1),
#               f3:(0x1.823878p+1, 0x1.0f9e68p+1, -0x1.0a5b82p+1, -0x1.05436p-1, -0x1.78c5ep+0, 0x1.f01f88p-1, -0x1.3216acp+1, -0x1.6ff64ap+0, -0x1.1a1892p+2, 0x1.41c294p+2, 0x1.5c7f68p-1, -0x1.ef2b5p-2),
#               f4:(0x1.38b7ep-1, 0x1.83f728p-1, 0x1.74a26cp+0, 0x1.7e35p+0, 0x1.e74a78p-1, -0x1.7562a8p+0, 0x1.351fdcp+1, -0x1.43587p+0, 0x1.8ea38p-1, 0x1.30ff08p+0, 0x1.177ae8p+1, 0x1.5a2b0cp-1),
#               f5:(0x1.7c126cp-1, -0x1.d6c47cp+0, -0x1.348ab4p+0, 0x1.4df3ep+2, -0x1.0bac5p+2, -0x1.7d9268p+2, -0x1.87279p+1, -0x1.38e9c2p+1, 0x1.4429ap+1, -0x1.31b25p-2, -0x1.725b78p-1, -0x1.c16508p-1),
#               f6:(-0x1.70d86p+2, 0x1.942bdap+3, -0x1.8b2b18p+0, 0x1.05959cp+1, -0x1.4c3c56p+1, 0x1.774e0cp+2, -0x1.9db52p-3, -0x1.58f52cp+1, 0x1.65954p-1, 0x1.26b7fep+1, 0x1.e64d6p-3, 0x1.61355p-2)]
# {OUT} Y_N2 = [f1:(0xfffffff4, 0xffffffe2, 0xfffffffa, 0xf, 0xfffffffa, 0xfffffffa, 0xffffffdc, 0xfffffff6, 0xffffffcf, 0xffffffee, 0xffffffd5, 0x59),
#               f2:(0xffffffd6, 0x1d, 0x63, 0xffffffd9, 0x28, 0xf, 0x48, 0xffffffe8, 0x3, 0xfffffff9, 0xfffffff0, 0x7),
#               f3:(0x18, 0x11, 0xffffffef, 0xfffffffc, 0xfffffff4, 0x8, 0xffffffed, 0xfffffff5, 0xffffffdd, 0x28, 0x5, 0xfffffffc),
#               f4:(0x5, 0x6, 0xc, 0xc, 0x8, 0xfffffff4, 0x13, 0xfffffff6, 0x6, 0xa, 0x11, 0x5),
#               f5:(0x6, 0xfffffff1, 0xfffffff6, 0x2a, 0xffffffdf, 0xffffffd0, 0xffffffe8, 0xffffffec, 0x14, 0xfffffffe, 0xfffffffa, 0xfffffff9),
#               f6:(0xffffffd2, 0x65, 0xfffffff4, 0x10, 0xffffffeb, 0x2f, 0xfffffffe, 0xffffffea, 0x6, 0x12, 0x2, 0x3)]
# Returned status: 0
#
# Puncturer_NO::depuncture(const int8 Y_N1[6x12], int8 Y_N2[6x12])
# {IN}  Y_N1 = [f1:(0xfffffff4, 0xffffffe2, 0xfffffffa, 0xf, 0xfffffffa, 0xfffffffa, 0xffffffdc, 0xfffffff6, 0xffffffcf, 0xffffffee, 0xffffffd5, 0x59),
#               f2:(0xffffffd6, 0x1d, 0x63, 0xffffffd9, 0x28, 0xf, 0x48, 0xffffffe8, 0x3, 0xfffffff9, 0xfffffff0, 0x7),
#               f3:(0x18, 0x11, 0xffffffef, 0xfffffffc, 0xfffffff4, 0x8, 0xffffffed, 0xfffffff5, 0xffffffdd, 0x28, 0x5, 0xfffffffc),
#               f4:(0x5, 0x6, 0xc, 0xc, 0x8, 0xfffffff4, 0x13, 0xfffffff6, 0x6, 0xa, 0x11, 0x5),
#               f5:(0x6, 0xfffffff1, 0xfffffff6, 0x2a, 0xffffffdf, 0xffffffd0, 0xffffffe8, 0xffffffec, 0x14, 0xfffffffe, 0xfffffffa, 0xfffffff9),
#               f6:(0xffffffd2, 0x65, 0xfffffff4, 0x10, 0xffffffeb, 0x2f, 0xfffffffe, 0xffffffea, 0x6, 0x12, 0x2, 0x3)]
# {OUT} Y_N2 = [f1:(0xfffffff4, 0xffffffe2, 0xfffffffa, 0xf, 0xfffffffa, 0xfffffffa, 0xffffffdc, 0xfffffff6, 0xffffffcf, 0xffffffee, 0xffffffd5, 0x59),
#               f2:(0xffffffd6, 0x1d, 0x63, 0xffffffd9, 0x28, 0xf, 0x48, 0xffffffe8, 0x3, 0xfffffff9, 0xfffffff0, 0x7),
#               f3:(0x18, 0x11, 0xffffffef, 0xfffffffc, 0xfffffff4, 0x8, 0xffffffed, 0xfffffff5, 0xffffffdd, 0x28, 0x5, 0xfffffffc),
#               f4:(0x5, 0x6, 0xc, 0xc, 0x8, 0xfffffff4, 0x13, 0xfffffff6, 0x6, 0xa, 0x11, 0x5),
#               f5:(0x6, 0xfffffff1, 0xfffffff6, 0x2a, 0xffffffdf, 0xffffffd0, 0xffffffe8, 0xffffffec, 0x14, 0xfffffffe, 0xfffffffa, 0xfffffff9),
#               f6:(0xffffffd2, 0x65, 0xfffffff4, 0x10, 0xffffffeb, 0x2f, 0xfffffffe, 0xffffffea, 0x6, 0x12, 0x2, 0x3)]
# Returned status: 0
#
# Decoder_NO::decode_siho(const int8 Y_N[6x12], int8 V_K[6x12])
# {IN}  Y_N = [f1:(0xfffffff4, 0xffffffe2, 0xfffffffa, 0xf, 0xfffffffa, 0xfffffffa, 0xffffffdc, 0xfffffff6, 0xffffffcf, 0xffffffee, 0xffffffd5, 0x59),
#              f2:(0xffffffd6, 0x1d, 0x63, 0xffffffd9, 0x28, 0xf, 0x48, 0xffffffe8, 0x3, 0xfffffff9, 0xfffffff0, 0x7),
#              f3:(0x18, 0x11, 0xffffffef, 0xfffffffc, 0xfffffff4, 0x8, 0xffffffed, 0xfffffff5, 0xffffffdd, 0x28, 0x5, 0xfffffffc),
#              f4:(0x5, 0x6, 0xc, 0xc, 0x8, 0xfffffff4, 0x13, 0xfffffff6, 0x6, 0xa, 0x11, 0x5),
#              f5:(0x6, 0xfffffff1, 0xfffffff6, 0x2a, 0xffffffdf, 0xffffffd0, 0xffffffe8, 0xffffffec, 0x14, 0xfffffffe, 0xfffffffa, 0xfffffff9),
#              f6:(0xffffffd2, 0x65, 0xfffffff4, 0x10, 0xffffffeb, 0x2f, 0xfffffffe, 0xffffffea, 0x6, 0x12, 0x2, 0x3)]
# {OUT} V_K = [f1:(0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0),
#              f2:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0),
#              f3:(0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1),
#              f4:(0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#              f5:(0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1),
#              f6:(0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0)]
# Returned status: 0
#
# CRC_NO::extract(const int8 V_K1[6x12], int8 V_K2[6x12])
# {IN}  V_K1 = [f1:(0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0),
#               f2:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0),
#               f3:(0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1),
#               f4:(0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#               f5:(0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1),
#               f6:(0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0)]
# {OUT} V_K2 = [f1:(0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0),
#               f2:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0),
#               f3:(0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1),
#               f4:(0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#               f5:(0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1),
#               f6:(0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0)]
# Returned status: 0
#
# Monitor_BFER::check_errors(const int8 U[6x12], const int8 V[6x12])
# {IN}  U = [f1:(0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0),
#            f2:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0),
#            f3:(0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0),
#            f4:(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#            f5:(0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1),
#            f6:(0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0)]
# {IN}  V = [f1:(0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0),
#            f2:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0),
#            f3:(0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1),
#            f4:(0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#            f5:(0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1),
#            f6:(0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0)]
# Returned status: 3
#
# -------------------------------
# New communication (nÂ°12)
# -------------------------------
#
# Source_random::generate(int8 U_K[6x12])
# {OUT} U_K = [f1:(0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0),
#              f2:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0),
#              f3:(0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1),
#              f4:(0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0),
#              f5:(0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0),
#              f6:(0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0)]
# Returned status: 0
#
# CRC_NO::build(const int8 U_K1[6x12], int8 U_K2[6x12])
# {IN}  U_K1 = [f1:(0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0),
#               f2:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0),
#               f3:(0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1),
#               f4:(0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0),
#               f5:(0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0),
#               f6:(0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0)]
# {OUT} U_K2 = [f1:(0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0),
#               f2:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0),
#               f3:(0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1),
#               f4:(0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0),
#               f5:(0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0),
#               f6:(0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0)]
# Returned status: 0
#
# Encoder_NO::encode(const int8 U_K[6x12], int8 X_N[6x12])
# {IN}  U_K = [f1:(0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0),
#              f2:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0),
#              f3:(0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1),
#              f4:(0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0),
#              f5:(0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0),
#              f6:(0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0)]
# {OUT} X_N = [f1:(0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0),
#              f2:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0),
#              f3:(0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1),
#              f4:(0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0),
#              f5:(0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0),
#              f6:(0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0)]
# Returned status: 0
#
# Puncturer_NO::puncture(const int8 X_N1[6x12], int8 X_N2[6x12])
# {IN}  X_N1 = [f1:(0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0),
#               f2:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0),
#               f3:(0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1),
#               f4:(0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0),
#               f5:(0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0),
#               f6:(0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0)]
# {OUT} X_N2 = [f1:(0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0),
#               f2:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0),
#               f3:(0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1),
#               f4:(0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0),
#               f5:(0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0),
#               f6:(0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0)]
# Returned status: 0
#
# Modem_SCMA::modulate(const int8 X_N1[6x12], float32 X_N2[6x48])
# {IN}  X_N1 = [f1:(0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0),
#               f2:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0),
#               f3:(0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1),
#               f4:(0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0),
#               f5:(0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0),
#               f6:(0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0)]
# {OUT} X_N2 = [f1:(0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0),
#               f2:(-0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0),
#               f3:(-0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3),
#               f5:(-0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2),
#               f6:(0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Channel_Rayleigh_LLR::add_noise_wg(const float32 X_N[6x48], float32 H_N[6x48], float32 Y_N[6x48])
# {IN}  X_N = [f1:(0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0),
#              f2:(-0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0),
#              f3:(-0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3),
#              f5:(-0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2),
#              f6:(0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0)]
# {OUT} H_N = [f1:(-0x1.c9a0ep-4, 0x1.3e37d6p-1, -0x1.64c596p-1, 0x1.da8a0cp-4, -0x1.d15cd8p-4, 0x1.a6a912p-1, -0x1.84d9eap-1, 0x1.873c64p-2, 0x1.5d1dc6p-1, 0x1.fb79eep-1, -0x1.578564p+0, -0x1.1dcc52p+0, -0x1.b34772p-3, 0x1.583098p-1, -0x1.5cf292p+0, 0x1.d5fa0ep-2, 0x1.cb7e18p-7, 0x1.6e705ap-3, -0x1.f8894p-2, 0x1.ed5c6ep-2, 0x1.013b44p-2, 0x1.a343b4p-2, 0x1.916872p-1, 0x1.44b3e2p-1, -0x1.ce72ccp-2, -0x1.646864p-1, 0x1.c5dc3ap-1, -0x1.713d54p-1, 0x1.d17292p-2, -0x1.2cdcap-1, -0x1.0dcbb2p+0, -0x1.ac37dp-2, 0x1.c46626p-7, 0x1.1291bcp-1, -0x1.329a8p-1, -0x1.b5669cp-1, 0x1.3ed63ap+0, -0x1.baf34cp-1, 0x1.326b98p-4, 0x1.2e518ep-2, 0x1.f5c87ep-2, -0x1.2b3516p+0, -0x1.dc325p-1, -0x1.7fa7e2p-1, -0x1.027f3ap-2, 0x1.206f0ep+0, -0x1.80d858p-3, -0x1.1d75d6p+0),
#              f2:(0x1.e7160cp-2, 0x1.955d88p-2, 0x1.580c46p-1, 0x1.5c4076p-2, 0x1.31d91ap-6, 0x1.ffcc6cp-2, -0x1.098d56p-1, -0x1.42f04ap-3, 0x1.7ea868p-6, 0x1.32017ep-5, -0x1.ae1672p-6, 0x1.0ada8ep-1, -0x1.5417b4p-3, -0x1.847d02p-11, -0x1.9627fp-2, -0x1.4ddae6p+0, -0x1.0b6c9p-3, 0x1.39fba2p+0, 0x1.824b74p-1, 0x1.38741ep+0, -0x1.f8103p-4, 0x1.608ed2p-2, 0x1.1d9d46p-2, -0x1.957e2p-3, -0x1.ca3058p-2, -0x1.8bf1dp+0, -0x1.33fc5ap-2, -0x1.5c4b6ep-3, -0x1.dcf8d8p-1, 0x1.26ae7p-1, -0x1.623548p-2, 0x1.3b033ap-1, 0x1.fff56ep-1, 0x1.205552p+0, 0x1.ddd5cp-2, 0x1.a1431p-1, -0x1.b6a73ep-8, -0x1.02c226p-2, 0x1.09ab8ap+0, -0x1.ff4d6ap-3, 0x1.56c456p-1, 0x1.864a9ep-1, 0x1.1e9f5p+0, 0x1.3bf99p-1, 0x1.e401b8p-2, -0x1.6ee106p-1, -0x1.5d85bap-3, 0x1.03d49cp-1),
#              f3:(0x1.24d69ep-5, -0x1.f1613ap-1, 0x1.f95d78p-1, -0x1.47e622p-1, 0x1.695dd8p-1, -0x1.db86e4p-2, 0x1.7aea6cp-3, 0x1.a868a8p-2, 0x1.e55b34p-3, -0x1.67a588p-1, -0x1.7dd648p-3, -0x1.8301fap-1, -0x1.107d4ap+0, 0x1.23a17p-2, -0x1.9686b4p-2, 0x1.131538p-2, 0x1.56f3p-1, 0x1.fd5842p-1, -0x1.2bf28p-1, -0x1.96f79p-1, -0x1.9c669cp-3, -0x1.6fdb06p+0, 0x1.abd8a4p-1, -0x1.2f96acp-1, 0x1.10d132p-2, -0x1.8c7484p-5, -0x1.a4744cp-3, 0x1.147158p-1, 0x1.2cce06p-1, 0x1.087156p+0, 0x1.344f2ap-3, 0x1.fd76fcp-2, 0x1.c0d03cp-3, 0x1.768104p-1, 0x1.2efea8p-4, 0x1.260832p+0, -0x1.53ad68p-2, -0x1.ac863cp-1, 0x1.0ebdeap+0, 0x1.134312p+0, 0x1.4fbddap-2, 0x1.2458cap+0, -0x1.3cab14p-1, 0x1.580368p-2, -0x1.2188d4p-6, -0x1.3bed9ep-3, 0x1.caf66ep-1, 0x1.7c25ecp-1),
#              f4:(-0x1.77087ep-3, -0x1.cb718ep+0, 0x1.f0d89p-2, -0x1.551392p-2, -0x1.1b0376p+0, -0x1.fb7c36p-1, -0x1.5b6b84p+0, -0x1.e6ac66p-3, 0x1.c62366p-4, -0x1.2bf80ep-2, -0x1.5eec6ep-1, 0x1.d3147cp-1, -0x1.294b9ep-3, 0x1.3e672cp+0, 0x1.1926fp-2, 0x1.bf08ecp-2, 0x1.839a42p-2, -0x1.8b53b2p-7, -0x1.cc99bep-2, 0x1.182accp-2, 0x1.12a33p-1, -0x1.8faa18p-2, -0x1.3745fcp-2, 0x1.24f7cap-1, -0x1.1813a4p-2, -0x1.8a3e34p-7, -0x1.6cae4ep-1, 0x1.6442e2p-1, -0x1.8c91d6p-1, -0x1.784b2p-2, 0x1.469e98p-1, -0x1.09b9ecp-1, -0x1.34edbcp-2, -0x1.36ab24p-3, -0x1.5bc8e2p-1, -0x1.2def9p+0, -0x1.530a0ap-2, -0x1.4a1d52p-4, -0x1.e53964p-4, -0x1.17be32p+0, 0x1.b94e98p-3, -0x1.869548p-2, 0x1.1cd422p+0, 0x1.bf5a0ep-3, -0x1.9e7f8ap-3, -0x1.8be5bcp-1, -0x1.e4c304p-1, -0x1.308342p-1),
#              f5:(0x1.09f522p+0, 0x1.14312cp+0, 0x1.08c978p+0, 0x1.48e5f6p-1, 0x1.d27478p-3, 0x1.2904d4p-3, 0x1.986282p-1, 0x1.90a6ep-3, -0x1.fb09f2p-4, 0x1.45a722p-3, 0x1.f05404p-1, 0x1.cbcefp-3, -0x1.36ec92p-1, 0x1.1120c2p-4, -0x1.488e6ep-1, -0x1.342334p-1, -0x1.e84d48p-1, -0x1.9d522cp-4, -0x1.c44fc2p-8, -0x1.9054e6p-2, -0x1.910b4ep-4, -0x1.3e11d4p+0, 0x1.33ef14p-4, 0x1.cf1952p-1, 0x1.ce355ep-2, 0x1.59245ep-1, -0x1.4f069cp+0, 0x1.1bb8dep+0, 0x1.553b8cp-2, -0x1.722182p-3, -0x1.09c96ep+0, -0x1.17eb1ap+0, -0x1.98f484p+0, -0x1.5ab1bp+0, 0x1.7dcca4p+0, 0x1.562124p-1, 0x1.a5a6aep-2, -0x1.608e06p-1, 0x1.579126p-1, 0x1.30af6ap-5, -0x1.66be5ap-1, -0x1.27220cp-3, -0x1.6b57fp-1, 0x1.32d1dp+0, 0x1.1cd41ap+0, -0x1.2b7812p-1, 0x1.26c9dep-1, 0x1.ead91ap-3),
#              f6:(0x1.183bdp-2, -0x1.2578bap-1, 0x1.58e556p-2, 0x1.31db58p-2, 0x1.8b2db2p-1, -0x1.66e71cp-3, 0x1.6cf4fap-1, 0x1.d163eap-2, -0x1.3848f4p+0, 0x1.6f91b2p-3, -0x1.8099f4p-1, -0x1.18fd8ep-2, 0x1.ad50a4p-4, 0x1.3b8e3cp+0, -0x1.599f38p-1, 0x1.36be1ep-1, -0x1.b1d468p-2, 0x1.5a95aap-2, -0x1.2004cp-1, 0x1.9a7faep-1, 0x1.db8b48p-2, 0x1.64cc52p-2, 0x1.6508bcp+0, -0x1.87cc64p-2, -0x1.6a62d4p-2, -0x1.72293ap-2, 0x1.09b41ep-2, -0x1.6785dcp-2, 0x1.cd2832p-7, 0x1.23f4bcp+0, -0x1.6e9bc4p-1, 0x1.57eea8p-2, -0x1.180036p-1, 0x1.b98bdep-2, -0x1.947d74p-3, 0x1.e91a18p-3, 0x1.1453b6p+0, -0x1.5960a2p-2, 0x1.5f25f4p-3, 0x1.8b8966p-1, -0x1.950f32p-2, 0x1.820f92p-3, -0x1.b3e6f8p-2, -0x1.1b2984p-3, 0x1.52d592p+0, -0x1.762148p-2, -0x1.3a05eep-2, -0x1.798c04p-2)]
# {OUT} Y_N = [f1:(0x1.f4112ap-1, -0x1.045f9p-3, 0x1.2da5ep-5, -0x1.0c6358p-3, 0x1.db88d6p-2, 0x1.9e5136p+0, 0x1.b12f6p-2, -0x1.c50bep-1, -0x1.5d9418p-2, -0x1.e74cep-1, 0x1.ea638p-8, -0x1.2b5792p-2, 0x1.da9618p-1, 0x1.2e2c04p+0, 0x1.f9529ap-1, -0x1.10ff78p-1, 0x1.04aap-8, 0x1.3a64f4p-3, -0x1.4a70ep+0, 0x1.b0f89ap-2, 0x1.4f7c7p-1, -0x1.295bc8p-4, 0x1.ab4a5cp-1, 0x1.1ccf64p-1, 0x1.e13744p-4, 0x1.997ec4p-2, 0x1.df5d96p-2, -0x1.67f422p-2, 0x1.dc5df4p-1, -0x1.e98efp-4, -0x1.41f27ep+1, -0x1.53643ep+0, -0x1.8986d6p+0, 0x1.875b62p-1, -0x1.495102p-1, -0x1.6dfd28p-1, 0x1.36f106p-2, -0x1.7349bap-1, -0x1.27b6ap+0, -0x1.00b728p-1, 0x1.3dbe48p-2, 0x1.8b7d68p-2, 0x1.15b482p-1, 0x1.fd16fp-2, -0x1.1fd3bap-1, -0x1.36fa12p+0, -0x1.84986cp-2, 0x1.1c3bfp-1),
#              f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Modem_SCMA::filter(const float32 Y_N1[6x48], float32 Y_N2[6x48])
# {IN}  Y_N1 = [f1:(0x1.f4112ap-1, -0x1.045f9p-3, 0x1.2da5ep-5, -0x1.0c6358p-3, 0x1.db88d6p-2, 0x1.9e5136p+0, 0x1.b12f6p-2, -0x1.c50bep-1, -0x1.5d9418p-2, -0x1.e74cep-1, 0x1.ea638p-8, -0x1.2b5792p-2, 0x1.da9618p-1, 0x1.2e2c04p+0, 0x1.f9529ap-1, -0x1.10ff78p-1, 0x1.04aap-8, 0x1.3a64f4p-3, -0x1.4a70ep+0, 0x1.b0f89ap-2, 0x1.4f7c7p-1, -0x1.295bc8p-4, 0x1.ab4a5cp-1, 0x1.1ccf64p-1, 0x1.e13744p-4, 0x1.997ec4p-2, 0x1.df5d96p-2, -0x1.67f422p-2, 0x1.dc5df4p-1, -0x1.e98efp-4, -0x1.41f27ep+1, -0x1.53643ep+0, -0x1.8986d6p+0, 0x1.875b62p-1, -0x1.495102p-1, -0x1.6dfd28p-1, 0x1.36f106p-2, -0x1.7349bap-1, -0x1.27b6ap+0, -0x1.00b728p-1, 0x1.3dbe48p-2, 0x1.8b7d68p-2, 0x1.15b482p-1, 0x1.fd16fp-2, -0x1.1fd3bap-1, -0x1.36fa12p+0, -0x1.84986cp-2, 0x1.1c3bfp-1),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# {OUT} Y_N2 = [f1:(0x1.f4112ap-1, -0x1.045f9p-3, 0x1.2da5ep-5, -0x1.0c6358p-3, 0x1.db88d6p-2, 0x1.9e5136p+0, 0x1.b12f6p-2, -0x1.c50bep-1, -0x1.5d9418p-2, -0x1.e74cep-1, 0x1.ea638p-8, -0x1.2b5792p-2, 0x1.da9618p-1, 0x1.2e2c04p+0, 0x1.f9529ap-1, -0x1.10ff78p-1, 0x1.04aap-8, 0x1.3a64f4p-3, -0x1.4a70ep+0, 0x1.b0f89ap-2, 0x1.4f7c7p-1, -0x1.295bc8p-4, 0x1.ab4a5cp-1, 0x1.1ccf64p-1, 0x1.e13744p-4, 0x1.997ec4p-2, 0x1.df5d96p-2, -0x1.67f422p-2, 0x1.dc5df4p-1, -0x1.e98efp-4, -0x1.41f27ep+1, -0x1.53643ep+0, -0x1.8986d6p+0, 0x1.875b62p-1, -0x1.495102p-1, -0x1.6dfd28p-1, 0x1.36f106p-2, -0x1.7349bap-1, -0x1.27b6ap+0, -0x1.00b728p-1, 0x1.3dbe48p-2, 0x1.8b7d68p-2, 0x1.15b482p-1, 0x1.fd16fp-2, -0x1.1fd3bap-1, -0x1.36fa12p+0, -0x1.84986cp-2, 0x1.1c3bfp-1),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Modem_SCMA::demodulate_wg(const float32 H_N[6x48], const float32 Y_N1[6x48], float32 Y_N2[6x12])
# {IN}  H_N  = [f1:(-0x1.c9a0ep-4, 0x1.3e37d6p-1, -0x1.64c596p-1, 0x1.da8a0cp-4, -0x1.d15cd8p-4, 0x1.a6a912p-1, -0x1.84d9eap-1, 0x1.873c64p-2, 0x1.5d1dc6p-1, 0x1.fb79eep-1, -0x1.578564p+0, -0x1.1dcc52p+0, -0x1.b34772p-3, 0x1.583098p-1, -0x1.5cf292p+0, 0x1.d5fa0ep-2, 0x1.cb7e18p-7, 0x1.6e705ap-3, -0x1.f8894p-2, 0x1.ed5c6ep-2, 0x1.013b44p-2, 0x1.a343b4p-2, 0x1.916872p-1, 0x1.44b3e2p-1, -0x1.ce72ccp-2, -0x1.646864p-1, 0x1.c5dc3ap-1, -0x1.713d54p-1, 0x1.d17292p-2, -0x1.2cdcap-1, -0x1.0dcbb2p+0, -0x1.ac37dp-2, 0x1.c46626p-7, 0x1.1291bcp-1, -0x1.329a8p-1, -0x1.b5669cp-1, 0x1.3ed63ap+0, -0x1.baf34cp-1, 0x1.326b98p-4, 0x1.2e518ep-2, 0x1.f5c87ep-2, -0x1.2b3516p+0, -0x1.dc325p-1, -0x1.7fa7e2p-1, -0x1.027f3ap-2, 0x1.206f0ep+0, -0x1.80d858p-3, -0x1.1d75d6p+0),
#               f2:(0x1.e7160cp-2, 0x1.955d88p-2, 0x1.580c46p-1, 0x1.5c4076p-2, 0x1.31d91ap-6, 0x1.ffcc6cp-2, -0x1.098d56p-1, -0x1.42f04ap-3, 0x1.7ea868p-6, 0x1.32017ep-5, -0x1.ae1672p-6, 0x1.0ada8ep-1, -0x1.5417b4p-3, -0x1.847d02p-11, -0x1.9627fp-2, -0x1.4ddae6p+0, -0x1.0b6c9p-3, 0x1.39fba2p+0, 0x1.824b74p-1, 0x1.38741ep+0, -0x1.f8103p-4, 0x1.608ed2p-2, 0x1.1d9d46p-2, -0x1.957e2p-3, -0x1.ca3058p-2, -0x1.8bf1dp+0, -0x1.33fc5ap-2, -0x1.5c4b6ep-3, -0x1.dcf8d8p-1, 0x1.26ae7p-1, -0x1.623548p-2, 0x1.3b033ap-1, 0x1.fff56ep-1, 0x1.205552p+0, 0x1.ddd5cp-2, 0x1.a1431p-1, -0x1.b6a73ep-8, -0x1.02c226p-2, 0x1.09ab8ap+0, -0x1.ff4d6ap-3, 0x1.56c456p-1, 0x1.864a9ep-1, 0x1.1e9f5p+0, 0x1.3bf99p-1, 0x1.e401b8p-2, -0x1.6ee106p-1, -0x1.5d85bap-3, 0x1.03d49cp-1),
#               f3:(0x1.24d69ep-5, -0x1.f1613ap-1, 0x1.f95d78p-1, -0x1.47e622p-1, 0x1.695dd8p-1, -0x1.db86e4p-2, 0x1.7aea6cp-3, 0x1.a868a8p-2, 0x1.e55b34p-3, -0x1.67a588p-1, -0x1.7dd648p-3, -0x1.8301fap-1, -0x1.107d4ap+0, 0x1.23a17p-2, -0x1.9686b4p-2, 0x1.131538p-2, 0x1.56f3p-1, 0x1.fd5842p-1, -0x1.2bf28p-1, -0x1.96f79p-1, -0x1.9c669cp-3, -0x1.6fdb06p+0, 0x1.abd8a4p-1, -0x1.2f96acp-1, 0x1.10d132p-2, -0x1.8c7484p-5, -0x1.a4744cp-3, 0x1.147158p-1, 0x1.2cce06p-1, 0x1.087156p+0, 0x1.344f2ap-3, 0x1.fd76fcp-2, 0x1.c0d03cp-3, 0x1.768104p-1, 0x1.2efea8p-4, 0x1.260832p+0, -0x1.53ad68p-2, -0x1.ac863cp-1, 0x1.0ebdeap+0, 0x1.134312p+0, 0x1.4fbddap-2, 0x1.2458cap+0, -0x1.3cab14p-1, 0x1.580368p-2, -0x1.2188d4p-6, -0x1.3bed9ep-3, 0x1.caf66ep-1, 0x1.7c25ecp-1),
#               f4:(-0x1.77087ep-3, -0x1.cb718ep+0, 0x1.f0d89p-2, -0x1.551392p-2, -0x1.1b0376p+0, -0x1.fb7c36p-1, -0x1.5b6b84p+0, -0x1.e6ac66p-3, 0x1.c62366p-4, -0x1.2bf80ep-2, -0x1.5eec6ep-1, 0x1.d3147cp-1, -0x1.294b9ep-3, 0x1.3e672cp+0, 0x1.1926fp-2, 0x1.bf08ecp-2, 0x1.839a42p-2, -0x1.8b53b2p-7, -0x1.cc99bep-2, 0x1.182accp-2, 0x1.12a33p-1, -0x1.8faa18p-2, -0x1.3745fcp-2, 0x1.24f7cap-1, -0x1.1813a4p-2, -0x1.8a3e34p-7, -0x1.6cae4ep-1, 0x1.6442e2p-1, -0x1.8c91d6p-1, -0x1.784b2p-2, 0x1.469e98p-1, -0x1.09b9ecp-1, -0x1.34edbcp-2, -0x1.36ab24p-3, -0x1.5bc8e2p-1, -0x1.2def9p+0, -0x1.530a0ap-2, -0x1.4a1d52p-4, -0x1.e53964p-4, -0x1.17be32p+0, 0x1.b94e98p-3, -0x1.869548p-2, 0x1.1cd422p+0, 0x1.bf5a0ep-3, -0x1.9e7f8ap-3, -0x1.8be5bcp-1, -0x1.e4c304p-1, -0x1.308342p-1),
#               f5:(0x1.09f522p+0, 0x1.14312cp+0, 0x1.08c978p+0, 0x1.48e5f6p-1, 0x1.d27478p-3, 0x1.2904d4p-3, 0x1.986282p-1, 0x1.90a6ep-3, -0x1.fb09f2p-4, 0x1.45a722p-3, 0x1.f05404p-1, 0x1.cbcefp-3, -0x1.36ec92p-1, 0x1.1120c2p-4, -0x1.488e6ep-1, -0x1.342334p-1, -0x1.e84d48p-1, -0x1.9d522cp-4, -0x1.c44fc2p-8, -0x1.9054e6p-2, -0x1.910b4ep-4, -0x1.3e11d4p+0, 0x1.33ef14p-4, 0x1.cf1952p-1, 0x1.ce355ep-2, 0x1.59245ep-1, -0x1.4f069cp+0, 0x1.1bb8dep+0, 0x1.553b8cp-2, -0x1.722182p-3, -0x1.09c96ep+0, -0x1.17eb1ap+0, -0x1.98f484p+0, -0x1.5ab1bp+0, 0x1.7dcca4p+0, 0x1.562124p-1, 0x1.a5a6aep-2, -0x1.608e06p-1, 0x1.579126p-1, 0x1.30af6ap-5, -0x1.66be5ap-1, -0x1.27220cp-3, -0x1.6b57fp-1, 0x1.32d1dp+0, 0x1.1cd41ap+0, -0x1.2b7812p-1, 0x1.26c9dep-1, 0x1.ead91ap-3),
#               f6:(0x1.183bdp-2, -0x1.2578bap-1, 0x1.58e556p-2, 0x1.31db58p-2, 0x1.8b2db2p-1, -0x1.66e71cp-3, 0x1.6cf4fap-1, 0x1.d163eap-2, -0x1.3848f4p+0, 0x1.6f91b2p-3, -0x1.8099f4p-1, -0x1.18fd8ep-2, 0x1.ad50a4p-4, 0x1.3b8e3cp+0, -0x1.599f38p-1, 0x1.36be1ep-1, -0x1.b1d468p-2, 0x1.5a95aap-2, -0x1.2004cp-1, 0x1.9a7faep-1, 0x1.db8b48p-2, 0x1.64cc52p-2, 0x1.6508bcp+0, -0x1.87cc64p-2, -0x1.6a62d4p-2, -0x1.72293ap-2, 0x1.09b41ep-2, -0x1.6785dcp-2, 0x1.cd2832p-7, 0x1.23f4bcp+0, -0x1.6e9bc4p-1, 0x1.57eea8p-2, -0x1.180036p-1, 0x1.b98bdep-2, -0x1.947d74p-3, 0x1.e91a18p-3, 0x1.1453b6p+0, -0x1.5960a2p-2, 0x1.5f25f4p-3, 0x1.8b8966p-1, -0x1.950f32p-2, 0x1.820f92p-3, -0x1.b3e6f8p-2, -0x1.1b2984p-3, 0x1.52d592p+0, -0x1.762148p-2, -0x1.3a05eep-2, -0x1.798c04p-2)]
# {IN}  Y_N1 = [f1:(0x1.f4112ap-1, -0x1.045f9p-3, 0x1.2da5ep-5, -0x1.0c6358p-3, 0x1.db88d6p-2, 0x1.9e5136p+0, 0x1.b12f6p-2, -0x1.c50bep-1, -0x1.5d9418p-2, -0x1.e74cep-1, 0x1.ea638p-8, -0x1.2b5792p-2, 0x1.da9618p-1, 0x1.2e2c04p+0, 0x1.f9529ap-1, -0x1.10ff78p-1, 0x1.04aap-8, 0x1.3a64f4p-3, -0x1.4a70ep+0, 0x1.b0f89ap-2, 0x1.4f7c7p-1, -0x1.295bc8p-4, 0x1.ab4a5cp-1, 0x1.1ccf64p-1, 0x1.e13744p-4, 0x1.997ec4p-2, 0x1.df5d96p-2, -0x1.67f422p-2, 0x1.dc5df4p-1, -0x1.e98efp-4, -0x1.41f27ep+1, -0x1.53643ep+0, -0x1.8986d6p+0, 0x1.875b62p-1, -0x1.495102p-1, -0x1.6dfd28p-1, 0x1.36f106p-2, -0x1.7349bap-1, -0x1.27b6ap+0, -0x1.00b728p-1, 0x1.3dbe48p-2, 0x1.8b7d68p-2, 0x1.15b482p-1, 0x1.fd16fp-2, -0x1.1fd3bap-1, -0x1.36fa12p+0, -0x1.84986cp-2, 0x1.1c3bfp-1),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# {OUT} Y_N2 = [f1:(-0x1.81418p+1, -0x1.b9fe5cp-1, -0x1.ef6c6ep+2, -0x1.8cbcd6p+3, 0x1.7a18c6p+1, 0x1.cfc8cp-2, 0x1.a9da6ep+3, 0x1.7d706p+0, -0x1.1c7ee2p+1, -0x1.d4c62p+1, -0x1.4d8fecp+2, 0x1.a4b46ap+1),
#               f2:(0x1.c9dc6p-2, -0x1.125f7ep+1, -0x1.21cf3p-2, 0x1.fa82p-4, -0x1.51a7p-6, 0x1.49f99p-2, -0x1.28f3eap+3, 0x1.7e1cep+2, -0x1.e276b6p+1, 0x1.1143p-1, -0x1.f96548p-1, 0x1.b2056ep+1),
#               f3:(0x1.0df36p+2, 0x1.30e39ap+2, -0x1.a28e18p+2, -0x1.c435c6p+1, -0x1.232b4cp+2, 0x1.68342ap+2, -0x1.b00b4p-2, 0x1.92ebp-6, 0x1.4c7284p+0, -0x1.29a5cap+2, -0x1.9c3bd8p-1, -0x1.729fa4p+1),
#               f4:(-0x1.6deeecp+3, -0x1.f04b4ep+3, 0x1.e1c16ap+1, 0x1.1e7e6p-1, 0x1.d3701p-1, 0x1.c35784p+0, -0x1.3aaffcp+1, 0x1.7f9b64p+2, -0x1.0c95c2p+2, 0x1.284ccp+3, 0x1.a9c9fp+1, 0x1.143f2p+2),
#               f5:(-0x1.680b7ap+1, 0x1.db8f04p+2, 0x1.decc7p-2, -0x1.c832p-1, -0x1.dc4058p-1, -0x1.23a42p-2, -0x1.dd2e94p+3, -0x1.947efep+2, -0x1.d1ee7cp+2, 0x1.5d58eep+4, 0x1.8c060cp+0, 0x1.5ef4dcp+0),
#               f6:(0x1.59a2ap+0, -0x1.a58f16p+1, -0x1.f883a4p+1, 0x1.19518ap+3, 0x1.6ece0cp+0, 0x1.450788p+1, 0x1.95a024p+0, 0x1.132ecp+0, -0x1.cfd7eap+0, 0x1.6893dcp+2, -0x1.a99d48p+0, 0x1.aa4f44p+1)]
# Returned status: 0
#
# Quantizer_standard::process(const float32 Y_N1[6x12], int8 Y_N2[6x12])
# {IN}  Y_N1 = [f1:(-0x1.81418p+1, -0x1.b9fe5cp-1, -0x1.ef6c6ep+2, -0x1.8cbcd6p+3, 0x1.7a18c6p+1, 0x1.cfc8cp-2, 0x1.a9da6ep+3, 0x1.7d706p+0, -0x1.1c7ee2p+1, -0x1.d4c62p+1, -0x1.4d8fecp+2, 0x1.a4b46ap+1),
#               f2:(0x1.c9dc6p-2, -0x1.125f7ep+1, -0x1.21cf3p-2, 0x1.fa82p-4, -0x1.51a7p-6, 0x1.49f99p-2, -0x1.28f3eap+3, 0x1.7e1cep+2, -0x1.e276b6p+1, 0x1.1143p-1, -0x1.f96548p-1, 0x1.b2056ep+1),
#               f3:(0x1.0df36p+2, 0x1.30e39ap+2, -0x1.a28e18p+2, -0x1.c435c6p+1, -0x1.232b4cp+2, 0x1.68342ap+2, -0x1.b00b4p-2, 0x1.92ebp-6, 0x1.4c7284p+0, -0x1.29a5cap+2, -0x1.9c3bd8p-1, -0x1.729fa4p+1),
#               f4:(-0x1.6deeecp+3, -0x1.f04b4ep+3, 0x1.e1c16ap+1, 0x1.1e7e6p-1, 0x1.d3701p-1, 0x1.c35784p+0, -0x1.3aaffcp+1, 0x1.7f9b64p+2, -0x1.0c95c2p+2, 0x1.284ccp+3, 0x1.a9c9fp+1, 0x1.143f2p+2),
#               f5:(-0x1.680b7ap+1, 0x1.db8f04p+2, 0x1.decc7p-2, -0x1.c832p-1, -0x1.dc4058p-1, -0x1.23a42p-2, -0x1.dd2e94p+3, -0x1.947efep+2, -0x1.d1ee7cp+2, 0x1.5d58eep+4, 0x1.8c060cp+0, 0x1.5ef4dcp+0),
#               f6:(0x1.59a2ap+0, -0x1.a58f16p+1, -0x1.f883a4p+1, 0x1.19518ap+3, 0x1.6ece0cp+0, 0x1.450788p+1, 0x1.95a024p+0, 0x1.132ecp+0, -0x1.cfd7eap+0, 0x1.6893dcp+2, -0x1.a99d48p+0, 0x1.aa4f44p+1)]
# {OUT} Y_N2 = [f1:(0xffffffe8, 0xfffffff9, 0xffffffc2, 0xffffff9d, 0x18, 0x4, 0x6a, 0xc, 0xffffffee, 0xffffffe3, 0xffffffd6, 0x1a),
#               f2:(0x4, 0xffffffef, 0xfffffffe, 0x1, 0x0, 0x3, 0xffffffb6, 0x30, 0xffffffe2, 0x4, 0xfffffff8, 0x1b),
#               f3:(0x22, 0x26, 0xffffffcc, 0xffffffe4, 0xffffffdc, 0x2d, 0xfffffffd, 0x0, 0xa, 0xffffffdb, 0xfffffffa, 0xffffffe9),
#               f4:(0xffffffa5, 0xffffff84, 0x1e, 0x4, 0x7, 0xe, 0xffffffec, 0x30, 0xffffffde, 0x4a, 0x1b, 0x23),
#               f5:(0xffffffe9, 0x3b, 0x4, 0xfffffff9, 0xfffffff9, 0xfffffffe, 0xffffff89, 0xffffffcd, 0xffffffc6, 0x7f, 0xc, 0xb),
#               f6:(0xb, 0xffffffe6, 0xffffffe0, 0x46, 0xb, 0x14, 0xd, 0x9, 0xfffffff2, 0x2d, 0xfffffff3, 0x1b)]
# Returned status: 0
#
# Puncturer_NO::depuncture(const int8 Y_N1[6x12], int8 Y_N2[6x12])
# {IN}  Y_N1 = [f1:(0xffffffe8, 0xfffffff9, 0xffffffc2, 0xffffff9d, 0x18, 0x4, 0x6a, 0xc, 0xffffffee, 0xffffffe3, 0xffffffd6, 0x1a),
#               f2:(0x4, 0xffffffef, 0xfffffffe, 0x1, 0x0, 0x3, 0xffffffb6, 0x30, 0xffffffe2, 0x4, 0xfffffff8, 0x1b),
#               f3:(0x22, 0x26, 0xffffffcc, 0xffffffe4, 0xffffffdc, 0x2d, 0xfffffffd, 0x0, 0xa, 0xffffffdb, 0xfffffffa, 0xffffffe9),
#               f4:(0xffffffa5, 0xffffff84, 0x1e, 0x4, 0x7, 0xe, 0xffffffec, 0x30, 0xffffffde, 0x4a, 0x1b, 0x23),
#               f5:(0xffffffe9, 0x3b, 0x4, 0xfffffff9, 0xfffffff9, 0xfffffffe, 0xffffff89, 0xffffffcd, 0xffffffc6, 0x7f, 0xc, 0xb),
#               f6:(0xb, 0xffffffe6, 0xffffffe0, 0x46, 0xb, 0x14, 0xd, 0x9, 0xfffffff2, 0x2d, 0xfffffff3, 0x1b)]
# {OUT} Y_N2 = [f1:(0xffffffe8, 0xfffffff9, 0xffffffc2, 0xffffff9d, 0x18, 0x4, 0x6a, 0xc, 0xffffffee, 0xffffffe3, 0xffffffd6, 0x1a),
#               f2:(0x4, 0xffffffef, 0xfffffffe, 0x1, 0x0, 0x3, 0xffffffb6, 0x30, 0xffffffe2, 0x4, 0xfffffff8, 0x1b),
#               f3:(0x22, 0x26, 0xffffffcc, 0xffffffe4, 0xffffffdc, 0x2d, 0xfffffffd, 0x0, 0xa, 0xffffffdb, 0xfffffffa, 0xffffffe9),
#               f4:(0xffffffa5, 0xffffff84, 0x1e, 0x4, 0x7, 0xe, 0xffffffec, 0x30, 0xffffffde, 0x4a, 0x1b, 0x23),
#               f5:(0xffffffe9, 0x3b, 0x4, 0xfffffff9, 0xfffffff9, 0xfffffffe, 0xffffff89, 0xffffffcd, 0xffffffc6, 0x7f, 0xc, 0xb),
#               f6:(0xb, 0xffffffe6, 0xffffffe0, 0x46, 0xb, 0x14, 0xd, 0x9, 0xfffffff2, 0x2d, 0xfffffff3, 0x1b)]
# Returned status: 0
#
# Decoder_NO::decode_siho(const int8 Y_N[6x12], int8 V_K[6x12])
# {IN}  Y_N = [f1:(0xffffffe8, 0xfffffff9, 0xffffffc2, 0xffffff9d, 0x18, 0x4, 0x6a, 0xc, 0xffffffee, 0xffffffe3, 0xffffffd6, 0x1a),
#              f2:(0x4, 0xffffffef, 0xfffffffe, 0x1, 0x0, 0x3, 0xffffffb6, 0x30, 0xffffffe2, 0x4, 0xfffffff8, 0x1b),
#              f3:(0x22, 0x26, 0xffffffcc, 0xffffffe4, 0xffffffdc, 0x2d, 0xfffffffd, 0x0, 0xa, 0xffffffdb, 0xfffffffa, 0xffffffe9),
#              f4:(0xffffffa5, 0xffffff84, 0x1e, 0x4, 0x7, 0xe, 0xffffffec, 0x30, 0xffffffde, 0x4a, 0x1b, 0x23),
#              f5:(0xffffffe9, 0x3b, 0x4, 0xfffffff9, 0xfffffff9, 0xfffffffe, 0xffffff89, 0xffffffcd, 0xffffffc6, 0x7f, 0xc, 0xb),
#              f6:(0xb, 0xffffffe6, 0xffffffe0, 0x46, 0xb, 0x14, 0xd, 0x9, 0xfffffff2, 0x2d, 0xfffffff3, 0x1b)]
# {OUT} V_K = [f1:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0),
#              f2:(0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0),
#              f3:(0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1),
#              f4:(0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0),
#              f5:(0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0),
#              f6:(0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0)]
# Returned status: 0
#
# CRC_NO::extract(const int8 V_K1[6x12], int8 V_K2[6x12])
# {IN}  V_K1 = [f1:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0),
#               f2:(0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0),
#               f3:(0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1),
#               f4:(0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0),
#               f5:(0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0),
#               f6:(0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0)]
# {OUT} V_K2 = [f1:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0),
#               f2:(0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0),
#               f3:(0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1),
#               f4:(0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0),
#               f5:(0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0),
#               f6:(0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0)]
# Returned status: 0
#
# Monitor_BFER::check_errors(const int8 U[6x12], const int8 V[6x12])
# {IN}  U = [f1:(0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0),
#            f2:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0),
#            f3:(0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1),
#            f4:(0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0),
#            f5:(0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0),
#            f6:(0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0)]
# {IN}  V = [f1:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0),
#            f2:(0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0),
#            f3:(0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1),
#            f4:(0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0),
#            f5:(0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0),
#            f6:(0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0)]
# Returned status: 9
#
# -------------------------------
# New communication (nÂ°13)
# -------------------------------
#
# Source_random::generate(int8 U_K[6x12])
# {OUT} U_K = [f1:(0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0),
#              f2:(0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0),
#              f3:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0),
#              f4:(0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0),
#              f5:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1),
#              f6:(0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0)]
# Returned status: 0
#
# CRC_NO::build(const int8 U_K1[6x12], int8 U_K2[6x12])
# {IN}  U_K1 = [f1:(0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0),
#               f2:(0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0),
#               f3:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0),
#               f4:(0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0),
#               f5:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1),
#               f6:(0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0)]
# {OUT} U_K2 = [f1:(0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0),
#               f2:(0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0),
#               f3:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0),
#               f4:(0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0),
#               f5:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1),
#               f6:(0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0)]
# Returned status: 0
#
# Encoder_NO::encode(const int8 U_K[6x12], int8 X_N[6x12])
# {IN}  U_K = [f1:(0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0),
#              f2:(0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0),
#              f3:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0),
#              f4:(0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0),
#              f5:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1),
#              f6:(0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0)]
# {OUT} X_N = [f1:(0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0),
#              f2:(0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0),
#              f3:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0),
#              f4:(0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0),
#              f5:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1),
#              f6:(0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0)]
# Returned status: 0
#
# Puncturer_NO::puncture(const int8 X_N1[6x12], int8 X_N2[6x12])
# {IN}  X_N1 = [f1:(0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0),
#               f2:(0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0),
#               f3:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0),
#               f4:(0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0),
#               f5:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1),
#               f6:(0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0)]
# {OUT} X_N2 = [f1:(0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0),
#               f2:(0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0),
#               f3:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0),
#               f4:(0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0),
#               f5:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1),
#               f6:(0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0)]
# Returned status: 0
#
# Modem_SCMA::modulate(const int8 X_N1[6x12], float32 X_N2[6x48])
# {IN}  X_N1 = [f1:(0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0),
#               f2:(0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0),
#               f3:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0),
#               f4:(0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0),
#               f5:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1),
#               f6:(0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0)]
# {OUT} X_N2 = [f1:(0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0),
#               f2:(-0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0),
#               f3:(0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1),
#               f5:(0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2),
#               f6:(0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Channel_Rayleigh_LLR::add_noise_wg(const float32 X_N[6x48], float32 H_N[6x48], float32 Y_N[6x48])
# {IN}  X_N = [f1:(0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0),
#              f2:(-0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0),
#              f3:(0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1),
#              f5:(0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2),
#              f6:(0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0)]
# {OUT} H_N = [f1:(-0x1.33b926p-1, -0x1.68e6b6p-1, 0x1.2379fcp+0, -0x1.13f5ep+0, -0x1.752c5p-1, 0x1.2b4dp-2, -0x1.57cddcp-2, 0x1.3682fp+0, -0x1.31ef9p-2, -0x1.3a17bap-1, 0x1.8bf326p-1, 0x1.caf2a4p-8, 0x1.a8bc86p-5, -0x1.9d0d9p-1, 0x1.6c43f6p-5, -0x1.51aef8p-1, 0x1.5bd8d4p-1, 0x1.7ef948p+0, -0x1.92ff52p-1, -0x1.9a03ecp-2, 0x1.ad955ep-2, 0x1.e510c4p-1, -0x1.ebe2fcp-3, 0x1.fe7ea4p-2, 0x1.75e8dp-1, -0x1.53242cp-2, -0x1.449216p+0, -0x1.190276p+0, 0x1.269296p+0, -0x1.802c6cp-3, 0x1.8811b2p-3, 0x1.a7c348p-3, 0x1.75b69p-2, -0x1.c7e106p-1, -0x1.df0ccep-6, -0x1.99abbep-2, 0x1.ac4c9ap-4, -0x1.3360b6p-5, -0x1.9423fp-1, -0x1.370c28p-3, -0x1.31712p-1, 0x1.f36b78p-1, -0x1.01486p-4, -0x1.bdb13ap-2, -0x1.3f4e2cp+0, -0x1.0b3e38p-4, -0x1.8f8504p+0, 0x1.70c31p-2),
#              f2:(0x1.07e0ecp-2, 0x1.8d6e0ap-1, -0x1.6e481ap-4, -0x1.dbf47ep-1, -0x1.abd4f6p-3, -0x1.260948p-4, -0x1.90187p-1, 0x1.c9638ep-2, -0x1.e7c5b8p-3, 0x1.5f489ap-2, -0x1.2f0ep-3, 0x1.38816p-9, -0x1.b507e8p-1, -0x1.c2b12ap-4, -0x1.ad000ep-2, -0x1.9ea80ap-5, -0x1.5ep-2, -0x1.197faap-3, -0x1.2ff502p+0, 0x1.16bf02p-1, 0x1.310e56p-7, -0x1.5cd124p-1, -0x1.63d3a8p-1, -0x1.4796a2p-1, -0x1.6ef588p+0, -0x1.420fcap-1, -0x1.314866p+0, -0x1.4c08bep-1, 0x1.43674cp-1, -0x1.7f071ap-1, -0x1.aa5cf8p-1, -0x1.a1fda6p-4, 0x1.1120aap+0, -0x1.480498p-3, -0x1.13e396p-1, -0x1.f4bc7p-2, -0x1.54715cp-1, -0x1.ba22f2p-3, 0x1.71f456p-2, -0x1.0e107p-3, 0x1.46f29p-3, 0x1.136456p-2, -0x1.ea8ccp-3, -0x1.66862ep-1, -0x1.d1bb6ap-2, -0x1.389d44p-1, 0x1.0f4608p-2, 0x1.df3a62p-4),
#              f3:(0x1.8bb43ap-1, -0x1.82bc08p-2, -0x1.2fc0aap-1, -0x1.03908p-1, -0x1.80aa4p-5, 0x1.2a26eap-3, -0x1.5a65fep-1, 0x1.bdb2c2p-2, 0x1.d5f45ap-4, 0x1.78a94cp-3, -0x1.fc32d4p-7, -0x1.027a2cp+0, 0x1.fa9a14p-2, 0x1.e8282ep-3, -0x1.3d4078p+0, -0x1.5d707cp-2, 0x1.06d0dcp-9, -0x1.a5b12p-1, 0x1.6fdb7ap-2, -0x1.39c4fcp-1, -0x1.834aep-1, -0x1.71598p+0, -0x1.9a556ap-1, 0x1.1b78dap+0, -0x1.770e8cp-6, 0x1.c20e1cp-5, -0x1.2cfe4cp+0, -0x1.642bd8p-1, -0x1.1db6aep-1, 0x1.104842p-1, 0x1.68549ep-2, 0x1.befef4p-4, -0x1.636048p-1, 0x1.5f7e1ep+0, 0x1.e0f44ep-5, -0x1.8b6242p-1, -0x1.85cc2ep-1, -0x1.da6886p-1, -0x1.28dc8p-1, -0x1.1e0042p+0, 0x1.c7ed96p-2, -0x1.0a5116p-6, -0x1.5e137ap-1, 0x1.d7e046p-2, 0x1.8e7fb8p-1, 0x1.04c9ecp+0, -0x1.7a5562p-4, 0x1.e39d64p-1),
#              f4:(-0x1.37950ep-1, 0x1.e78312p-3, -0x1.c0ac9ap-1, 0x1.c57d4cp-1, 0x1.01fe9cp-5, 0x1.3d7cfcp-4, 0x1.3a9p-5, 0x1.3c8762p-1, 0x1.03189cp+0, 0x1.c995e4p-1, 0x1.5ea46ep+0, -0x1.624be2p-1, 0x1.c2006ep-1, -0x1.b9b062p-3, -0x1.946112p-5, 0x1.1cec2p-1, 0x1.569da6p+0, 0x1.322072p-4, 0x1.29e46cp-4, 0x1.02de6p+0, -0x1.a03be8p-6, 0x1.9f5736p-4, 0x1.453f9p+0, -0x1.86fe6ep-1, 0x1.92ee18p-5, 0x1.f5e046p-1, -0x1.07f4fep-3, -0x1.4ae9d6p-2, -0x1.cb888p-4, 0x1.fd327cp-2, 0x1.0ead92p+0, 0x1.17a984p-1, 0x1.5d2e9ap-1, -0x1.dc6774p-2, 0x1.b0811ep-2, -0x1.053d62p-4, 0x1.67a594p+0, -0x1.e532b4p-3, 0x1.0caa1ep-2, -0x1.97cc1p-3, -0x1.253256p+0, -0x1.6a989cp-2, -0x1.95476p-2, -0x1.4269ap-1, 0x1.42df38p-1, -0x1.34f53p-5, -0x1.4d4534p-2, 0x1.aad856p-1),
#              f5:(-0x1.270196p+0, -0x1.9ef084p-1, -0x1.5c28f2p+0, -0x1.a60754p-3, -0x1.b166b8p-2, 0x1.49a408p+0, -0x1.9c2444p+0, -0x1.6be5a6p-1, -0x1.ba411ep+0, -0x1.00eeacp-1, -0x1.15b7ccp+0, 0x1.f585dap-3, -0x1.1f840ep+0, 0x1.9280cep-3, 0x1.e1dd86p-2, 0x1.548fc8p-2, 0x1.d5f9bep-1, -0x1.8ee52ep-1, -0x1.8001ep-3, -0x1.32e514p+0, 0x1.50c448p-2, 0x1.d2ec58p-2, 0x1.3cf14ap-3, 0x1.5cc77cp-5, 0x1.59a096p-1, -0x1.1f343cp-1, 0x1.bdac62p-1, -0x1.e83434p-1, 0x1.e548fap-2, -0x1.2f0c0cp-2, 0x1.3388e4p-1, -0x1.e8aaf8p-2, -0x1.574b24p-4, -0x1.b79d0ap-2, -0x1.01f0fp+0, -0x1.2c80d8p-3, -0x1.22a1e6p+0, -0x1.1ebca8p-2, 0x1.efb2eep-2, 0x1.a20b84p-2, -0x1.5877b4p-3, -0x1.8df0d6p-7, 0x1.db24f8p-1, -0x1.632fd8p+0, 0x1.0ea618p-4, 0x1.3196bcp-2, -0x1.6f7ce4p-2, -0x1.dab9b4p-4),
#              f6:(-0x1.85c8bep-3, -0x1.fe3064p-2, 0x1.4c4168p-4, 0x1.cb697p-1, -0x1.c50a46p-1, 0x1.0d1c88p-1, 0x1.41b0c6p+0, 0x1.36433p+0, -0x1.922fe4p-1, 0x1.97b23ep-5, -0x1.a533c2p-1, -0x1.8ed06ap-3, -0x1.3676c8p-1, 0x1.4697ap-1, -0x1.094d92p-1, 0x1.c0669cp-2, 0x1.aa6b1ap-2, 0x1.23d8p-2, -0x1.68c068p-6, 0x1.d2a57ap-2, -0x1.1fe102p-1, -0x1.19ed48p-1, 0x1.57a5a2p+0, 0x1.64f806p+0, -0x1.8bff22p-1, -0x1.c60cf6p-2, -0x1.44cf66p-3, -0x1.20323ep-1, 0x1.64128ap-1, -0x1.3bc506p-3, -0x1.265978p-3, 0x1.874db2p+0, 0x1.59c9cep-1, 0x1.180232p+0, -0x1.168bb2p-1, -0x1.f9095cp-1, -0x1.3f6582p-5, -0x1.85f4b8p-1, -0x1.966cbap-3, -0x1.1b2e7cp-2, -0x1.20fdd2p-3, 0x1.8b8f12p-3, -0x1.bc02f8p-3, -0x1.4ba3fep-1, 0x1.71a1bcp-1, -0x1.48a9c2p-4, -0x1.c928dap-1, 0x1.647fa2p-1)]
# {OUT} Y_N = [f1:(0x1.6f26ep-1, -0x1.1901bcp-1, 0x1.fafedcp-1, 0x1.1fe6c8p-4, -0x1.e2531cp-5, 0x1.744d9p+0, -0x1.884c3p-1, -0x1.917162p-1, 0x1.74b258p-1, -0x1.711968p+0, 0x1.3ea8ep+0, 0x1.7a08p-1, 0x1.bd2c02p-2, 0x1.bb9428p-1, -0x1.1b839ep-1, 0x1.18136p-4, 0x1.05fe96p+0, 0x1.2aa3e4p+0, 0x1.88cbf2p-3, 0x1.ec2fe8p-2, -0x1.a2403ep-1, 0x1.d2c62ep-2, 0x1.07d09p-2, 0x1.c734fcp+0, 0x1.03649p-1, 0x1.81564p-1, -0x1.be328cp-1, 0x1.c3ee04p+0, -0x1.2b2252p-2, -0x1.220718p+0, 0x1.155c8ap-6, -0x1.d8700ap-3, 0x1.555f1ep-2, 0x1.7fe04p-2, -0x1.3443c4p-1, -0x1.b2d57ap-1, -0x1.673b3p-2, -0x1.efc864p-2, -0x1.1356b8p-1, -0x1.6c1114p-4, 0x1.9e7cp-9, -0x1.c44fd6p-3, -0x1.119d86p-1, 0x1.009d58p-2, -0x1.8a452cp-5, 0x1.0a1562p-2, 0x1.2e2b68p-1, 0x1.bb69e8p-2),
#              f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Modem_SCMA::filter(const float32 Y_N1[6x48], float32 Y_N2[6x48])
# {IN}  Y_N1 = [f1:(0x1.6f26ep-1, -0x1.1901bcp-1, 0x1.fafedcp-1, 0x1.1fe6c8p-4, -0x1.e2531cp-5, 0x1.744d9p+0, -0x1.884c3p-1, -0x1.917162p-1, 0x1.74b258p-1, -0x1.711968p+0, 0x1.3ea8ep+0, 0x1.7a08p-1, 0x1.bd2c02p-2, 0x1.bb9428p-1, -0x1.1b839ep-1, 0x1.18136p-4, 0x1.05fe96p+0, 0x1.2aa3e4p+0, 0x1.88cbf2p-3, 0x1.ec2fe8p-2, -0x1.a2403ep-1, 0x1.d2c62ep-2, 0x1.07d09p-2, 0x1.c734fcp+0, 0x1.03649p-1, 0x1.81564p-1, -0x1.be328cp-1, 0x1.c3ee04p+0, -0x1.2b2252p-2, -0x1.220718p+0, 0x1.155c8ap-6, -0x1.d8700ap-3, 0x1.555f1ep-2, 0x1.7fe04p-2, -0x1.3443c4p-1, -0x1.b2d57ap-1, -0x1.673b3p-2, -0x1.efc864p-2, -0x1.1356b8p-1, -0x1.6c1114p-4, 0x1.9e7cp-9, -0x1.c44fd6p-3, -0x1.119d86p-1, 0x1.009d58p-2, -0x1.8a452cp-5, 0x1.0a1562p-2, 0x1.2e2b68p-1, 0x1.bb69e8p-2),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# {OUT} Y_N2 = [f1:(0x1.6f26ep-1, -0x1.1901bcp-1, 0x1.fafedcp-1, 0x1.1fe6c8p-4, -0x1.e2531cp-5, 0x1.744d9p+0, -0x1.884c3p-1, -0x1.917162p-1, 0x1.74b258p-1, -0x1.711968p+0, 0x1.3ea8ep+0, 0x1.7a08p-1, 0x1.bd2c02p-2, 0x1.bb9428p-1, -0x1.1b839ep-1, 0x1.18136p-4, 0x1.05fe96p+0, 0x1.2aa3e4p+0, 0x1.88cbf2p-3, 0x1.ec2fe8p-2, -0x1.a2403ep-1, 0x1.d2c62ep-2, 0x1.07d09p-2, 0x1.c734fcp+0, 0x1.03649p-1, 0x1.81564p-1, -0x1.be328cp-1, 0x1.c3ee04p+0, -0x1.2b2252p-2, -0x1.220718p+0, 0x1.155c8ap-6, -0x1.d8700ap-3, 0x1.555f1ep-2, 0x1.7fe04p-2, -0x1.3443c4p-1, -0x1.b2d57ap-1, -0x1.673b3p-2, -0x1.efc864p-2, -0x1.1356b8p-1, -0x1.6c1114p-4, 0x1.9e7cp-9, -0x1.c44fd6p-3, -0x1.119d86p-1, 0x1.009d58p-2, -0x1.8a452cp-5, 0x1.0a1562p-2, 0x1.2e2b68p-1, 0x1.bb69e8p-2),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Modem_SCMA::demodulate_wg(const float32 H_N[6x48], const float32 Y_N1[6x48], float32 Y_N2[6x12])
# {IN}  H_N  = [f1:(-0x1.33b926p-1, -0x1.68e6b6p-1, 0x1.2379fcp+0, -0x1.13f5ep+0, -0x1.752c5p-1, 0x1.2b4dp-2, -0x1.57cddcp-2, 0x1.3682fp+0, -0x1.31ef9p-2, -0x1.3a17bap-1, 0x1.8bf326p-1, 0x1.caf2a4p-8, 0x1.a8bc86p-5, -0x1.9d0d9p-1, 0x1.6c43f6p-5, -0x1.51aef8p-1, 0x1.5bd8d4p-1, 0x1.7ef948p+0, -0x1.92ff52p-1, -0x1.9a03ecp-2, 0x1.ad955ep-2, 0x1.e510c4p-1, -0x1.ebe2fcp-3, 0x1.fe7ea4p-2, 0x1.75e8dp-1, -0x1.53242cp-2, -0x1.449216p+0, -0x1.190276p+0, 0x1.269296p+0, -0x1.802c6cp-3, 0x1.8811b2p-3, 0x1.a7c348p-3, 0x1.75b69p-2, -0x1.c7e106p-1, -0x1.df0ccep-6, -0x1.99abbep-2, 0x1.ac4c9ap-4, -0x1.3360b6p-5, -0x1.9423fp-1, -0x1.370c28p-3, -0x1.31712p-1, 0x1.f36b78p-1, -0x1.01486p-4, -0x1.bdb13ap-2, -0x1.3f4e2cp+0, -0x1.0b3e38p-4, -0x1.8f8504p+0, 0x1.70c31p-2),
#               f2:(0x1.07e0ecp-2, 0x1.8d6e0ap-1, -0x1.6e481ap-4, -0x1.dbf47ep-1, -0x1.abd4f6p-3, -0x1.260948p-4, -0x1.90187p-1, 0x1.c9638ep-2, -0x1.e7c5b8p-3, 0x1.5f489ap-2, -0x1.2f0ep-3, 0x1.38816p-9, -0x1.b507e8p-1, -0x1.c2b12ap-4, -0x1.ad000ep-2, -0x1.9ea80ap-5, -0x1.5ep-2, -0x1.197faap-3, -0x1.2ff502p+0, 0x1.16bf02p-1, 0x1.310e56p-7, -0x1.5cd124p-1, -0x1.63d3a8p-1, -0x1.4796a2p-1, -0x1.6ef588p+0, -0x1.420fcap-1, -0x1.314866p+0, -0x1.4c08bep-1, 0x1.43674cp-1, -0x1.7f071ap-1, -0x1.aa5cf8p-1, -0x1.a1fda6p-4, 0x1.1120aap+0, -0x1.480498p-3, -0x1.13e396p-1, -0x1.f4bc7p-2, -0x1.54715cp-1, -0x1.ba22f2p-3, 0x1.71f456p-2, -0x1.0e107p-3, 0x1.46f29p-3, 0x1.136456p-2, -0x1.ea8ccp-3, -0x1.66862ep-1, -0x1.d1bb6ap-2, -0x1.389d44p-1, 0x1.0f4608p-2, 0x1.df3a62p-4),
#               f3:(0x1.8bb43ap-1, -0x1.82bc08p-2, -0x1.2fc0aap-1, -0x1.03908p-1, -0x1.80aa4p-5, 0x1.2a26eap-3, -0x1.5a65fep-1, 0x1.bdb2c2p-2, 0x1.d5f45ap-4, 0x1.78a94cp-3, -0x1.fc32d4p-7, -0x1.027a2cp+0, 0x1.fa9a14p-2, 0x1.e8282ep-3, -0x1.3d4078p+0, -0x1.5d707cp-2, 0x1.06d0dcp-9, -0x1.a5b12p-1, 0x1.6fdb7ap-2, -0x1.39c4fcp-1, -0x1.834aep-1, -0x1.71598p+0, -0x1.9a556ap-1, 0x1.1b78dap+0, -0x1.770e8cp-6, 0x1.c20e1cp-5, -0x1.2cfe4cp+0, -0x1.642bd8p-1, -0x1.1db6aep-1, 0x1.104842p-1, 0x1.68549ep-2, 0x1.befef4p-4, -0x1.636048p-1, 0x1.5f7e1ep+0, 0x1.e0f44ep-5, -0x1.8b6242p-1, -0x1.85cc2ep-1, -0x1.da6886p-1, -0x1.28dc8p-1, -0x1.1e0042p+0, 0x1.c7ed96p-2, -0x1.0a5116p-6, -0x1.5e137ap-1, 0x1.d7e046p-2, 0x1.8e7fb8p-1, 0x1.04c9ecp+0, -0x1.7a5562p-4, 0x1.e39d64p-1),
#               f4:(-0x1.37950ep-1, 0x1.e78312p-3, -0x1.c0ac9ap-1, 0x1.c57d4cp-1, 0x1.01fe9cp-5, 0x1.3d7cfcp-4, 0x1.3a9p-5, 0x1.3c8762p-1, 0x1.03189cp+0, 0x1.c995e4p-1, 0x1.5ea46ep+0, -0x1.624be2p-1, 0x1.c2006ep-1, -0x1.b9b062p-3, -0x1.946112p-5, 0x1.1cec2p-1, 0x1.569da6p+0, 0x1.322072p-4, 0x1.29e46cp-4, 0x1.02de6p+0, -0x1.a03be8p-6, 0x1.9f5736p-4, 0x1.453f9p+0, -0x1.86fe6ep-1, 0x1.92ee18p-5, 0x1.f5e046p-1, -0x1.07f4fep-3, -0x1.4ae9d6p-2, -0x1.cb888p-4, 0x1.fd327cp-2, 0x1.0ead92p+0, 0x1.17a984p-1, 0x1.5d2e9ap-1, -0x1.dc6774p-2, 0x1.b0811ep-2, -0x1.053d62p-4, 0x1.67a594p+0, -0x1.e532b4p-3, 0x1.0caa1ep-2, -0x1.97cc1p-3, -0x1.253256p+0, -0x1.6a989cp-2, -0x1.95476p-2, -0x1.4269ap-1, 0x1.42df38p-1, -0x1.34f53p-5, -0x1.4d4534p-2, 0x1.aad856p-1),
#               f5:(-0x1.270196p+0, -0x1.9ef084p-1, -0x1.5c28f2p+0, -0x1.a60754p-3, -0x1.b166b8p-2, 0x1.49a408p+0, -0x1.9c2444p+0, -0x1.6be5a6p-1, -0x1.ba411ep+0, -0x1.00eeacp-1, -0x1.15b7ccp+0, 0x1.f585dap-3, -0x1.1f840ep+0, 0x1.9280cep-3, 0x1.e1dd86p-2, 0x1.548fc8p-2, 0x1.d5f9bep-1, -0x1.8ee52ep-1, -0x1.8001ep-3, -0x1.32e514p+0, 0x1.50c448p-2, 0x1.d2ec58p-2, 0x1.3cf14ap-3, 0x1.5cc77cp-5, 0x1.59a096p-1, -0x1.1f343cp-1, 0x1.bdac62p-1, -0x1.e83434p-1, 0x1.e548fap-2, -0x1.2f0c0cp-2, 0x1.3388e4p-1, -0x1.e8aaf8p-2, -0x1.574b24p-4, -0x1.b79d0ap-2, -0x1.01f0fp+0, -0x1.2c80d8p-3, -0x1.22a1e6p+0, -0x1.1ebca8p-2, 0x1.efb2eep-2, 0x1.a20b84p-2, -0x1.5877b4p-3, -0x1.8df0d6p-7, 0x1.db24f8p-1, -0x1.632fd8p+0, 0x1.0ea618p-4, 0x1.3196bcp-2, -0x1.6f7ce4p-2, -0x1.dab9b4p-4),
#               f6:(-0x1.85c8bep-3, -0x1.fe3064p-2, 0x1.4c4168p-4, 0x1.cb697p-1, -0x1.c50a46p-1, 0x1.0d1c88p-1, 0x1.41b0c6p+0, 0x1.36433p+0, -0x1.922fe4p-1, 0x1.97b23ep-5, -0x1.a533c2p-1, -0x1.8ed06ap-3, -0x1.3676c8p-1, 0x1.4697ap-1, -0x1.094d92p-1, 0x1.c0669cp-2, 0x1.aa6b1ap-2, 0x1.23d8p-2, -0x1.68c068p-6, 0x1.d2a57ap-2, -0x1.1fe102p-1, -0x1.19ed48p-1, 0x1.57a5a2p+0, 0x1.64f806p+0, -0x1.8bff22p-1, -0x1.c60cf6p-2, -0x1.44cf66p-3, -0x1.20323ep-1, 0x1.64128ap-1, -0x1.3bc506p-3, -0x1.265978p-3, 0x1.874db2p+0, 0x1.59c9cep-1, 0x1.180232p+0, -0x1.168bb2p-1, -0x1.f9095cp-1, -0x1.3f6582p-5, -0x1.85f4b8p-1, -0x1.966cbap-3, -0x1.1b2e7cp-2, -0x1.20fdd2p-3, 0x1.8b8f12p-3, -0x1.bc02f8p-3, -0x1.4ba3fep-1, 0x1.71a1bcp-1, -0x1.48a9c2p-4, -0x1.c928dap-1, 0x1.647fa2p-1)]
# {IN}  Y_N1 = [f1:(0x1.6f26ep-1, -0x1.1901bcp-1, 0x1.fafedcp-1, 0x1.1fe6c8p-4, -0x1.e2531cp-5, 0x1.744d9p+0, -0x1.884c3p-1, -0x1.917162p-1, 0x1.74b258p-1, -0x1.711968p+0, 0x1.3ea8ep+0, 0x1.7a08p-1, 0x1.bd2c02p-2, 0x1.bb9428p-1, -0x1.1b839ep-1, 0x1.18136p-4, 0x1.05fe96p+0, 0x1.2aa3e4p+0, 0x1.88cbf2p-3, 0x1.ec2fe8p-2, -0x1.a2403ep-1, 0x1.d2c62ep-2, 0x1.07d09p-2, 0x1.c734fcp+0, 0x1.03649p-1, 0x1.81564p-1, -0x1.be328cp-1, 0x1.c3ee04p+0, -0x1.2b2252p-2, -0x1.220718p+0, 0x1.155c8ap-6, -0x1.d8700ap-3, 0x1.555f1ep-2, 0x1.7fe04p-2, -0x1.3443c4p-1, -0x1.b2d57ap-1, -0x1.673b3p-2, -0x1.efc864p-2, -0x1.1356b8p-1, -0x1.6c1114p-4, 0x1.9e7cp-9, -0x1.c44fd6p-3, -0x1.119d86p-1, 0x1.009d58p-2, -0x1.8a452cp-5, 0x1.0a1562p-2, 0x1.2e2b68p-1, 0x1.bb69e8p-2),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# {OUT} Y_N2 = [f1:(-0x1.7b6f54p+2, -0x1.fc2d28p+3, 0x1.4d0334p+0, -0x1.aed41ap+1, 0x1.c1623ap+1, 0x1.dfadbcp+1, -0x1.db77d2p+1, 0x1.7fc586p+3, 0x1.3a4352p+0, 0x1.f044cp-2, -0x1.896284p+0, 0x1.6b129cp+0),
#               f2:(0x1.0c1ap-2, 0x1.7dded8p+0, -0x1.a440e4p+0, 0x1.602a4p-1, -0x1.abdd6p+0, 0x1.fd0654p+0, -0x1.039d9cp+3, 0x1.ad2ab8p+1, 0x1.ae4228p+1, -0x1.001662p+1, -0x1.d039acp-1, 0x1.8f78d8p-2),
#               f3:(-0x1.41ffc4p+0, -0x1.7147dcp+2, 0x1.fa261p-2, -0x1.f92d62p+1, 0x1.23fde4p+2, 0x1.9cf4cp-3, -0x1.148608p+2, 0x1.6a915cp+3, -0x1.618182p+2, 0x1.9a95c6p+1, -0x1.ff1a38p-1, 0x1.53807cp-1),
#               f4:(0x1.73b8p-3, 0x1.cac0b8p+0, 0x1.0eedcp+1, -0x1.270472p+1, 0x1.5c24ccp+2, -0x1.c5deb4p+3, -0x1.20f762p+2, -0x1.2d1a9cp+1, -0x1.06a5c8p-1, 0x1.9a9b1p-2, -0x1.1f0198p+0, 0x1.3966cep+1),
#               f5:(-0x1.04d61cp+2, -0x1.f53ffcp+2, 0x1.8aaea8p+2, -0x1.c9b448p+3, 0x1.5a75b4p+1, -0x1.832c56p+2, -0x1.c5a14p-1, -0x1.abc36p+1, 0x1.55f458p-1, 0x1.d7259p-2, -0x1.03cb28p-1, -0x1.161a4p-1),
#               f6:(-0x1.436644p+2, 0x1.b37cap+3, -0x1.0b9844p+2, 0x1.a2d87p+0, -0x1.7db1d8p-2, 0x1.a9f108p+1, -0x1.bea20cp+1, 0x1.3e82c2p+2, 0x1.01129cp+1, 0x1.52f4c8p-1, 0x1.28330cp+0, 0x1.fd36ep-3)]
# Returned status: 0
#
# Quantizer_standard::process(const float32 Y_N1[6x12], int8 Y_N2[6x12])
# {IN}  Y_N1 = [f1:(-0x1.7b6f54p+2, -0x1.fc2d28p+3, 0x1.4d0334p+0, -0x1.aed41ap+1, 0x1.c1623ap+1, 0x1.dfadbcp+1, -0x1.db77d2p+1, 0x1.7fc586p+3, 0x1.3a4352p+0, 0x1.f044cp-2, -0x1.896284p+0, 0x1.6b129cp+0),
#               f2:(0x1.0c1ap-2, 0x1.7dded8p+0, -0x1.a440e4p+0, 0x1.602a4p-1, -0x1.abdd6p+0, 0x1.fd0654p+0, -0x1.039d9cp+3, 0x1.ad2ab8p+1, 0x1.ae4228p+1, -0x1.001662p+1, -0x1.d039acp-1, 0x1.8f78d8p-2),
#               f3:(-0x1.41ffc4p+0, -0x1.7147dcp+2, 0x1.fa261p-2, -0x1.f92d62p+1, 0x1.23fde4p+2, 0x1.9cf4cp-3, -0x1.148608p+2, 0x1.6a915cp+3, -0x1.618182p+2, 0x1.9a95c6p+1, -0x1.ff1a38p-1, 0x1.53807cp-1),
#               f4:(0x1.73b8p-3, 0x1.cac0b8p+0, 0x1.0eedcp+1, -0x1.270472p+1, 0x1.5c24ccp+2, -0x1.c5deb4p+3, -0x1.20f762p+2, -0x1.2d1a9cp+1, -0x1.06a5c8p-1, 0x1.9a9b1p-2, -0x1.1f0198p+0, 0x1.3966cep+1),
#               f5:(-0x1.04d61cp+2, -0x1.f53ffcp+2, 0x1.8aaea8p+2, -0x1.c9b448p+3, 0x1.5a75b4p+1, -0x1.832c56p+2, -0x1.c5a14p-1, -0x1.abc36p+1, 0x1.55f458p-1, 0x1.d7259p-2, -0x1.03cb28p-1, -0x1.161a4p-1),
#               f6:(-0x1.436644p+2, 0x1.b37cap+3, -0x1.0b9844p+2, 0x1.a2d87p+0, -0x1.7db1d8p-2, 0x1.a9f108p+1, -0x1.bea20cp+1, 0x1.3e82c2p+2, 0x1.01129cp+1, 0x1.52f4c8p-1, 0x1.28330cp+0, 0x1.fd36ep-3)]
# {OUT} Y_N2 = [f1:(0xffffffd1, 0xffffff81, 0xa, 0xffffffe5, 0x1c, 0x1e, 0xffffffe2, 0x60, 0xa, 0x4, 0xfffffff4, 0xb),
#               f2:(0x2, 0xc, 0xfffffff3, 0x6, 0xfffffff3, 0x10, 0xffffffbf, 0x1b, 0x1b, 0xfffffff0, 0xfffffff9, 0x3),
#               f3:(0xfffffff6, 0xffffffd2, 0x4, 0xffffffe0, 0x24, 0x2, 0xffffffdd, 0x5b, 0xffffffd4, 0x1a, 0xfffffff8, 0x5),
#               f4:(0x1, 0xe, 0x11, 0xffffffee, 0x2c, 0xffffff8f, 0xffffffdc, 0xffffffed, 0xfffffffc, 0x3, 0xfffffff7, 0x14),
#               f5:(0xffffffdf, 0xffffffc1, 0x31, 0xffffff8e, 0x16, 0xffffffd0, 0xfffffff9, 0xffffffe5, 0x5, 0x4, 0xfffffffc, 0xfffffffc),
#               f6:(0xffffffd8, 0x6d, 0xffffffdf, 0xd, 0xfffffffd, 0x1b, 0xffffffe4, 0x28, 0x10, 0x5, 0x9, 0x2)]
# Returned status: 0
#
# Puncturer_NO::depuncture(const int8 Y_N1[6x12], int8 Y_N2[6x12])
# {IN}  Y_N1 = [f1:(0xffffffd1, 0xffffff81, 0xa, 0xffffffe5, 0x1c, 0x1e, 0xffffffe2, 0x60, 0xa, 0x4, 0xfffffff4, 0xb),
#               f2:(0x2, 0xc, 0xfffffff3, 0x6, 0xfffffff3, 0x10, 0xffffffbf, 0x1b, 0x1b, 0xfffffff0, 0xfffffff9, 0x3),
#               f3:(0xfffffff6, 0xffffffd2, 0x4, 0xffffffe0, 0x24, 0x2, 0xffffffdd, 0x5b, 0xffffffd4, 0x1a, 0xfffffff8, 0x5),
#               f4:(0x1, 0xe, 0x11, 0xffffffee, 0x2c, 0xffffff8f, 0xffffffdc, 0xffffffed, 0xfffffffc, 0x3, 0xfffffff7, 0x14),
#               f5:(0xffffffdf, 0xffffffc1, 0x31, 0xffffff8e, 0x16, 0xffffffd0, 0xfffffff9, 0xffffffe5, 0x5, 0x4, 0xfffffffc, 0xfffffffc),
#               f6:(0xffffffd8, 0x6d, 0xffffffdf, 0xd, 0xfffffffd, 0x1b, 0xffffffe4, 0x28, 0x10, 0x5, 0x9, 0x2)]
# {OUT} Y_N2 = [f1:(0xffffffd1, 0xffffff81, 0xa, 0xffffffe5, 0x1c, 0x1e, 0xffffffe2, 0x60, 0xa, 0x4, 0xfffffff4, 0xb),
#               f2:(0x2, 0xc, 0xfffffff3, 0x6, 0xfffffff3, 0x10, 0xffffffbf, 0x1b, 0x1b, 0xfffffff0, 0xfffffff9, 0x3),
#               f3:(0xfffffff6, 0xffffffd2, 0x4, 0xffffffe0, 0x24, 0x2, 0xffffffdd, 0x5b, 0xffffffd4, 0x1a, 0xfffffff8, 0x5),
#               f4:(0x1, 0xe, 0x11, 0xffffffee, 0x2c, 0xffffff8f, 0xffffffdc, 0xffffffed, 0xfffffffc, 0x3, 0xfffffff7, 0x14),
#               f5:(0xffffffdf, 0xffffffc1, 0x31, 0xffffff8e, 0x16, 0xffffffd0, 0xfffffff9, 0xffffffe5, 0x5, 0x4, 0xfffffffc, 0xfffffffc),
#               f6:(0xffffffd8, 0x6d, 0xffffffdf, 0xd, 0xfffffffd, 0x1b, 0xffffffe4, 0x28, 0x10, 0x5, 0x9, 0x2)]
# Returned status: 0
#
# Decoder_NO::decode_siho(const int8 Y_N[6x12], int8 V_K[6x12])
# {IN}  Y_N = [f1:(0xffffffd1, 0xffffff81, 0xa, 0xffffffe5, 0x1c, 0x1e, 0xffffffe2, 0x60, 0xa, 0x4, 0xfffffff4, 0xb),
#              f2:(0x2, 0xc, 0xfffffff3, 0x6, 0xfffffff3, 0x10, 0xffffffbf, 0x1b, 0x1b, 0xfffffff0, 0xfffffff9, 0x3),
#              f3:(0xfffffff6, 0xffffffd2, 0x4, 0xffffffe0, 0x24, 0x2, 0xffffffdd, 0x5b, 0xffffffd4, 0x1a, 0xfffffff8, 0x5),
#              f4:(0x1, 0xe, 0x11, 0xffffffee, 0x2c, 0xffffff8f, 0xffffffdc, 0xffffffed, 0xfffffffc, 0x3, 0xfffffff7, 0x14),
#              f5:(0xffffffdf, 0xffffffc1, 0x31, 0xffffff8e, 0x16, 0xffffffd0, 0xfffffff9, 0xffffffe5, 0x5, 0x4, 0xfffffffc, 0xfffffffc),
#              f6:(0xffffffd8, 0x6d, 0xffffffdf, 0xd, 0xfffffffd, 0x1b, 0xffffffe4, 0x28, 0x10, 0x5, 0x9, 0x2)]
# {OUT} V_K = [f1:(0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0),
#              f2:(0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0),
#              f3:(0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0),
#              f4:(0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0),
#              f5:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#              f6:(0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0)]
# Returned status: 0
#
# CRC_NO::extract(const int8 V_K1[6x12], int8 V_K2[6x12])
# {IN}  V_K1 = [f1:(0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0),
#               f2:(0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0),
#               f3:(0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0),
#               f4:(0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0),
#               f5:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#               f6:(0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0)]
# {OUT} V_K2 = [f1:(0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0),
#               f2:(0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0),
#               f3:(0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0),
#               f4:(0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0),
#               f5:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#               f6:(0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0)]
# Returned status: 0
#
# Monitor_BFER::check_errors(const int8 U[6x12], const int8 V[6x12])
# {IN}  U = [f1:(0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0),
#            f2:(0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0),
#            f3:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0),
#            f4:(0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0),
#            f5:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1),
#            f6:(0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0)]
# {IN}  V = [f1:(0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0),
#            f2:(0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0),
#            f3:(0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0),
#            f4:(0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0),
#            f5:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1),
#            f6:(0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0)]
# Returned status: 6
#
# -------------------------------
# New communication (nÂ°14)
# -------------------------------
#
# Source_random::generate(int8 U_K[6x12])
# {OUT} U_K = [f1:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1),
#              f2:(0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#              f3:(0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1),
#              f4:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0),
#              f5:(0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0),
#              f6:(0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1)]
# Returned status: 0
#
# CRC_NO::build(const int8 U_K1[6x12], int8 U_K2[6x12])
# {IN}  U_K1 = [f1:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1),
#               f2:(0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#               f3:(0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1),
#               f4:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0),
#               f5:(0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0),
#               f6:(0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1)]
# {OUT} U_K2 = [f1:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1),
#               f2:(0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#               f3:(0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1),
#               f4:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0),
#               f5:(0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0),
#               f6:(0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1)]
# Returned status: 0
#
# Encoder_NO::encode(const int8 U_K[6x12], int8 X_N[6x12])
# {IN}  U_K = [f1:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1),
#              f2:(0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#              f3:(0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1),
#              f4:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0),
#              f5:(0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0),
#              f6:(0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1)]
# {OUT} X_N = [f1:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1),
#              f2:(0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#              f3:(0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1),
#              f4:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0),
#              f5:(0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0),
#              f6:(0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1)]
# Returned status: 0
#
# Puncturer_NO::puncture(const int8 X_N1[6x12], int8 X_N2[6x12])
# {IN}  X_N1 = [f1:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1),
#               f2:(0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#               f3:(0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1),
#               f4:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0),
#               f5:(0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0),
#               f6:(0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1)]
# {OUT} X_N2 = [f1:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1),
#               f2:(0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#               f3:(0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1),
#               f4:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0),
#               f5:(0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0),
#               f6:(0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1)]
# Returned status: 0
#
# Modem_SCMA::modulate(const int8 X_N1[6x12], float32 X_N2[6x48])
# {IN}  X_N1 = [f1:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1),
#               f2:(0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#               f3:(0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1),
#               f4:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0),
#               f5:(0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0),
#               f6:(0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1)]
# {OUT} X_N2 = [f1:(0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0),
#               f2:(0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0),
#               f3:(-0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3),
#               f5:(0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2),
#               f6:(0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Channel_Rayleigh_LLR::add_noise_wg(const float32 X_N[6x48], float32 H_N[6x48], float32 Y_N[6x48])
# {IN}  X_N = [f1:(0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0),
#              f2:(0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0),
#              f3:(-0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3),
#              f5:(0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2),
#              f6:(0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0)]
# {OUT} H_N = [f1:(-0x1.cb4852p+0, 0x1.bfd1f4p-2, -0x1.324bdap-5, 0x1.4c8b28p-1, -0x1.9019f4p-2, 0x1.a5e254p-1, 0x1.046732p+0, 0x1.42b7fap-2, -0x1.023c1ep-1, -0x1.fc6694p-3, -0x1.769c98p-1, 0x1.417e48p-1, 0x1.183f3ap-1, -0x1.8456bcp-1, -0x1.615d2cp-2, -0x1.75f6f4p-2, -0x1.a1323ep-1, 0x1.b9c51cp-1, -0x1.808f2ep-9, 0x1.2742p+0, -0x1.9f723ap-1, -0x1.4fb966p-1, -0x1.69fa6cp-2, -0x1.b35dbap-4, 0x1.f2d792p-1, 0x1.6e249ep-1, 0x1.b35ee6p-1, -0x1.00191ep-2, -0x1.b9249ep-2, -0x1.90f98p-4, -0x1.aa9b7ap-4, -0x1.ae3a7cp-3, -0x1.0cad58p-1, -0x1.82e5ap-3, 0x1.aa92cep-4, -0x1.103188p-1, 0x1.3e8fa8p-1, -0x1.4fd17ep-1, 0x1.8d00a8p-4, -0x1.6edd88p+0, 0x1.41478ap+1, 0x1.0c4a2p-3, 0x1.f8c5d6p-1, -0x1.0ccd2ep-3, 0x1.3fcf1ep-1, -0x1.e50b46p-2, -0x1.5a8c9p-2, -0x1.591e96p-1),
#              f2:(0x1.181c9p-1, -0x1.881f32p-2, -0x1.bc81dep+0, 0x1.fad4f2p-1, -0x1.ec0384p-3, -0x1.3912bcp+0, 0x1.526b5ep-1, -0x1.2df81ap-2, -0x1.32be26p-2, 0x1.b5043cp-1, 0x1.c20964p-2, -0x1.da341ap-4, -0x1.a1657p-4, 0x1.aabf96p-2, -0x1.779eecp-1, -0x1.d69d64p-4, 0x1.a77acap-2, -0x1.47e376p-2, 0x1.2a4cbap-3, -0x1.acb9bep-3, -0x1.e0895ap+0, 0x1.35b7cap+0, 0x1.87fabap-3, -0x1.dbeaep-2, -0x1.0f59eep-3, -0x1.13742ap-2, 0x1.ea2a2cp-3, 0x1.ed3e42p-2, -0x1.87f7c4p-1, -0x1.38bd7ep-1, -0x1.2500a2p-3, 0x1.99be54p+0, -0x1.5fdbfep-1, 0x1.2ef08p+0, 0x1.8a3f32p+0, 0x1.51ab92p-1, -0x1.99923ep-4, 0x1.a3d0e8p-1, 0x1.2db06p-4, 0x1.27b1a4p-1, 0x1.e6927ep+0, -0x1.4f0cbp-4, -0x1.b943b2p-1, -0x1.4580e6p-1, -0x1.e28966p-1, 0x1.c9e246p-2, 0x1.19efcap-4, 0x1.9ceb8cp-3),
#              f3:(-0x1.801fb2p-2, 0x1.5281cep+0, -0x1.2d39f2p-2, 0x1.df656ep+0, 0x1.1dea3ap+0, 0x1.05c62ap+0, 0x1.65a8f8p+0, 0x1.39b73cp-2, -0x1.85c47ap-3, 0x1.4c01p+0, 0x1.67e686p-1, 0x1.3f96ecp-9, 0x1.dfaab2p-2, 0x1.16dca4p-3, -0x1.10372ap-1, 0x1.c51bb4p-3, 0x1.59ec96p-2, 0x1.aadb24p+0, -0x1.1dcc54p+0, -0x1.e9008ep-2, -0x1.67527ep-4, -0x1.4fef74p-3, 0x1.8c919ep-2, 0x1.5a6b8ap-6, -0x1.954786p-2, -0x1.e7a246p-4, -0x1.570a18p-1, -0x1.9806f8p-1, -0x1.f30e86p-1, 0x1.416af6p-5, 0x1.38cd8cp-2, -0x1.391c24p-1, 0x1.b79068p-1, 0x1.2cb1bcp-1, 0x1.79c534p-1, 0x1.f180d8p-1, 0x1.aa5e98p-2, -0x1.bb1f8p-1, 0x1.bab6ep-1, 0x1.5a26bcp-3, -0x1.34ff82p+0, -0x1.f70f78p-1, 0x1.a6f888p-1, -0x1.b5649cp-1, -0x1.b80778p-2, -0x1.9ab452p-2, -0x1.5103e8p+0, -0x1.23781ap+0),
#              f4:(-0x1.961dep-1, -0x1.c4bfc8p-2, 0x1.c236d8p-1, -0x1.92aad8p-1, -0x1.08cc06p-1, 0x1.20b77p-2, 0x1.0aed8cp+0, -0x1.c9879ep+0, 0x1.4bb328p-1, 0x1.13257ap-1, 0x1.f7c876p-1, -0x1.86b3d8p-1, -0x1.bcd874p-2, 0x1.58fb88p-3, 0x1.54f802p-1, -0x1.58e50ep-3, -0x1.5f4a7p-2, -0x1.4dc452p-2, 0x1.125c88p-3, 0x1.be5078p+0, 0x1.e69de2p-1, -0x1.40e0eap-2, 0x1.f0f18p-2, -0x1.bf8b84p-1, 0x1.b489b2p-1, -0x1.08a3eap+0, -0x1.044c28p-3, 0x1.32b046p-2, -0x1.0d077cp+0, 0x1.de145ep-1, 0x1.794542p+0, 0x1.5aeaa8p+0, -0x1.27b6c4p-2, -0x1.4846d6p-1, 0x1.d3ca4ap-1, -0x1.7d479p-3, 0x1.cb222cp-4, -0x1.ddec88p-3, -0x1.f13ae6p-6, -0x1.2e1b74p-2, 0x1.11a282p-1, 0x1.809056p+0, -0x1.2e2a2ap-2, 0x1.e1b552p-5, -0x1.241174p-3, -0x1.e29086p-1, 0x1.cc5beap-2, 0x1.dc0e26p-2),
#              f5:(-0x1.27cc78p-1, 0x1.17f75p-1, 0x1.41a03cp-3, -0x1.d0ce8p-4, 0x1.73199p-2, 0x1.e2cd0cp-5, -0x1.8ae28ep-2, -0x1.f2bfd6p-7, 0x1.62b0eep+0, 0x1.5de1dcp-2, -0x1.d97dcap-2, 0x1.0a650ap+0, -0x1.44913ep-4, 0x1.1bb3dap-2, 0x1.b500e8p-1, -0x1.af268ap-2, 0x1.63c39ep+0, -0x1.1c4c6p+0, 0x1.0a52d8p-2, -0x1.7b636cp-2, -0x1.f3b68ep-3, -0x1.ea5552p-4, 0x1.2304d6p-2, 0x1.6dd878p+0, -0x1.38e2bp-3, 0x1.dd910ap-1, -0x1.9914dap+0, 0x1.0a8426p+0, 0x1.e3bf08p-2, -0x1.a5813cp-2, -0x1.10df2ep-2, 0x1.29a6dep-3, -0x1.62a28ap-1, 0x1.8bb16p-2, 0x1.30be86p-1, -0x1.fb942ap-5, 0x1.0984c6p-4, -0x1.a1b716p-2, 0x1.c68ed6p-1, 0x1.63a87ep-3, -0x1.06fe72p+0, -0x1.6b8dacp-3, -0x1.5d1a36p-2, -0x1.fc7de8p-1, -0x1.8b1f24p-2, -0x1.5d8a48p-4, -0x1.83c478p-1, -0x1.7123a6p-1),
#              f6:(-0x1.e87588p-3, -0x1.91ff5p-2, -0x1.9ce5f8p-3, -0x1.fe698ap-1, 0x1.8ef9dcp-2, 0x1.c4e484p-3, -0x1.3c1be2p+0, -0x1.7b9cbep+0, -0x1.c8f18ep-1, 0x1.e46bf2p-3, 0x1.5583cp+0, -0x1.8f2f3cp-4, 0x1.4ec34p+0, 0x1.5ee1aap+0, 0x1.736b8p-2, -0x1.32d414p-2, 0x1.451c0cp-3, -0x1.ef8faep-3, 0x1.88824ap-1, -0x1.627066p-1, 0x1.f259bep-1, 0x1.05051cp-2, 0x1.f9036ap-1, -0x1.668a76p-2, -0x1.31324p-1, 0x1.d2f2d4p+0, 0x1.7f0816p-2, -0x1.2ef342p+1, -0x1.5fe1b6p+0, -0x1.c00d84p-4, 0x1.6b082p-1, 0x1.1543bp-2, -0x1.7f697p-3, -0x1.1f8a84p+0, -0x1.3474cp-1, -0x1.bb94ep-1, 0x1.f01882p-5, -0x1.60718p-2, 0x1.c4ac78p-1, -0x1.a974c6p-2, 0x1.0a2b8p-2, 0x1.113dfap-6, -0x1.5e8a78p+0, 0x1.da9feap-3, 0x1.f73346p-2, 0x1.608848p-2, -0x1.c0d492p-2, 0x1.2b5c8ap-1)]
# {OUT} Y_N = [f1:(-0x1.85ca78p-2, -0x1.9822acp+0, 0x1.74be6cp-2, 0x1.8afdc6p-1, -0x1.e0d398p-3, -0x1.96d708p-1, -0x1.0b7edcp+0, 0x1.ce67p-9, 0x1.1cbf96p-3, 0x1.d4dbd2p+0, -0x1.fee04ep-1, -0x1.72ede8p-3, 0x1.e1f22ap-3, -0x1.1cba48p-2, -0x1.35095p-5, -0x1.9d9d18p-1, -0x1.70bd88p-4, 0x1.72751p-1, 0x1.39e68ap-1, -0x1.aa7bfp-5, 0x1.4fbb64p-1, -0x1.14c83cp-1, -0x1.be94dp-2, -0x1.76462cp-2, 0x1.0f185ap+0, 0x1.7524e4p-3, 0x1.de5d4p-4, 0x1.4c820ep-2, 0x1.48625cp-2, -0x1.e232e6p-1, -0x1.4058f6p-3, 0x1.b442aep-3, -0x1.d2b57cp-5, -0x1.14e8bcp-1, -0x1.e4389ap-2, -0x1.ed1396p-2, 0x1.0f3ccp-1, -0x1.143edp-6, 0x1.0d8788p+0, -0x1.795a8ap-1, 0x1.a56284p+0, 0x1.23a28p-1, -0x1.d2ef18p-5, 0x1.20028ep+0, -0x1.b237acp-1, -0x1.06eb76p-2, 0x1.3f89bcp+0, 0x1.af1048p-1),
#              f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Modem_SCMA::filter(const float32 Y_N1[6x48], float32 Y_N2[6x48])
# {IN}  Y_N1 = [f1:(-0x1.85ca78p-2, -0x1.9822acp+0, 0x1.74be6cp-2, 0x1.8afdc6p-1, -0x1.e0d398p-3, -0x1.96d708p-1, -0x1.0b7edcp+0, 0x1.ce67p-9, 0x1.1cbf96p-3, 0x1.d4dbd2p+0, -0x1.fee04ep-1, -0x1.72ede8p-3, 0x1.e1f22ap-3, -0x1.1cba48p-2, -0x1.35095p-5, -0x1.9d9d18p-1, -0x1.70bd88p-4, 0x1.72751p-1, 0x1.39e68ap-1, -0x1.aa7bfp-5, 0x1.4fbb64p-1, -0x1.14c83cp-1, -0x1.be94dp-2, -0x1.76462cp-2, 0x1.0f185ap+0, 0x1.7524e4p-3, 0x1.de5d4p-4, 0x1.4c820ep-2, 0x1.48625cp-2, -0x1.e232e6p-1, -0x1.4058f6p-3, 0x1.b442aep-3, -0x1.d2b57cp-5, -0x1.14e8bcp-1, -0x1.e4389ap-2, -0x1.ed1396p-2, 0x1.0f3ccp-1, -0x1.143edp-6, 0x1.0d8788p+0, -0x1.795a8ap-1, 0x1.a56284p+0, 0x1.23a28p-1, -0x1.d2ef18p-5, 0x1.20028ep+0, -0x1.b237acp-1, -0x1.06eb76p-2, 0x1.3f89bcp+0, 0x1.af1048p-1),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# {OUT} Y_N2 = [f1:(-0x1.85ca78p-2, -0x1.9822acp+0, 0x1.74be6cp-2, 0x1.8afdc6p-1, -0x1.e0d398p-3, -0x1.96d708p-1, -0x1.0b7edcp+0, 0x1.ce67p-9, 0x1.1cbf96p-3, 0x1.d4dbd2p+0, -0x1.fee04ep-1, -0x1.72ede8p-3, 0x1.e1f22ap-3, -0x1.1cba48p-2, -0x1.35095p-5, -0x1.9d9d18p-1, -0x1.70bd88p-4, 0x1.72751p-1, 0x1.39e68ap-1, -0x1.aa7bfp-5, 0x1.4fbb64p-1, -0x1.14c83cp-1, -0x1.be94dp-2, -0x1.76462cp-2, 0x1.0f185ap+0, 0x1.7524e4p-3, 0x1.de5d4p-4, 0x1.4c820ep-2, 0x1.48625cp-2, -0x1.e232e6p-1, -0x1.4058f6p-3, 0x1.b442aep-3, -0x1.d2b57cp-5, -0x1.14e8bcp-1, -0x1.e4389ap-2, -0x1.ed1396p-2, 0x1.0f3ccp-1, -0x1.143edp-6, 0x1.0d8788p+0, -0x1.795a8ap-1, 0x1.a56284p+0, 0x1.23a28p-1, -0x1.d2ef18p-5, 0x1.20028ep+0, -0x1.b237acp-1, -0x1.06eb76p-2, 0x1.3f89bcp+0, 0x1.af1048p-1),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Modem_SCMA::demodulate_wg(const float32 H_N[6x48], const float32 Y_N1[6x48], float32 Y_N2[6x12])
# {IN}  H_N  = [f1:(-0x1.cb4852p+0, 0x1.bfd1f4p-2, -0x1.324bdap-5, 0x1.4c8b28p-1, -0x1.9019f4p-2, 0x1.a5e254p-1, 0x1.046732p+0, 0x1.42b7fap-2, -0x1.023c1ep-1, -0x1.fc6694p-3, -0x1.769c98p-1, 0x1.417e48p-1, 0x1.183f3ap-1, -0x1.8456bcp-1, -0x1.615d2cp-2, -0x1.75f6f4p-2, -0x1.a1323ep-1, 0x1.b9c51cp-1, -0x1.808f2ep-9, 0x1.2742p+0, -0x1.9f723ap-1, -0x1.4fb966p-1, -0x1.69fa6cp-2, -0x1.b35dbap-4, 0x1.f2d792p-1, 0x1.6e249ep-1, 0x1.b35ee6p-1, -0x1.00191ep-2, -0x1.b9249ep-2, -0x1.90f98p-4, -0x1.aa9b7ap-4, -0x1.ae3a7cp-3, -0x1.0cad58p-1, -0x1.82e5ap-3, 0x1.aa92cep-4, -0x1.103188p-1, 0x1.3e8fa8p-1, -0x1.4fd17ep-1, 0x1.8d00a8p-4, -0x1.6edd88p+0, 0x1.41478ap+1, 0x1.0c4a2p-3, 0x1.f8c5d6p-1, -0x1.0ccd2ep-3, 0x1.3fcf1ep-1, -0x1.e50b46p-2, -0x1.5a8c9p-2, -0x1.591e96p-1),
#               f2:(0x1.181c9p-1, -0x1.881f32p-2, -0x1.bc81dep+0, 0x1.fad4f2p-1, -0x1.ec0384p-3, -0x1.3912bcp+0, 0x1.526b5ep-1, -0x1.2df81ap-2, -0x1.32be26p-2, 0x1.b5043cp-1, 0x1.c20964p-2, -0x1.da341ap-4, -0x1.a1657p-4, 0x1.aabf96p-2, -0x1.779eecp-1, -0x1.d69d64p-4, 0x1.a77acap-2, -0x1.47e376p-2, 0x1.2a4cbap-3, -0x1.acb9bep-3, -0x1.e0895ap+0, 0x1.35b7cap+0, 0x1.87fabap-3, -0x1.dbeaep-2, -0x1.0f59eep-3, -0x1.13742ap-2, 0x1.ea2a2cp-3, 0x1.ed3e42p-2, -0x1.87f7c4p-1, -0x1.38bd7ep-1, -0x1.2500a2p-3, 0x1.99be54p+0, -0x1.5fdbfep-1, 0x1.2ef08p+0, 0x1.8a3f32p+0, 0x1.51ab92p-1, -0x1.99923ep-4, 0x1.a3d0e8p-1, 0x1.2db06p-4, 0x1.27b1a4p-1, 0x1.e6927ep+0, -0x1.4f0cbp-4, -0x1.b943b2p-1, -0x1.4580e6p-1, -0x1.e28966p-1, 0x1.c9e246p-2, 0x1.19efcap-4, 0x1.9ceb8cp-3),
#               f3:(-0x1.801fb2p-2, 0x1.5281cep+0, -0x1.2d39f2p-2, 0x1.df656ep+0, 0x1.1dea3ap+0, 0x1.05c62ap+0, 0x1.65a8f8p+0, 0x1.39b73cp-2, -0x1.85c47ap-3, 0x1.4c01p+0, 0x1.67e686p-1, 0x1.3f96ecp-9, 0x1.dfaab2p-2, 0x1.16dca4p-3, -0x1.10372ap-1, 0x1.c51bb4p-3, 0x1.59ec96p-2, 0x1.aadb24p+0, -0x1.1dcc54p+0, -0x1.e9008ep-2, -0x1.67527ep-4, -0x1.4fef74p-3, 0x1.8c919ep-2, 0x1.5a6b8ap-6, -0x1.954786p-2, -0x1.e7a246p-4, -0x1.570a18p-1, -0x1.9806f8p-1, -0x1.f30e86p-1, 0x1.416af6p-5, 0x1.38cd8cp-2, -0x1.391c24p-1, 0x1.b79068p-1, 0x1.2cb1bcp-1, 0x1.79c534p-1, 0x1.f180d8p-1, 0x1.aa5e98p-2, -0x1.bb1f8p-1, 0x1.bab6ep-1, 0x1.5a26bcp-3, -0x1.34ff82p+0, -0x1.f70f78p-1, 0x1.a6f888p-1, -0x1.b5649cp-1, -0x1.b80778p-2, -0x1.9ab452p-2, -0x1.5103e8p+0, -0x1.23781ap+0),
#               f4:(-0x1.961dep-1, -0x1.c4bfc8p-2, 0x1.c236d8p-1, -0x1.92aad8p-1, -0x1.08cc06p-1, 0x1.20b77p-2, 0x1.0aed8cp+0, -0x1.c9879ep+0, 0x1.4bb328p-1, 0x1.13257ap-1, 0x1.f7c876p-1, -0x1.86b3d8p-1, -0x1.bcd874p-2, 0x1.58fb88p-3, 0x1.54f802p-1, -0x1.58e50ep-3, -0x1.5f4a7p-2, -0x1.4dc452p-2, 0x1.125c88p-3, 0x1.be5078p+0, 0x1.e69de2p-1, -0x1.40e0eap-2, 0x1.f0f18p-2, -0x1.bf8b84p-1, 0x1.b489b2p-1, -0x1.08a3eap+0, -0x1.044c28p-3, 0x1.32b046p-2, -0x1.0d077cp+0, 0x1.de145ep-1, 0x1.794542p+0, 0x1.5aeaa8p+0, -0x1.27b6c4p-2, -0x1.4846d6p-1, 0x1.d3ca4ap-1, -0x1.7d479p-3, 0x1.cb222cp-4, -0x1.ddec88p-3, -0x1.f13ae6p-6, -0x1.2e1b74p-2, 0x1.11a282p-1, 0x1.809056p+0, -0x1.2e2a2ap-2, 0x1.e1b552p-5, -0x1.241174p-3, -0x1.e29086p-1, 0x1.cc5beap-2, 0x1.dc0e26p-2),
#               f5:(-0x1.27cc78p-1, 0x1.17f75p-1, 0x1.41a03cp-3, -0x1.d0ce8p-4, 0x1.73199p-2, 0x1.e2cd0cp-5, -0x1.8ae28ep-2, -0x1.f2bfd6p-7, 0x1.62b0eep+0, 0x1.5de1dcp-2, -0x1.d97dcap-2, 0x1.0a650ap+0, -0x1.44913ep-4, 0x1.1bb3dap-2, 0x1.b500e8p-1, -0x1.af268ap-2, 0x1.63c39ep+0, -0x1.1c4c6p+0, 0x1.0a52d8p-2, -0x1.7b636cp-2, -0x1.f3b68ep-3, -0x1.ea5552p-4, 0x1.2304d6p-2, 0x1.6dd878p+0, -0x1.38e2bp-3, 0x1.dd910ap-1, -0x1.9914dap+0, 0x1.0a8426p+0, 0x1.e3bf08p-2, -0x1.a5813cp-2, -0x1.10df2ep-2, 0x1.29a6dep-3, -0x1.62a28ap-1, 0x1.8bb16p-2, 0x1.30be86p-1, -0x1.fb942ap-5, 0x1.0984c6p-4, -0x1.a1b716p-2, 0x1.c68ed6p-1, 0x1.63a87ep-3, -0x1.06fe72p+0, -0x1.6b8dacp-3, -0x1.5d1a36p-2, -0x1.fc7de8p-1, -0x1.8b1f24p-2, -0x1.5d8a48p-4, -0x1.83c478p-1, -0x1.7123a6p-1),
#               f6:(-0x1.e87588p-3, -0x1.91ff5p-2, -0x1.9ce5f8p-3, -0x1.fe698ap-1, 0x1.8ef9dcp-2, 0x1.c4e484p-3, -0x1.3c1be2p+0, -0x1.7b9cbep+0, -0x1.c8f18ep-1, 0x1.e46bf2p-3, 0x1.5583cp+0, -0x1.8f2f3cp-4, 0x1.4ec34p+0, 0x1.5ee1aap+0, 0x1.736b8p-2, -0x1.32d414p-2, 0x1.451c0cp-3, -0x1.ef8faep-3, 0x1.88824ap-1, -0x1.627066p-1, 0x1.f259bep-1, 0x1.05051cp-2, 0x1.f9036ap-1, -0x1.668a76p-2, -0x1.31324p-1, 0x1.d2f2d4p+0, 0x1.7f0816p-2, -0x1.2ef342p+1, -0x1.5fe1b6p+0, -0x1.c00d84p-4, 0x1.6b082p-1, 0x1.1543bp-2, -0x1.7f697p-3, -0x1.1f8a84p+0, -0x1.3474cp-1, -0x1.bb94ep-1, 0x1.f01882p-5, -0x1.60718p-2, 0x1.c4ac78p-1, -0x1.a974c6p-2, 0x1.0a2b8p-2, 0x1.113dfap-6, -0x1.5e8a78p+0, 0x1.da9feap-3, 0x1.f73346p-2, 0x1.608848p-2, -0x1.c0d492p-2, 0x1.2b5c8ap-1)]
# {IN}  Y_N1 = [f1:(-0x1.85ca78p-2, -0x1.9822acp+0, 0x1.74be6cp-2, 0x1.8afdc6p-1, -0x1.e0d398p-3, -0x1.96d708p-1, -0x1.0b7edcp+0, 0x1.ce67p-9, 0x1.1cbf96p-3, 0x1.d4dbd2p+0, -0x1.fee04ep-1, -0x1.72ede8p-3, 0x1.e1f22ap-3, -0x1.1cba48p-2, -0x1.35095p-5, -0x1.9d9d18p-1, -0x1.70bd88p-4, 0x1.72751p-1, 0x1.39e68ap-1, -0x1.aa7bfp-5, 0x1.4fbb64p-1, -0x1.14c83cp-1, -0x1.be94dp-2, -0x1.76462cp-2, 0x1.0f185ap+0, 0x1.7524e4p-3, 0x1.de5d4p-4, 0x1.4c820ep-2, 0x1.48625cp-2, -0x1.e232e6p-1, -0x1.4058f6p-3, 0x1.b442aep-3, -0x1.d2b57cp-5, -0x1.14e8bcp-1, -0x1.e4389ap-2, -0x1.ed1396p-2, 0x1.0f3ccp-1, -0x1.143edp-6, 0x1.0d8788p+0, -0x1.795a8ap-1, 0x1.a56284p+0, 0x1.23a28p-1, -0x1.d2ef18p-5, 0x1.20028ep+0, -0x1.b237acp-1, -0x1.06eb76p-2, 0x1.3f89bcp+0, 0x1.af1048p-1),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# {OUT} Y_N2 = [f1:(-0x1.a5f81cp+0, -0x1.4c7bcp-4, 0x1.cdf82p+0, 0x1.a86e48p+0, 0x1.fc0acp-4, -0x1.1fd3ap-1, -0x1.ed3d6p-3, 0x1.3a2dep-2, 0x1.1d6854p+2, -0x1.9a02cp+1, -0x1.69285cp+2, -0x1.6c8254p+2),
#               f2:(0x1.42629cp+2, -0x1.0b151p+2, 0x1.36ada8p+0, 0x1.672598p+1, -0x1.ef2756p+1, -0x1.c8d1b2p+1, 0x1.a67e34p+0, -0x1.a5af24p+2, -0x1.9baa56p+2, 0x1.39a82ap+1, 0x1.c978d2p+3, 0x1.85ba4cp+1),
#               f3:(0x1.4b6548p+3, 0x1.0289fep+4, -0x1.b166acp+2, -0x1.d8cb58p+0, 0x1.12b0ep+0, -0x1.0bc618p+0, 0x1.d2fec4p+0, -0x1.92a48p-3, 0x1.f1606p+1, -0x1.9e258ep+1, 0x1.7ec53cp+3, -0x1.8ac892p+2),
#               f4:(0x1.14dd0cp+1, 0x1.0ed354p+2, -0x1.5a5612p+1, -0x1.34a21p-1, 0x1.8e50e8p+1, 0x1.c1a538p+0, -0x1.1d8a38p+2, -0x1.1fdd8cp+2, -0x1.cd34p-8, -0x1.6c1a6p+0, 0x1.b46cd4p+1, 0x1.16d56p+0),
#               f5:(-0x1.4928d8p-1, -0x1.c8caecp+1, -0x1.2bdf28p+0, -0x1.e1027p+2, 0x1.8b987ep+1, -0x1.1f1558p+0, -0x1.e677fp+0, 0x1.852a3ep+2, -0x1.9486fap+2, -0x1.2493ccp+2, 0x1.72211cp+2, 0x1.6d9c14p+3),
#               f6:(-0x1.aa003p+0, -0x1.81cb7cp+0, -0x1.a0b3b2p+2, -0x1.02b6p+2, -0x1.e1594p-4, 0x1.a2bfc8p+1, -0x1.201a66p+2, 0x1.1fa8bep+2, 0x1.058a18p+1, -0x1.c081ecp+0, 0x1.67656cp+2, -0x1.1d2bep+2)]
# Returned status: 0
#
# Quantizer_standard::process(const float32 Y_N1[6x12], int8 Y_N2[6x12])
# {IN}  Y_N1 = [f1:(-0x1.a5f81cp+0, -0x1.4c7bcp-4, 0x1.cdf82p+0, 0x1.a86e48p+0, 0x1.fc0acp-4, -0x1.1fd3ap-1, -0x1.ed3d6p-3, 0x1.3a2dep-2, 0x1.1d6854p+2, -0x1.9a02cp+1, -0x1.69285cp+2, -0x1.6c8254p+2),
#               f2:(0x1.42629cp+2, -0x1.0b151p+2, 0x1.36ada8p+0, 0x1.672598p+1, -0x1.ef2756p+1, -0x1.c8d1b2p+1, 0x1.a67e34p+0, -0x1.a5af24p+2, -0x1.9baa56p+2, 0x1.39a82ap+1, 0x1.c978d2p+3, 0x1.85ba4cp+1),
#               f3:(0x1.4b6548p+3, 0x1.0289fep+4, -0x1.b166acp+2, -0x1.d8cb58p+0, 0x1.12b0ep+0, -0x1.0bc618p+0, 0x1.d2fec4p+0, -0x1.92a48p-3, 0x1.f1606p+1, -0x1.9e258ep+1, 0x1.7ec53cp+3, -0x1.8ac892p+2),
#               f4:(0x1.14dd0cp+1, 0x1.0ed354p+2, -0x1.5a5612p+1, -0x1.34a21p-1, 0x1.8e50e8p+1, 0x1.c1a538p+0, -0x1.1d8a38p+2, -0x1.1fdd8cp+2, -0x1.cd34p-8, -0x1.6c1a6p+0, 0x1.b46cd4p+1, 0x1.16d56p+0),
#               f5:(-0x1.4928d8p-1, -0x1.c8caecp+1, -0x1.2bdf28p+0, -0x1.e1027p+2, 0x1.8b987ep+1, -0x1.1f1558p+0, -0x1.e677fp+0, 0x1.852a3ep+2, -0x1.9486fap+2, -0x1.2493ccp+2, 0x1.72211cp+2, 0x1.6d9c14p+3),
#               f6:(-0x1.aa003p+0, -0x1.81cb7cp+0, -0x1.a0b3b2p+2, -0x1.02b6p+2, -0x1.e1594p-4, 0x1.a2bfc8p+1, -0x1.201a66p+2, 0x1.1fa8bep+2, 0x1.058a18p+1, -0x1.c081ecp+0, 0x1.67656cp+2, -0x1.1d2bep+2)]
# {OUT} Y_N2 = [f1:(0xfffffff3, 0xffffffff, 0xe, 0xd, 0x1, 0xfffffffc, 0xfffffffe, 0x2, 0x24, 0xffffffe6, 0xffffffd3, 0xffffffd2),
#               f2:(0x28, 0xffffffdf, 0xa, 0x16, 0xffffffe1, 0xffffffe3, 0xd, 0xffffffcb, 0xffffffcd, 0x14, 0x72, 0x18),
#               f3:(0x53, 0x7f, 0xffffffca, 0xfffffff1, 0x9, 0xfffffff8, 0xf, 0xfffffffe, 0x1f, 0xffffffe6, 0x60, 0xffffffcf),
#               f4:(0x11, 0x22, 0xffffffea, 0xfffffffb, 0x19, 0xe, 0xffffffdc, 0xffffffdc, 0x0, 0xfffffff5, 0x1b, 0x9),
#               f5:(0xfffffffb, 0xffffffe3, 0xfffffff7, 0xffffffc4, 0x19, 0xfffffff7, 0xfffffff1, 0x31, 0xffffffcd, 0xffffffdb, 0x2e, 0x5b),
#               f6:(0xfffffff3, 0xfffffff4, 0xffffffcc, 0xffffffe0, 0xffffffff, 0x1a, 0xffffffdc, 0x24, 0x10, 0xfffffff2, 0x2d, 0xffffffdc)]
# Returned status: 0
#
# Puncturer_NO::depuncture(const int8 Y_N1[6x12], int8 Y_N2[6x12])
# {IN}  Y_N1 = [f1:(0xfffffff3, 0xffffffff, 0xe, 0xd, 0x1, 0xfffffffc, 0xfffffffe, 0x2, 0x24, 0xffffffe6, 0xffffffd3, 0xffffffd2),
#               f2:(0x28, 0xffffffdf, 0xa, 0x16, 0xffffffe1, 0xffffffe3, 0xd, 0xffffffcb, 0xffffffcd, 0x14, 0x72, 0x18),
#               f3:(0x53, 0x7f, 0xffffffca, 0xfffffff1, 0x9, 0xfffffff8, 0xf, 0xfffffffe, 0x1f, 0xffffffe6, 0x60, 0xffffffcf),
#               f4:(0x11, 0x22, 0xffffffea, 0xfffffffb, 0x19, 0xe, 0xffffffdc, 0xffffffdc, 0x0, 0xfffffff5, 0x1b, 0x9),
#               f5:(0xfffffffb, 0xffffffe3, 0xfffffff7, 0xffffffc4, 0x19, 0xfffffff7, 0xfffffff1, 0x31, 0xffffffcd, 0xffffffdb, 0x2e, 0x5b),
#               f6:(0xfffffff3, 0xfffffff4, 0xffffffcc, 0xffffffe0, 0xffffffff, 0x1a, 0xffffffdc, 0x24, 0x10, 0xfffffff2, 0x2d, 0xffffffdc)]
# {OUT} Y_N2 = [f1:(0xfffffff3, 0xffffffff, 0xe, 0xd, 0x1, 0xfffffffc, 0xfffffffe, 0x2, 0x24, 0xffffffe6, 0xffffffd3, 0xffffffd2),
#               f2:(0x28, 0xffffffdf, 0xa, 0x16, 0xffffffe1, 0xffffffe3, 0xd, 0xffffffcb, 0xffffffcd, 0x14, 0x72, 0x18),
#               f3:(0x53, 0x7f, 0xffffffca, 0xfffffff1, 0x9, 0xfffffff8, 0xf, 0xfffffffe, 0x1f, 0xffffffe6, 0x60, 0xffffffcf),
#               f4:(0x11, 0x22, 0xffffffea, 0xfffffffb, 0x19, 0xe, 0xffffffdc, 0xffffffdc, 0x0, 0xfffffff5, 0x1b, 0x9),
#               f5:(0xfffffffb, 0xffffffe3, 0xfffffff7, 0xffffffc4, 0x19, 0xfffffff7, 0xfffffff1, 0x31, 0xffffffcd, 0xffffffdb, 0x2e, 0x5b),
#               f6:(0xfffffff3, 0xfffffff4, 0xffffffcc, 0xffffffe0, 0xffffffff, 0x1a, 0xffffffdc, 0x24, 0x10, 0xfffffff2, 0x2d, 0xffffffdc)]
# Returned status: 0
#
# Decoder_NO::decode_siho(const int8 Y_N[6x12], int8 V_K[6x12])
# {IN}  Y_N = [f1:(0xfffffff3, 0xffffffff, 0xe, 0xd, 0x1, 0xfffffffc, 0xfffffffe, 0x2, 0x24, 0xffffffe6, 0xffffffd3, 0xffffffd2),
#              f2:(0x28, 0xffffffdf, 0xa, 0x16, 0xffffffe1, 0xffffffe3, 0xd, 0xffffffcb, 0xffffffcd, 0x14, 0x72, 0x18),
#              f3:(0x53, 0x7f, 0xffffffca, 0xfffffff1, 0x9, 0xfffffff8, 0xf, 0xfffffffe, 0x1f, 0xffffffe6, 0x60, 0xffffffcf),
#              f4:(0x11, 0x22, 0xffffffea, 0xfffffffb, 0x19, 0xe, 0xffffffdc, 0xffffffdc, 0x0, 0xfffffff5, 0x1b, 0x9),
#              f5:(0xfffffffb, 0xffffffe3, 0xfffffff7, 0xffffffc4, 0x19, 0xfffffff7, 0xfffffff1, 0x31, 0xffffffcd, 0xffffffdb, 0x2e, 0x5b),
#              f6:(0xfffffff3, 0xfffffff4, 0xffffffcc, 0xffffffe0, 0xffffffff, 0x1a, 0xffffffdc, 0x24, 0x10, 0xfffffff2, 0x2d, 0xffffffdc)]
# {OUT} V_K = [f1:(0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1),
#              f2:(0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#              f3:(0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1),
#              f4:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0),
#              f5:(0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0),
#              f6:(0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1)]
# Returned status: 0
#
# CRC_NO::extract(const int8 V_K1[6x12], int8 V_K2[6x12])
# {IN}  V_K1 = [f1:(0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1),
#               f2:(0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#               f3:(0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1),
#               f4:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0),
#               f5:(0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0),
#               f6:(0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1)]
# {OUT} V_K2 = [f1:(0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1),
#               f2:(0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#               f3:(0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1),
#               f4:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0),
#               f5:(0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0),
#               f6:(0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1)]
# Returned status: 0
#
# Monitor_BFER::check_errors(const int8 U[6x12], const int8 V[6x12])
# {IN}  U = [f1:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1),
#            f2:(0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#            f3:(0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1),
#            f4:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0),
#            f5:(0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0),
#            f6:(0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1)]
# {IN}  V = [f1:(0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1),
#            f2:(0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#            f3:(0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1),
#            f4:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0),
#            f5:(0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0),
#            f6:(0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1)]
# Returned status: 4
#
# -------------------------------
# New communication (nÂ°15)
# -------------------------------
#
# Source_random::generate(int8 U_K[6x12])
# {OUT} U_K = [f1:(0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1),
#              f2:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#              f3:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0),
#              f4:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0),
#              f5:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0),
#              f6:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0)]
# Returned status: 0
#
# CRC_NO::build(const int8 U_K1[6x12], int8 U_K2[6x12])
# {IN}  U_K1 = [f1:(0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1),
#               f2:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#               f3:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0),
#               f4:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0),
#               f5:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0),
#               f6:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0)]
# {OUT} U_K2 = [f1:(0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1),
#               f2:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#               f3:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0),
#               f4:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0),
#               f5:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0),
#               f6:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0)]
# Returned status: 0
#
# Encoder_NO::encode(const int8 U_K[6x12], int8 X_N[6x12])
# {IN}  U_K = [f1:(0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1),
#              f2:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#              f3:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0),
#              f4:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0),
#              f5:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0),
#              f6:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0)]
# {OUT} X_N = [f1:(0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1),
#              f2:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#              f3:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0),
#              f4:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0),
#              f5:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0),
#              f6:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0)]
# Returned status: 0
#
# Puncturer_NO::puncture(const int8 X_N1[6x12], int8 X_N2[6x12])
# {IN}  X_N1 = [f1:(0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1),
#               f2:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#               f3:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0),
#               f4:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0),
#               f5:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0),
#               f6:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0)]
# {OUT} X_N2 = [f1:(0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1),
#               f2:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#               f3:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0),
#               f4:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0),
#               f5:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0),
#               f6:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0)]
# Returned status: 0
#
# Modem_SCMA::modulate(const int8 X_N1[6x12], float32 X_N2[6x48])
# {IN}  X_N1 = [f1:(0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1),
#               f2:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#               f3:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0),
#               f4:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0),
#               f5:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0),
#               f6:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0)]
# {OUT} X_N2 = [f1:(0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0),
#               f2:(-0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0),
#               f3:(0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3),
#               f5:(0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3),
#               f6:(0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Channel_Rayleigh_LLR::add_noise_wg(const float32 X_N[6x48], float32 H_N[6x48], float32 Y_N[6x48])
# {IN}  X_N = [f1:(0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0),
#              f2:(-0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0),
#              f3:(0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3),
#              f5:(0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3),
#              f6:(0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0)]
# {OUT} H_N = [f1:(0x1.57e54ap-1, 0x1.323212p-2, 0x1.ef0e68p-3, 0x1.ee665p-2, -0x1.409a7ap-1, -0x1.64c674p-4, 0x1.7dc108p-2, 0x1.85f23ep-4, 0x1.b9dc4cp-1, 0x1.a19b2cp-3, 0x1.341ca2p-1, 0x1.c49ce2p-3, -0x1.873032p-1, 0x1.f9878ep-3, -0x1.95f456p-5, 0x1.53fc2ap-3, -0x1.720f6cp-2, -0x1.aed1acp-2, 0x1.4403eap-1, -0x1.b09d1cp+0, 0x1.e0f968p-3, 0x1.308efap-1, 0x1.53218ep-3, -0x1.27608ep-4, 0x1.3ed17ep-3, 0x1.b2487cp-1, -0x1.4df122p+0, 0x1.395ee4p+0, -0x1.c6f8bap-2, -0x1.a360ccp-2, 0x1.4e2106p-1, 0x1.13afdcp-3, 0x1.b10a2ap-2, 0x1.894632p-2, 0x1.e467eep-3, 0x1.ba45fep-4, -0x1.a2a9cep-2, -0x1.4f914ap-1, -0x1.e14bb2p-1, -0x1.d372a6p-3, 0x1.b187a8p-5, 0x1.499a4ep-2, -0x1.0ba2dp-1, 0x1.d8710cp-1, -0x1.53f0a2p-2, 0x1.38e768p-1, 0x1.2e99cp-1, -0x1.4248b2p-2),
#              f2:(-0x1.9f887ep-2, 0x1.8c0f7ap-1, -0x1.7fef2p-4, 0x1.533c1cp-2, 0x1.13bbdcp-3, -0x1.6dd3ccp+0, -0x1.1c1bbap+0, 0x1.b46016p-2, -0x1.7f569p-3, 0x1.8c91b8p-1, 0x1.351d92p-1, -0x1.3ce74cp+0, 0x1.36615cp-3, -0x1.2d377p-1, 0x1.c6a9fp-2, 0x1.041d8cp-5, 0x1.e4b274p-1, 0x1.e84fb4p-1, 0x1.098b6p-1, -0x1.2670d8p-1, -0x1.a266eep-1, 0x1.f82164p-3, -0x1.d7cba2p-1, 0x1.662bbp-1, -0x1.7ce87cp-1, -0x1.f59d46p-1, 0x1.9326c4p-1, -0x1.abdf2cp-2, 0x1.4ab1f2p-3, 0x1.7b4956p-2, 0x1.09a12p-1, 0x1.bfba18p-4, 0x1.adb062p-1, -0x1.d55072p-2, -0x1.2274bp+0, 0x1.7946fp+0, 0x1.2e4bf4p-3, 0x1.037f32p-3, 0x1.3dbbdcp-2, -0x1.ac13ep-5, 0x1.5460cp-1, 0x1.a17ec2p-2, -0x1.d344a4p-2, -0x1.0be474p-2, 0x1.932a5p-2, 0x1.dd06b8p-6, -0x1.911888p-2, 0x1.09230ep-2),
#              f3:(0x1.1f4c5p-1, -0x1.5a30c4p-3, 0x1.ae318cp-2, -0x1.3ef4c8p-3, 0x1.1614d2p-1, -0x1.3e8f58p-2, 0x1.f29848p-2, -0x1.053f0ep+0, 0x1.0b710ap-2, -0x1.3519c2p-3, -0x1.b5f15p-1, 0x1.09155p-1, 0x1.05ffe8p+0, 0x1.46a574p-4, 0x1.a1e008p-2, 0x1.20d79ap-5, 0x1.f4c41ap-2, -0x1.77d74ap-1, 0x1.6a4e2ep-1, 0x1.abc912p-2, 0x1.36c96ap-2, -0x1.2c4da8p-1, 0x1.38805cp+0, 0x1.9e9766p+0, -0x1.e5688ep-1, 0x1.a1af16p-2, -0x1.1f7e7ep-1, -0x1.48d69ap-2, 0x1.bc50e6p-1, 0x1.94474p-2, 0x1.f65a6ap-1, -0x1.c00f92p-1, 0x1.3fffbp-1, 0x1.12a5a8p-9, -0x1.650edp+0, 0x1.0a9abp+0, 0x1.7d06bap-5, 0x1.a30b8p-3, -0x1.11eb2ep-1, 0x1.21188ep-3, 0x1.2787aap-2, -0x1.694b2ep-1, -0x1.7c4c86p-2, 0x1.61e3c4p-1, -0x1.462f6ap-4, 0x1.22a684p-1, -0x1.d7134p-1, 0x1.ae7962p-3),
#              f4:(-0x1.0c5e5cp+0, -0x1.af561ap-1, 0x1.b007ccp-1, 0x1.8b93c4p-1, 0x1.50d85p-1, 0x1.0c4d4p-1, 0x1.68cc9ep-3, -0x1.58d49p-3, 0x1.7b1b6cp+0, 0x1.ae405ap-2, -0x1.f59ae8p-2, 0x1.1885a8p-1, -0x1.570462p-1, -0x1.2985fp-1, -0x1.4aefdap+0, -0x1.05f3dep-2, 0x1.921ac4p-2, 0x1.2cc39cp+0, 0x1.6835b8p-1, -0x1.1d2a94p+0, -0x1.7db086p-2, -0x1.ebbeb8p-2, -0x1.a3c9fap-2, -0x1.e7f42ap+0, -0x1.794f78p-1, -0x1.7ff82cp-1, -0x1.3ce5a2p-2, -0x1.717314p-1, -0x1.7b11c6p-1, -0x1.7d4f7cp-1, -0x1.7261cep-1, 0x1.64d046p-4, -0x1.ca89e6p-3, 0x1.272e8ap-4, 0x1.577b1cp-1, -0x1.1ffd6p-1, -0x1.a77aa8p-1, 0x1.6728eap+0, 0x1.a7ee68p+0, -0x1.c2bd1ep-2, -0x1.6331ecp-1, 0x1.74109ep-4, 0x1.3d9f0ap+0, -0x1.24cefp+0, -0x1.168582p-2, 0x1.8cb064p-2, -0x1.f771f2p-1, -0x1.1c2e28p+0),
#              f5:(0x1.d77c44p-1, 0x1.69d336p-2, 0x1.11d71p+0, -0x1.a51104p-2, 0x1.cc0678p-3, -0x1.89c588p-1, 0x1.4f755cp-2, 0x1.195864p-1, -0x1.6d86ccp+0, -0x1.51f1eep-2, 0x1.570d06p-2, 0x1.34e1ep-4, 0x1.9992ep-1, 0x1.24ae72p-3, 0x1.5e96a2p+0, -0x1.795ac6p-2, -0x1.288d4ep-1, -0x1.7a60d8p-3, 0x1.60d0aap-2, 0x1.1ee6b4p-1, 0x1.0fdb34p-1, -0x1.9249ap-1, -0x1.fbfae2p-2, 0x1.154592p+0, 0x1.4c5f14p-3, -0x1.5938b2p-1, 0x1.c7742ap-5, 0x1.eecc96p-3, 0x1.d9465cp-2, -0x1.796df4p-1, -0x1.e381fp-4, -0x1.291638p-1, -0x1.918e8p+0, 0x1.743c4cp-3, 0x1.73c6b8p-2, -0x1.0d1876p-1, 0x1.f7e2dep-2, 0x1.dfd4bep-3, 0x1.6d2332p-2, 0x1.5abf26p-1, 0x1.a66bbep-4, -0x1.1d3dc8p+0, 0x1.15a998p-1, 0x1.b38db8p-6, -0x1.72df9cp-6, 0x1.0424b8p-1, 0x1.05ee8ep-1, 0x1.ece534p-3),
#              f6:(0x1.d35ddcp-1, -0x1.0f6dacp-2, 0x1.ab563cp+0, 0x1.8aa586p-3, 0x1.03d4c4p-1, 0x1.2dfd4p+0, 0x1.c1c736p-2, 0x1.3c82e6p-6, -0x1.1c1996p-4, -0x1.0efb8cp-2, -0x1.e4c93ap-2, -0x1.3b1bcep+0, 0x1.b3447cp-2, -0x1.605ecap-1, -0x1.096e3ep+0, 0x1.a9f012p-2, 0x1.e3a646p-2, -0x1.6e9db4p-1, 0x1.2c8a72p+0, 0x1.2dfe7ap+0, 0x1.36c63p+0, -0x1.51579ap-1, -0x1.2ce948p-4, 0x1.8a8ff6p-4, -0x1.1fc82ep-3, 0x1.323b2ep-1, -0x1.5fc968p-1, 0x1.69c1a2p-2, -0x1.1bf234p-1, 0x1.613418p-2, 0x1.98f0d4p+0, 0x1.76d022p+0, 0x1.1a0368p-2, -0x1.e71c7ep-5, -0x1.522d6ep-1, 0x1.b8b11cp-1, 0x1.220d5ap-1, -0x1.c30c64p-3, 0x1.f772d6p-1, -0x1.bc47dcp-3, 0x1.af6648p-2, 0x1.8dea7cp-1, -0x1.622706p-1, -0x1.7bd7ep-2, -0x1.c5483cp-3, -0x1.c69596p-3, -0x1.89897ep-2, -0x1.3371bp-4)]
# {OUT} Y_N = [f1:(0x1.94bf08p-3, -0x1.610bb8p-2, -0x1.5c9f28p-2, 0x1.d6f8a4p-1, 0x1.540f94p-3, 0x1.86dcd6p+0, 0x1.317c46p-1, 0x1.8c68ccp-3, 0x1.041104p-2, 0x1.0941p-2, -0x1.1971dap-4, 0x1.ca2366p-1, -0x1.3e0982p-1, 0x1.c10d2cp-3, 0x1.8042bcp-1, -0x1.8f6828p-1, -0x1.32e028p-1, -0x1.0ccaacp-1, -0x1.5caad2p-1, 0x1.f06a16p+0, -0x1.371938p-4, 0x1.56ccbep-2, 0x1.a3f9f8p-2, -0x1.eab4cap-1, -0x1.c1d83cp-4, -0x1.dc4178p-1, 0x1.af6fc2p+0, -0x1.f021eap-1, 0x1.ef3574p-2, -0x1.9f642p-4, -0x1.cd3346p-4, 0x1.47167p-1, 0x1.ae8ae4p-5, 0x1.70fa4ep+0, -0x1.e0abf4p-4, 0x1.874de8p-4, -0x1.3b2ccep-1, 0x1.b871aep-1, -0x1.1304fep-2, -0x1.ae1ee2p-1, -0x1.7a6326p-1, 0x1.a06748p-2, -0x1.1102acp-1, 0x1.5c89ep-4, 0x1.02c09p-5, 0x1.e4c33ep-2, -0x1.1cc984p-1, 0x1.04de7cp-1),
#              f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Modem_SCMA::filter(const float32 Y_N1[6x48], float32 Y_N2[6x48])
# {IN}  Y_N1 = [f1:(0x1.94bf08p-3, -0x1.610bb8p-2, -0x1.5c9f28p-2, 0x1.d6f8a4p-1, 0x1.540f94p-3, 0x1.86dcd6p+0, 0x1.317c46p-1, 0x1.8c68ccp-3, 0x1.041104p-2, 0x1.0941p-2, -0x1.1971dap-4, 0x1.ca2366p-1, -0x1.3e0982p-1, 0x1.c10d2cp-3, 0x1.8042bcp-1, -0x1.8f6828p-1, -0x1.32e028p-1, -0x1.0ccaacp-1, -0x1.5caad2p-1, 0x1.f06a16p+0, -0x1.371938p-4, 0x1.56ccbep-2, 0x1.a3f9f8p-2, -0x1.eab4cap-1, -0x1.c1d83cp-4, -0x1.dc4178p-1, 0x1.af6fc2p+0, -0x1.f021eap-1, 0x1.ef3574p-2, -0x1.9f642p-4, -0x1.cd3346p-4, 0x1.47167p-1, 0x1.ae8ae4p-5, 0x1.70fa4ep+0, -0x1.e0abf4p-4, 0x1.874de8p-4, -0x1.3b2ccep-1, 0x1.b871aep-1, -0x1.1304fep-2, -0x1.ae1ee2p-1, -0x1.7a6326p-1, 0x1.a06748p-2, -0x1.1102acp-1, 0x1.5c89ep-4, 0x1.02c09p-5, 0x1.e4c33ep-2, -0x1.1cc984p-1, 0x1.04de7cp-1),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# {OUT} Y_N2 = [f1:(0x1.94bf08p-3, -0x1.610bb8p-2, -0x1.5c9f28p-2, 0x1.d6f8a4p-1, 0x1.540f94p-3, 0x1.86dcd6p+0, 0x1.317c46p-1, 0x1.8c68ccp-3, 0x1.041104p-2, 0x1.0941p-2, -0x1.1971dap-4, 0x1.ca2366p-1, -0x1.3e0982p-1, 0x1.c10d2cp-3, 0x1.8042bcp-1, -0x1.8f6828p-1, -0x1.32e028p-1, -0x1.0ccaacp-1, -0x1.5caad2p-1, 0x1.f06a16p+0, -0x1.371938p-4, 0x1.56ccbep-2, 0x1.a3f9f8p-2, -0x1.eab4cap-1, -0x1.c1d83cp-4, -0x1.dc4178p-1, 0x1.af6fc2p+0, -0x1.f021eap-1, 0x1.ef3574p-2, -0x1.9f642p-4, -0x1.cd3346p-4, 0x1.47167p-1, 0x1.ae8ae4p-5, 0x1.70fa4ep+0, -0x1.e0abf4p-4, 0x1.874de8p-4, -0x1.3b2ccep-1, 0x1.b871aep-1, -0x1.1304fep-2, -0x1.ae1ee2p-1, -0x1.7a6326p-1, 0x1.a06748p-2, -0x1.1102acp-1, 0x1.5c89ep-4, 0x1.02c09p-5, 0x1.e4c33ep-2, -0x1.1cc984p-1, 0x1.04de7cp-1),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Modem_SCMA::demodulate_wg(const float32 H_N[6x48], const float32 Y_N1[6x48], float32 Y_N2[6x12])
# {IN}  H_N  = [f1:(0x1.57e54ap-1, 0x1.323212p-2, 0x1.ef0e68p-3, 0x1.ee665p-2, -0x1.409a7ap-1, -0x1.64c674p-4, 0x1.7dc108p-2, 0x1.85f23ep-4, 0x1.b9dc4cp-1, 0x1.a19b2cp-3, 0x1.341ca2p-1, 0x1.c49ce2p-3, -0x1.873032p-1, 0x1.f9878ep-3, -0x1.95f456p-5, 0x1.53fc2ap-3, -0x1.720f6cp-2, -0x1.aed1acp-2, 0x1.4403eap-1, -0x1.b09d1cp+0, 0x1.e0f968p-3, 0x1.308efap-1, 0x1.53218ep-3, -0x1.27608ep-4, 0x1.3ed17ep-3, 0x1.b2487cp-1, -0x1.4df122p+0, 0x1.395ee4p+0, -0x1.c6f8bap-2, -0x1.a360ccp-2, 0x1.4e2106p-1, 0x1.13afdcp-3, 0x1.b10a2ap-2, 0x1.894632p-2, 0x1.e467eep-3, 0x1.ba45fep-4, -0x1.a2a9cep-2, -0x1.4f914ap-1, -0x1.e14bb2p-1, -0x1.d372a6p-3, 0x1.b187a8p-5, 0x1.499a4ep-2, -0x1.0ba2dp-1, 0x1.d8710cp-1, -0x1.53f0a2p-2, 0x1.38e768p-1, 0x1.2e99cp-1, -0x1.4248b2p-2),
#               f2:(-0x1.9f887ep-2, 0x1.8c0f7ap-1, -0x1.7fef2p-4, 0x1.533c1cp-2, 0x1.13bbdcp-3, -0x1.6dd3ccp+0, -0x1.1c1bbap+0, 0x1.b46016p-2, -0x1.7f569p-3, 0x1.8c91b8p-1, 0x1.351d92p-1, -0x1.3ce74cp+0, 0x1.36615cp-3, -0x1.2d377p-1, 0x1.c6a9fp-2, 0x1.041d8cp-5, 0x1.e4b274p-1, 0x1.e84fb4p-1, 0x1.098b6p-1, -0x1.2670d8p-1, -0x1.a266eep-1, 0x1.f82164p-3, -0x1.d7cba2p-1, 0x1.662bbp-1, -0x1.7ce87cp-1, -0x1.f59d46p-1, 0x1.9326c4p-1, -0x1.abdf2cp-2, 0x1.4ab1f2p-3, 0x1.7b4956p-2, 0x1.09a12p-1, 0x1.bfba18p-4, 0x1.adb062p-1, -0x1.d55072p-2, -0x1.2274bp+0, 0x1.7946fp+0, 0x1.2e4bf4p-3, 0x1.037f32p-3, 0x1.3dbbdcp-2, -0x1.ac13ep-5, 0x1.5460cp-1, 0x1.a17ec2p-2, -0x1.d344a4p-2, -0x1.0be474p-2, 0x1.932a5p-2, 0x1.dd06b8p-6, -0x1.911888p-2, 0x1.09230ep-2),
#               f3:(0x1.1f4c5p-1, -0x1.5a30c4p-3, 0x1.ae318cp-2, -0x1.3ef4c8p-3, 0x1.1614d2p-1, -0x1.3e8f58p-2, 0x1.f29848p-2, -0x1.053f0ep+0, 0x1.0b710ap-2, -0x1.3519c2p-3, -0x1.b5f15p-1, 0x1.09155p-1, 0x1.05ffe8p+0, 0x1.46a574p-4, 0x1.a1e008p-2, 0x1.20d79ap-5, 0x1.f4c41ap-2, -0x1.77d74ap-1, 0x1.6a4e2ep-1, 0x1.abc912p-2, 0x1.36c96ap-2, -0x1.2c4da8p-1, 0x1.38805cp+0, 0x1.9e9766p+0, -0x1.e5688ep-1, 0x1.a1af16p-2, -0x1.1f7e7ep-1, -0x1.48d69ap-2, 0x1.bc50e6p-1, 0x1.94474p-2, 0x1.f65a6ap-1, -0x1.c00f92p-1, 0x1.3fffbp-1, 0x1.12a5a8p-9, -0x1.650edp+0, 0x1.0a9abp+0, 0x1.7d06bap-5, 0x1.a30b8p-3, -0x1.11eb2ep-1, 0x1.21188ep-3, 0x1.2787aap-2, -0x1.694b2ep-1, -0x1.7c4c86p-2, 0x1.61e3c4p-1, -0x1.462f6ap-4, 0x1.22a684p-1, -0x1.d7134p-1, 0x1.ae7962p-3),
#               f4:(-0x1.0c5e5cp+0, -0x1.af561ap-1, 0x1.b007ccp-1, 0x1.8b93c4p-1, 0x1.50d85p-1, 0x1.0c4d4p-1, 0x1.68cc9ep-3, -0x1.58d49p-3, 0x1.7b1b6cp+0, 0x1.ae405ap-2, -0x1.f59ae8p-2, 0x1.1885a8p-1, -0x1.570462p-1, -0x1.2985fp-1, -0x1.4aefdap+0, -0x1.05f3dep-2, 0x1.921ac4p-2, 0x1.2cc39cp+0, 0x1.6835b8p-1, -0x1.1d2a94p+0, -0x1.7db086p-2, -0x1.ebbeb8p-2, -0x1.a3c9fap-2, -0x1.e7f42ap+0, -0x1.794f78p-1, -0x1.7ff82cp-1, -0x1.3ce5a2p-2, -0x1.717314p-1, -0x1.7b11c6p-1, -0x1.7d4f7cp-1, -0x1.7261cep-1, 0x1.64d046p-4, -0x1.ca89e6p-3, 0x1.272e8ap-4, 0x1.577b1cp-1, -0x1.1ffd6p-1, -0x1.a77aa8p-1, 0x1.6728eap+0, 0x1.a7ee68p+0, -0x1.c2bd1ep-2, -0x1.6331ecp-1, 0x1.74109ep-4, 0x1.3d9f0ap+0, -0x1.24cefp+0, -0x1.168582p-2, 0x1.8cb064p-2, -0x1.f771f2p-1, -0x1.1c2e28p+0),
#               f5:(0x1.d77c44p-1, 0x1.69d336p-2, 0x1.11d71p+0, -0x1.a51104p-2, 0x1.cc0678p-3, -0x1.89c588p-1, 0x1.4f755cp-2, 0x1.195864p-1, -0x1.6d86ccp+0, -0x1.51f1eep-2, 0x1.570d06p-2, 0x1.34e1ep-4, 0x1.9992ep-1, 0x1.24ae72p-3, 0x1.5e96a2p+0, -0x1.795ac6p-2, -0x1.288d4ep-1, -0x1.7a60d8p-3, 0x1.60d0aap-2, 0x1.1ee6b4p-1, 0x1.0fdb34p-1, -0x1.9249ap-1, -0x1.fbfae2p-2, 0x1.154592p+0, 0x1.4c5f14p-3, -0x1.5938b2p-1, 0x1.c7742ap-5, 0x1.eecc96p-3, 0x1.d9465cp-2, -0x1.796df4p-1, -0x1.e381fp-4, -0x1.291638p-1, -0x1.918e8p+0, 0x1.743c4cp-3, 0x1.73c6b8p-2, -0x1.0d1876p-1, 0x1.f7e2dep-2, 0x1.dfd4bep-3, 0x1.6d2332p-2, 0x1.5abf26p-1, 0x1.a66bbep-4, -0x1.1d3dc8p+0, 0x1.15a998p-1, 0x1.b38db8p-6, -0x1.72df9cp-6, 0x1.0424b8p-1, 0x1.05ee8ep-1, 0x1.ece534p-3),
#               f6:(0x1.d35ddcp-1, -0x1.0f6dacp-2, 0x1.ab563cp+0, 0x1.8aa586p-3, 0x1.03d4c4p-1, 0x1.2dfd4p+0, 0x1.c1c736p-2, 0x1.3c82e6p-6, -0x1.1c1996p-4, -0x1.0efb8cp-2, -0x1.e4c93ap-2, -0x1.3b1bcep+0, 0x1.b3447cp-2, -0x1.605ecap-1, -0x1.096e3ep+0, 0x1.a9f012p-2, 0x1.e3a646p-2, -0x1.6e9db4p-1, 0x1.2c8a72p+0, 0x1.2dfe7ap+0, 0x1.36c63p+0, -0x1.51579ap-1, -0x1.2ce948p-4, 0x1.8a8ff6p-4, -0x1.1fc82ep-3, 0x1.323b2ep-1, -0x1.5fc968p-1, 0x1.69c1a2p-2, -0x1.1bf234p-1, 0x1.613418p-2, 0x1.98f0d4p+0, 0x1.76d022p+0, 0x1.1a0368p-2, -0x1.e71c7ep-5, -0x1.522d6ep-1, 0x1.b8b11cp-1, 0x1.220d5ap-1, -0x1.c30c64p-3, 0x1.f772d6p-1, -0x1.bc47dcp-3, 0x1.af6648p-2, 0x1.8dea7cp-1, -0x1.622706p-1, -0x1.7bd7ep-2, -0x1.c5483cp-3, -0x1.c69596p-3, -0x1.89897ep-2, -0x1.3371bp-4)]
# {IN}  Y_N1 = [f1:(0x1.94bf08p-3, -0x1.610bb8p-2, -0x1.5c9f28p-2, 0x1.d6f8a4p-1, 0x1.540f94p-3, 0x1.86dcd6p+0, 0x1.317c46p-1, 0x1.8c68ccp-3, 0x1.041104p-2, 0x1.0941p-2, -0x1.1971dap-4, 0x1.ca2366p-1, -0x1.3e0982p-1, 0x1.c10d2cp-3, 0x1.8042bcp-1, -0x1.8f6828p-1, -0x1.32e028p-1, -0x1.0ccaacp-1, -0x1.5caad2p-1, 0x1.f06a16p+0, -0x1.371938p-4, 0x1.56ccbep-2, 0x1.a3f9f8p-2, -0x1.eab4cap-1, -0x1.c1d83cp-4, -0x1.dc4178p-1, 0x1.af6fc2p+0, -0x1.f021eap-1, 0x1.ef3574p-2, -0x1.9f642p-4, -0x1.cd3346p-4, 0x1.47167p-1, 0x1.ae8ae4p-5, 0x1.70fa4ep+0, -0x1.e0abf4p-4, 0x1.874de8p-4, -0x1.3b2ccep-1, 0x1.b871aep-1, -0x1.1304fep-2, -0x1.ae1ee2p-1, -0x1.7a6326p-1, 0x1.a06748p-2, -0x1.1102acp-1, 0x1.5c89ep-4, 0x1.02c09p-5, 0x1.e4c33ep-2, -0x1.1cc984p-1, 0x1.04de7cp-1),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# {OUT} Y_N2 = [f1:(0x1.210682p+1, -0x1.685dfep+1, -0x1.b3becp-3, -0x1.ab605p-2, -0x1.aeec9cp+1, 0x1.b02318p+3, -0x1.bbb4f4p+0, 0x1.979182p+2, 0x1.dedaap+0, 0x1.78c72p-3, -0x1.8356ep-2, -0x1.42313ap+1),
#               f2:(-0x1.a64e98p+2, 0x1.b5203cp+3, 0x1.2be718p+0, 0x1.4ee958p+1, -0x1.c7e812p+1, -0x1.45c178p+2, 0x1.a10108p+0, 0x1.36c1ccp+0, -0x1.2e55p-3, -0x1.232008p-1, 0x1.9e7c1p-2, -0x1.4ebbp+0),
#               f3:(0x1.eb28p-4, -0x1.143542p+1, -0x1.ef44dp-1, 0x1.cd490cp+0, 0x1.54c36p+1, -0x1.71b464p+1, 0x1.858d5p+1, -0x1.52218p-3, 0x1.00dacp-1, 0x1.3ce07p-2, 0x1.1ff384p+1, 0x1.92897p-1),
#               f4:(0x1.714178p+0, -0x1.13316p-1, 0x1.717fbcp+1, 0x1.1eac08p+1, -0x1.6fd7ccp+2, -0x1.156e02p+3, -0x1.7d1b94p+2, 0x1.4f8c28p+1, 0x1.004fecp+2, 0x1.26f862p+4, 0x1.389d48p+0, 0x1.08094cp+2),
#               f5:(-0x1.8b052cp+1, -0x1.a06c54p-1, -0x1.6087bap+2, -0x1.700f04p+1, 0x1.a58cf8p+2, 0x1.1bc946p+1, 0x1.340c8p-5, -0x1.0b012p-2, -0x1.ba3c86p+1, 0x1.98b88cp+3, -0x1.1cad9p+0, 0x1.96e042p+1),
#               f6:(-0x1.3dfb9p+3, 0x1.10927ep+3, 0x1.51426p-3, -0x1.607702p+1, 0x1.1f0b4cp+4, 0x1.059178p+3, -0x1.10e54cp+0, -0x1.5bc5c4p+1, -0x1.8bf5ep-2, 0x1.c1e72p+0, 0x1.3f079p-1, 0x1.bab38p-5)]
# Returned status: 0
#
# Quantizer_standard::process(const float32 Y_N1[6x12], int8 Y_N2[6x12])
# {IN}  Y_N1 = [f1:(0x1.210682p+1, -0x1.685dfep+1, -0x1.b3becp-3, -0x1.ab605p-2, -0x1.aeec9cp+1, 0x1.b02318p+3, -0x1.bbb4f4p+0, 0x1.979182p+2, 0x1.dedaap+0, 0x1.78c72p-3, -0x1.8356ep-2, -0x1.42313ap+1),
#               f2:(-0x1.a64e98p+2, 0x1.b5203cp+3, 0x1.2be718p+0, 0x1.4ee958p+1, -0x1.c7e812p+1, -0x1.45c178p+2, 0x1.a10108p+0, 0x1.36c1ccp+0, -0x1.2e55p-3, -0x1.232008p-1, 0x1.9e7c1p-2, -0x1.4ebbp+0),
#               f3:(0x1.eb28p-4, -0x1.143542p+1, -0x1.ef44dp-1, 0x1.cd490cp+0, 0x1.54c36p+1, -0x1.71b464p+1, 0x1.858d5p+1, -0x1.52218p-3, 0x1.00dacp-1, 0x1.3ce07p-2, 0x1.1ff384p+1, 0x1.92897p-1),
#               f4:(0x1.714178p+0, -0x1.13316p-1, 0x1.717fbcp+1, 0x1.1eac08p+1, -0x1.6fd7ccp+2, -0x1.156e02p+3, -0x1.7d1b94p+2, 0x1.4f8c28p+1, 0x1.004fecp+2, 0x1.26f862p+4, 0x1.389d48p+0, 0x1.08094cp+2),
#               f5:(-0x1.8b052cp+1, -0x1.a06c54p-1, -0x1.6087bap+2, -0x1.700f04p+1, 0x1.a58cf8p+2, 0x1.1bc946p+1, 0x1.340c8p-5, -0x1.0b012p-2, -0x1.ba3c86p+1, 0x1.98b88cp+3, -0x1.1cad9p+0, 0x1.96e042p+1),
#               f6:(-0x1.3dfb9p+3, 0x1.10927ep+3, 0x1.51426p-3, -0x1.607702p+1, 0x1.1f0b4cp+4, 0x1.059178p+3, -0x1.10e54cp+0, -0x1.5bc5c4p+1, -0x1.8bf5ep-2, 0x1.c1e72p+0, 0x1.3f079p-1, 0x1.bab38p-5)]
# {OUT} Y_N2 = [f1:(0x12, 0xffffffe9, 0xfffffffe, 0xfffffffd, 0xffffffe5, 0x6c, 0xfffffff2, 0x33, 0xf, 0x1, 0xfffffffd, 0xffffffec),
#               f2:(0xffffffcb, 0x6d, 0x9, 0x15, 0xffffffe4, 0xffffffd7, 0xd, 0xa, 0xffffffff, 0xfffffffb, 0x3, 0xfffffff6),
#               f3:(0x1, 0xffffffef, 0xfffffff8, 0xe, 0x15, 0xffffffe9, 0x18, 0xffffffff, 0x4, 0x2, 0x12, 0x6),
#               f4:(0xc, 0xfffffffc, 0x17, 0x12, 0xffffffd2, 0xffffffbb, 0xffffffd0, 0x15, 0x20, 0x7f, 0xa, 0x21),
#               f5:(0xffffffe7, 0xfffffff9, 0xffffffd4, 0xffffffe9, 0x35, 0x12, 0x0, 0xfffffffe, 0xffffffe4, 0x66, 0xfffffff7, 0x19),
#               f6:(0xffffffb1, 0x44, 0x1, 0xffffffea, 0x7f, 0x41, 0xfffffff7, 0xffffffea, 0xfffffffd, 0xe, 0x5, 0x0)]
# Returned status: 0
#
# Puncturer_NO::depuncture(const int8 Y_N1[6x12], int8 Y_N2[6x12])
# {IN}  Y_N1 = [f1:(0x12, 0xffffffe9, 0xfffffffe, 0xfffffffd, 0xffffffe5, 0x6c, 0xfffffff2, 0x33, 0xf, 0x1, 0xfffffffd, 0xffffffec),
#               f2:(0xffffffcb, 0x6d, 0x9, 0x15, 0xffffffe4, 0xffffffd7, 0xd, 0xa, 0xffffffff, 0xfffffffb, 0x3, 0xfffffff6),
#               f3:(0x1, 0xffffffef, 0xfffffff8, 0xe, 0x15, 0xffffffe9, 0x18, 0xffffffff, 0x4, 0x2, 0x12, 0x6),
#               f4:(0xc, 0xfffffffc, 0x17, 0x12, 0xffffffd2, 0xffffffbb, 0xffffffd0, 0x15, 0x20, 0x7f, 0xa, 0x21),
#               f5:(0xffffffe7, 0xfffffff9, 0xffffffd4, 0xffffffe9, 0x35, 0x12, 0x0, 0xfffffffe, 0xffffffe4, 0x66, 0xfffffff7, 0x19),
#               f6:(0xffffffb1, 0x44, 0x1, 0xffffffea, 0x7f, 0x41, 0xfffffff7, 0xffffffea, 0xfffffffd, 0xe, 0x5, 0x0)]
# {OUT} Y_N2 = [f1:(0x12, 0xffffffe9, 0xfffffffe, 0xfffffffd, 0xffffffe5, 0x6c, 0xfffffff2, 0x33, 0xf, 0x1, 0xfffffffd, 0xffffffec),
#               f2:(0xffffffcb, 0x6d, 0x9, 0x15, 0xffffffe4, 0xffffffd7, 0xd, 0xa, 0xffffffff, 0xfffffffb, 0x3, 0xfffffff6),
#               f3:(0x1, 0xffffffef, 0xfffffff8, 0xe, 0x15, 0xffffffe9, 0x18, 0xffffffff, 0x4, 0x2, 0x12, 0x6),
#               f4:(0xc, 0xfffffffc, 0x17, 0x12, 0xffffffd2, 0xffffffbb, 0xffffffd0, 0x15, 0x20, 0x7f, 0xa, 0x21),
#               f5:(0xffffffe7, 0xfffffff9, 0xffffffd4, 0xffffffe9, 0x35, 0x12, 0x0, 0xfffffffe, 0xffffffe4, 0x66, 0xfffffff7, 0x19),
#               f6:(0xffffffb1, 0x44, 0x1, 0xffffffea, 0x7f, 0x41, 0xfffffff7, 0xffffffea, 0xfffffffd, 0xe, 0x5, 0x0)]
# Returned status: 0
#
# Decoder_NO::decode_siho(const int8 Y_N[6x12], int8 V_K[6x12])
# {IN}  Y_N = [f1:(0x12, 0xffffffe9, 0xfffffffe, 0xfffffffd, 0xffffffe5, 0x6c, 0xfffffff2, 0x33, 0xf, 0x1, 0xfffffffd, 0xffffffec),
#              f2:(0xffffffcb, 0x6d, 0x9, 0x15, 0xffffffe4, 0xffffffd7, 0xd, 0xa, 0xffffffff, 0xfffffffb, 0x3, 0xfffffff6),
#              f3:(0x1, 0xffffffef, 0xfffffff8, 0xe, 0x15, 0xffffffe9, 0x18, 0xffffffff, 0x4, 0x2, 0x12, 0x6),
#              f4:(0xc, 0xfffffffc, 0x17, 0x12, 0xffffffd2, 0xffffffbb, 0xffffffd0, 0x15, 0x20, 0x7f, 0xa, 0x21),
#              f5:(0xffffffe7, 0xfffffff9, 0xffffffd4, 0xffffffe9, 0x35, 0x12, 0x0, 0xfffffffe, 0xffffffe4, 0x66, 0xfffffff7, 0x19),
#              f6:(0xffffffb1, 0x44, 0x1, 0xffffffea, 0x7f, 0x41, 0xfffffff7, 0xffffffea, 0xfffffffd, 0xe, 0x5, 0x0)]
# {OUT} V_K = [f1:(0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1),
#              f2:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1),
#              f3:(0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#              f4:(0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0),
#              f5:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0),
#              f6:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0)]
# Returned status: 0
#
# CRC_NO::extract(const int8 V_K1[6x12], int8 V_K2[6x12])
# {IN}  V_K1 = [f1:(0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1),
#               f2:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1),
#               f3:(0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#               f4:(0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0),
#               f5:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0),
#               f6:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0)]
# {OUT} V_K2 = [f1:(0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1),
#               f2:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1),
#               f3:(0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#               f4:(0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0),
#               f5:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0),
#               f6:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0)]
# Returned status: 0
#
# Monitor_BFER::check_errors(const int8 U[6x12], const int8 V[6x12])
# {IN}  U = [f1:(0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1),
#            f2:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#            f3:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0),
#            f4:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0),
#            f5:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0),
#            f6:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0)]
# {IN}  V = [f1:(0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1),
#            f2:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1),
#            f3:(0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#            f4:(0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0),
#            f5:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0),
#            f6:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0)]
# Returned status: 9
#
# -------------------------------
# New communication (nÂ°16)
# -------------------------------
#
# Source_random::generate(int8 U_K[6x12])
# {OUT} U_K = [f1:(0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1),
#              f2:(0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#              f3:(0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#              f4:(0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1),
#              f5:(0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1),
#              f6:(0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0)]
# Returned status: 0
#
# CRC_NO::build(const int8 U_K1[6x12], int8 U_K2[6x12])
# {IN}  U_K1 = [f1:(0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1),
#               f2:(0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#               f3:(0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#               f4:(0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1),
#               f5:(0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1),
#               f6:(0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0)]
# {OUT} U_K2 = [f1:(0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1),
#               f2:(0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#               f3:(0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#               f4:(0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1),
#               f5:(0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1),
#               f6:(0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0)]
# Returned status: 0
#
# Encoder_NO::encode(const int8 U_K[6x12], int8 X_N[6x12])
# {IN}  U_K = [f1:(0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1),
#              f2:(0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#              f3:(0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#              f4:(0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1),
#              f5:(0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1),
#              f6:(0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0)]
# {OUT} X_N = [f1:(0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1),
#              f2:(0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#              f3:(0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#              f4:(0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1),
#              f5:(0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1),
#              f6:(0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0)]
# Returned status: 0
#
# Puncturer_NO::puncture(const int8 X_N1[6x12], int8 X_N2[6x12])
# {IN}  X_N1 = [f1:(0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1),
#               f2:(0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#               f3:(0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#               f4:(0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1),
#               f5:(0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1),
#               f6:(0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0)]
# {OUT} X_N2 = [f1:(0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1),
#               f2:(0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#               f3:(0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#               f4:(0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1),
#               f5:(0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1),
#               f6:(0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0)]
# Returned status: 0
#
# Modem_SCMA::modulate(const int8 X_N1[6x12], float32 X_N2[6x48])
# {IN}  X_N1 = [f1:(0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1),
#               f2:(0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#               f3:(0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#               f4:(0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1),
#               f5:(0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1),
#               f6:(0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0)]
# {OUT} X_N2 = [f1:(0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0),
#               f2:(0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0),
#               f3:(-0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1),
#               f5:(0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3),
#               f6:(0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Channel_Rayleigh_LLR::add_noise_wg(const float32 X_N[6x48], float32 H_N[6x48], float32 Y_N[6x48])
# {IN}  X_N = [f1:(0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0),
#              f2:(0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0),
#              f3:(-0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1),
#              f5:(0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3),
#              f6:(0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0)]
# {OUT} H_N = [f1:(0x1.54b90cp-8, 0x1.d3b006p-2, -0x1.3f0acap-3, -0x1.afc896p-1, -0x1.fb1d0ap-1, 0x1.da65aep-4, 0x1.66f184p-1, 0x1.2db45cp-1, 0x1.087b22p+0, 0x1.fe6d88p-3, -0x1.1889dap-1, -0x1.d7a508p-3, 0x1.2fc788p-1, -0x1.93b9acp-2, 0x1.0cf58cp+0, -0x1.95bf12p-1, 0x1.30cc56p-1, -0x1.92a21ep-3, 0x1.c716fap-2, 0x1.b04c1ep-3, -0x1.deadcp-2, 0x1.0a8946p+1, 0x1.5743e8p+0, -0x1.f52018p-2, 0x1.d40494p-6, -0x1.bbdffep-1, -0x1.e690dcp-7, 0x1.ae9aeep-6, -0x1.0fdfdap-5, 0x1.6079d8p-3, -0x1.0eab5ep-1, 0x1.d06d66p-7, -0x1.644a5ep-2, -0x1.670188p-1, 0x1.3880fap+0, -0x1.091928p-1, -0x1.8df9e8p-4, 0x1.07560ap-2, -0x1.3e4c2ep-2, -0x1.bcf0a8p-8, 0x1.992da8p-4, -0x1.30a836p-2, -0x1.2f4efp-1, 0x1.a13074p-1, 0x1.dd290ap-1, -0x1.5ec416p-7, -0x1.7c6a18p-3, 0x1.a7084ap-1),
#              f2:(0x1.958ea8p-1, 0x1.471488p-2, 0x1.ecd12p-2, -0x1.390a2ap+0, -0x1.6dd5p-1, -0x1.0dbf34p-1, 0x1.c8587ap-4, 0x1.57c3aap-3, -0x1.39944p-1, -0x1.2108cep-2, 0x1.b8da4ep-1, 0x1.2f1fb2p-1, 0x1.33785ep-2, -0x1.0c58bcp+0, 0x1.428e86p-4, -0x1.e8bacp-4, 0x1.5d803ap-1, -0x1.49f6a6p-3, 0x1.1f11b4p-2, -0x1.dc68acp-1, -0x1.e67c16p-1, -0x1.e6508ep-3, 0x1.00eeeep+0, 0x1.2d3f54p-1, -0x1.783ae8p-2, -0x1.c0b622p-4, 0x1.24ad8ap-1, -0x1.7b42aap-1, -0x1.419ec6p-3, 0x1.4db29cp-2, -0x1.0dc19cp+0, -0x1.cbb7a2p-4, 0x1.f0e786p-2, -0x1.a8adaep-2, 0x1.38504ap-1, -0x1.5f5acp-2, 0x1.51d9dep-1, 0x1.0e7878p-3, -0x1.2737eap+0, 0x1.9a420cp-1, -0x1.c60b7p-2, 0x1.15908ep+0, 0x1.961cfp-3, -0x1.688cc4p-2, 0x1.3f1dccp+0, 0x1.4eafb6p-2, 0x1.8b417cp+0, -0x1.4361a6p-3),
#              f3:(0x1.12fc5cp-3, 0x1.7abf62p-2, -0x1.d8e94cp-3, -0x1.fc7eep-2, -0x1.1d1354p-5, 0x1.bbf376p-2, -0x1.9b5698p-2, 0x1.07c7ep-3, -0x1.093042p+0, -0x1.60ec8ep-2, -0x1.31acf8p-2, -0x1.e6e3dep-6, -0x1.906822p-1, 0x1.b58e54p-3, 0x1.b3dbc4p-2, -0x1.419a52p+0, -0x1.afb028p-1, -0x1.06423ap-7, 0x1.e1dedap-2, -0x1.18e45ep+0, -0x1.23c38ep+0, 0x1.17bad4p-1, 0x1.4e851p-2, -0x1.0205aep+1, -0x1.1b2e3cp-7, -0x1.e407bcp-2, -0x1.067522p-4, -0x1.c59486p-1, -0x1.1bbcdp+0, 0x1.5d45d4p+0, -0x1.7993f8p-3, 0x1.4fe1cap-2, 0x1.410296p-1, -0x1.11371cp-4, 0x1.01ddc2p-5, -0x1.c1b56cp-1, -0x1.f7b864p-1, 0x1.7a2666p-2, 0x1.055c6cp-2, -0x1.f65a9cp-3, 0x1.ed21bcp-2, -0x1.25dcd8p-2, 0x1.a9cf84p-3, 0x1.417adep-1, -0x1.88f206p-1, 0x1.475ce2p-3, 0x1.077d54p-1, 0x1.1a10b2p-2),
#              f4:(-0x1.6a6f26p-2, 0x1.d085eap-12, -0x1.cb7564p-1, 0x1.6727c4p-1, -0x1.82e622p-2, 0x1.c88f2cp+0, 0x1.e19846p-2, 0x1.0793cep-2, -0x1.351994p-2, -0x1.2ea2c6p+0, -0x1.3dbd86p-7, -0x1.e2677ap-4, -0x1.953756p-1, -0x1.3566cap-1, 0x1.6d9e76p-3, -0x1.48e85cp-1, -0x1.c3ea06p-1, 0x1.80ea22p-1, -0x1.65b742p-1, 0x1.62abcap-1, 0x1.2b4d54p-3, -0x1.ab76fcp-2, -0x1.23c72cp-1, 0x1.080ceap-1, -0x1.030ddp-1, -0x1.3f7744p-2, 0x1.a9774ap+0, 0x1.27f1dcp-4, -0x1.b40d9ap-3, -0x1.ac8c9p-1, -0x1.e6b392p-2, 0x1.d30f96p-1, -0x1.2c9902p-2, -0x1.592794p-1, 0x1.57216ep-3, 0x1.fd7e98p-6, 0x1.d7badep+0, 0x1.c610b2p-2, -0x1.3ea29ap+0, -0x1.16b2cap-2, -0x1.8db596p-2, -0x1.d6d39cp-2, 0x1.2811ecp+0, 0x1.ecd10ap-2, 0x1.43c8c6p+0, -0x1.65ee24p-1, 0x1.19ba56p-3, 0x1.c1acc2p-1),
#              f5:(0x1.a34526p-1, -0x1.3c5e32p-1, -0x1.13e6ep+0, -0x1.ce1bf2p-6, -0x1.c423c6p-2, 0x1.b9441cp-1, 0x1.fd82aap-3, 0x1.37b708p-3, 0x1.ca30a6p-2, 0x1.9f2d88p-2, -0x1.79ad46p+0, 0x1.16a2b8p-2, 0x1.10cb4cp-2, 0x1.02bacap-1, -0x1.5d69fep-3, 0x1.8368b2p-2, 0x1.0b4284p-1, 0x1.88c03ep-3, 0x1.944e36p-4, 0x1.455c16p-2, -0x1.c59748p-4, 0x1.6b26e6p-3, 0x1.0e4c06p-3, -0x1.f5dfaap-1, -0x1.eba4a6p-2, 0x1.d88b36p-2, 0x1.c42914p-2, 0x1.114998p-1, -0x1.b79b58p-3, -0x1.6e4ae8p-1, 0x1.56ae32p-3, -0x1.c93968p-1, -0x1.e9f0d4p-3, -0x1.ddfc7cp-1, 0x1.9b4824p-6, 0x1.0f4368p-5, 0x1.2c32f8p+0, 0x1.caee8ap-1, -0x1.afb362p-3, -0x1.7216dap-1, -0x1.38c1fap-9, 0x1.31aab6p-1, 0x1.a7364ap-1, 0x1.0f95cap+0, 0x1.0d375p-3, 0x1.a131ecp-3, -0x1.81383cp-2, 0x1.968de8p-3),
#              f6:(-0x1.0bb9dap-2, -0x1.403ca4p-3, 0x1.9d8a94p-1, 0x1.ed0c46p-1, -0x1.3c45cp-1, -0x1.bdfa82p-5, -0x1.8517fcp-1, 0x1.bde69ap-6, 0x1.0dba0cp+1, 0x1.2c52d8p-1, 0x1.274726p-3, -0x1.cd61dap-2, -0x1.32d192p-3, 0x1.b410f8p-2, -0x1.827042p+0, 0x1.145b4ep-1, 0x1.b151dap-3, 0x1.170c32p-1, -0x1.19b9c8p+0, -0x1.e67402p-1, -0x1.8ebb24p-4, -0x1.111fecp-4, 0x1.83b552p-1, 0x1.bb7accp-4, 0x1.744b32p+0, 0x1.19c168p-1, 0x1.1f70eep-4, -0x1.2f37c6p-5, 0x1.8b5e52p-1, -0x1.21755p-1, -0x1.e058fp-5, 0x1.ad35a2p-2, 0x1.7185e4p-4, 0x1.3c6ab2p-2, 0x1.ca342ap-3, 0x1.a9ffcep-2, -0x1.be64c8p-1, 0x1.fa0dap-2, -0x1.bb6c66p-5, 0x1.43e84cp-1, 0x1.3d33cp-2, 0x1.0a1094p-1, 0x1.bea22cp-3, 0x1.23d96ep-1, -0x1.011fe8p-4, 0x1.c36938p-1, 0x1.4821a2p-1, -0x1.d591d8p-1)]
# {OUT} Y_N = [f1:(0x1.db51bep-1, 0x1.56b9a6p-1, 0x1.c6822p-3, -0x1.3213dep-1, -0x1.06490cp-4, 0x1.8a52ep-2, -0x1.a635ep-6, -0x1.1322d6p+0, -0x1.685da4p+0, 0x1.43bf32p-2, -0x1.144312p-1, -0x1.123adp-4, -0x1.ac93p-2, 0x1.b415ep-2, -0x1.13dbdp+0, 0x1.6c932p-1, 0x1.505158p-1, -0x1.6619a8p-1, 0x1.4aa714p-4, -0x1.9c724p-7, -0x1.556edep-2, -0x1.58f01cp-4, 0x1.312544p-2, -0x1.bd9eeap-2, 0x1.45723p-1, 0x1.b9caf4p-2, 0x1.bfbeccp-2, 0x1.3afe5ap-2, -0x1.4436fep-1, 0x1.4bbcaap+0, 0x1.065e84p-4, 0x1.edaa3cp-3, -0x1.01901cp-1, 0x1.c931c4p-3, 0x1.d2122p-4, -0x1.e197acp-3, -0x1.642692p+0, -0x1.bf38eep+0, 0x1.0bbf76p-3, -0x1.03dd42p-1, -0x1.2505ecp+0, 0x1.6dc3b2p+0, -0x1.1f823ap-2, 0x1.9b6f92p-5, 0x1.ba9808p-1, 0x1.f02ce8p-4, -0x1.2c65ecp-2, -0x1.8d2352p-2),
#              f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Modem_SCMA::filter(const float32 Y_N1[6x48], float32 Y_N2[6x48])
# {IN}  Y_N1 = [f1:(0x1.db51bep-1, 0x1.56b9a6p-1, 0x1.c6822p-3, -0x1.3213dep-1, -0x1.06490cp-4, 0x1.8a52ep-2, -0x1.a635ep-6, -0x1.1322d6p+0, -0x1.685da4p+0, 0x1.43bf32p-2, -0x1.144312p-1, -0x1.123adp-4, -0x1.ac93p-2, 0x1.b415ep-2, -0x1.13dbdp+0, 0x1.6c932p-1, 0x1.505158p-1, -0x1.6619a8p-1, 0x1.4aa714p-4, -0x1.9c724p-7, -0x1.556edep-2, -0x1.58f01cp-4, 0x1.312544p-2, -0x1.bd9eeap-2, 0x1.45723p-1, 0x1.b9caf4p-2, 0x1.bfbeccp-2, 0x1.3afe5ap-2, -0x1.4436fep-1, 0x1.4bbcaap+0, 0x1.065e84p-4, 0x1.edaa3cp-3, -0x1.01901cp-1, 0x1.c931c4p-3, 0x1.d2122p-4, -0x1.e197acp-3, -0x1.642692p+0, -0x1.bf38eep+0, 0x1.0bbf76p-3, -0x1.03dd42p-1, -0x1.2505ecp+0, 0x1.6dc3b2p+0, -0x1.1f823ap-2, 0x1.9b6f92p-5, 0x1.ba9808p-1, 0x1.f02ce8p-4, -0x1.2c65ecp-2, -0x1.8d2352p-2),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# {OUT} Y_N2 = [f1:(0x1.db51bep-1, 0x1.56b9a6p-1, 0x1.c6822p-3, -0x1.3213dep-1, -0x1.06490cp-4, 0x1.8a52ep-2, -0x1.a635ep-6, -0x1.1322d6p+0, -0x1.685da4p+0, 0x1.43bf32p-2, -0x1.144312p-1, -0x1.123adp-4, -0x1.ac93p-2, 0x1.b415ep-2, -0x1.13dbdp+0, 0x1.6c932p-1, 0x1.505158p-1, -0x1.6619a8p-1, 0x1.4aa714p-4, -0x1.9c724p-7, -0x1.556edep-2, -0x1.58f01cp-4, 0x1.312544p-2, -0x1.bd9eeap-2, 0x1.45723p-1, 0x1.b9caf4p-2, 0x1.bfbeccp-2, 0x1.3afe5ap-2, -0x1.4436fep-1, 0x1.4bbcaap+0, 0x1.065e84p-4, 0x1.edaa3cp-3, -0x1.01901cp-1, 0x1.c931c4p-3, 0x1.d2122p-4, -0x1.e197acp-3, -0x1.642692p+0, -0x1.bf38eep+0, 0x1.0bbf76p-3, -0x1.03dd42p-1, -0x1.2505ecp+0, 0x1.6dc3b2p+0, -0x1.1f823ap-2, 0x1.9b6f92p-5, 0x1.ba9808p-1, 0x1.f02ce8p-4, -0x1.2c65ecp-2, -0x1.8d2352p-2),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Modem_SCMA::demodulate_wg(const float32 H_N[6x48], const float32 Y_N1[6x48], float32 Y_N2[6x12])
# {IN}  H_N  = [f1:(0x1.54b90cp-8, 0x1.d3b006p-2, -0x1.3f0acap-3, -0x1.afc896p-1, -0x1.fb1d0ap-1, 0x1.da65aep-4, 0x1.66f184p-1, 0x1.2db45cp-1, 0x1.087b22p+0, 0x1.fe6d88p-3, -0x1.1889dap-1, -0x1.d7a508p-3, 0x1.2fc788p-1, -0x1.93b9acp-2, 0x1.0cf58cp+0, -0x1.95bf12p-1, 0x1.30cc56p-1, -0x1.92a21ep-3, 0x1.c716fap-2, 0x1.b04c1ep-3, -0x1.deadcp-2, 0x1.0a8946p+1, 0x1.5743e8p+0, -0x1.f52018p-2, 0x1.d40494p-6, -0x1.bbdffep-1, -0x1.e690dcp-7, 0x1.ae9aeep-6, -0x1.0fdfdap-5, 0x1.6079d8p-3, -0x1.0eab5ep-1, 0x1.d06d66p-7, -0x1.644a5ep-2, -0x1.670188p-1, 0x1.3880fap+0, -0x1.091928p-1, -0x1.8df9e8p-4, 0x1.07560ap-2, -0x1.3e4c2ep-2, -0x1.bcf0a8p-8, 0x1.992da8p-4, -0x1.30a836p-2, -0x1.2f4efp-1, 0x1.a13074p-1, 0x1.dd290ap-1, -0x1.5ec416p-7, -0x1.7c6a18p-3, 0x1.a7084ap-1),
#               f2:(0x1.958ea8p-1, 0x1.471488p-2, 0x1.ecd12p-2, -0x1.390a2ap+0, -0x1.6dd5p-1, -0x1.0dbf34p-1, 0x1.c8587ap-4, 0x1.57c3aap-3, -0x1.39944p-1, -0x1.2108cep-2, 0x1.b8da4ep-1, 0x1.2f1fb2p-1, 0x1.33785ep-2, -0x1.0c58bcp+0, 0x1.428e86p-4, -0x1.e8bacp-4, 0x1.5d803ap-1, -0x1.49f6a6p-3, 0x1.1f11b4p-2, -0x1.dc68acp-1, -0x1.e67c16p-1, -0x1.e6508ep-3, 0x1.00eeeep+0, 0x1.2d3f54p-1, -0x1.783ae8p-2, -0x1.c0b622p-4, 0x1.24ad8ap-1, -0x1.7b42aap-1, -0x1.419ec6p-3, 0x1.4db29cp-2, -0x1.0dc19cp+0, -0x1.cbb7a2p-4, 0x1.f0e786p-2, -0x1.a8adaep-2, 0x1.38504ap-1, -0x1.5f5acp-2, 0x1.51d9dep-1, 0x1.0e7878p-3, -0x1.2737eap+0, 0x1.9a420cp-1, -0x1.c60b7p-2, 0x1.15908ep+0, 0x1.961cfp-3, -0x1.688cc4p-2, 0x1.3f1dccp+0, 0x1.4eafb6p-2, 0x1.8b417cp+0, -0x1.4361a6p-3),
#               f3:(0x1.12fc5cp-3, 0x1.7abf62p-2, -0x1.d8e94cp-3, -0x1.fc7eep-2, -0x1.1d1354p-5, 0x1.bbf376p-2, -0x1.9b5698p-2, 0x1.07c7ep-3, -0x1.093042p+0, -0x1.60ec8ep-2, -0x1.31acf8p-2, -0x1.e6e3dep-6, -0x1.906822p-1, 0x1.b58e54p-3, 0x1.b3dbc4p-2, -0x1.419a52p+0, -0x1.afb028p-1, -0x1.06423ap-7, 0x1.e1dedap-2, -0x1.18e45ep+0, -0x1.23c38ep+0, 0x1.17bad4p-1, 0x1.4e851p-2, -0x1.0205aep+1, -0x1.1b2e3cp-7, -0x1.e407bcp-2, -0x1.067522p-4, -0x1.c59486p-1, -0x1.1bbcdp+0, 0x1.5d45d4p+0, -0x1.7993f8p-3, 0x1.4fe1cap-2, 0x1.410296p-1, -0x1.11371cp-4, 0x1.01ddc2p-5, -0x1.c1b56cp-1, -0x1.f7b864p-1, 0x1.7a2666p-2, 0x1.055c6cp-2, -0x1.f65a9cp-3, 0x1.ed21bcp-2, -0x1.25dcd8p-2, 0x1.a9cf84p-3, 0x1.417adep-1, -0x1.88f206p-1, 0x1.475ce2p-3, 0x1.077d54p-1, 0x1.1a10b2p-2),
#               f4:(-0x1.6a6f26p-2, 0x1.d085eap-12, -0x1.cb7564p-1, 0x1.6727c4p-1, -0x1.82e622p-2, 0x1.c88f2cp+0, 0x1.e19846p-2, 0x1.0793cep-2, -0x1.351994p-2, -0x1.2ea2c6p+0, -0x1.3dbd86p-7, -0x1.e2677ap-4, -0x1.953756p-1, -0x1.3566cap-1, 0x1.6d9e76p-3, -0x1.48e85cp-1, -0x1.c3ea06p-1, 0x1.80ea22p-1, -0x1.65b742p-1, 0x1.62abcap-1, 0x1.2b4d54p-3, -0x1.ab76fcp-2, -0x1.23c72cp-1, 0x1.080ceap-1, -0x1.030ddp-1, -0x1.3f7744p-2, 0x1.a9774ap+0, 0x1.27f1dcp-4, -0x1.b40d9ap-3, -0x1.ac8c9p-1, -0x1.e6b392p-2, 0x1.d30f96p-1, -0x1.2c9902p-2, -0x1.592794p-1, 0x1.57216ep-3, 0x1.fd7e98p-6, 0x1.d7badep+0, 0x1.c610b2p-2, -0x1.3ea29ap+0, -0x1.16b2cap-2, -0x1.8db596p-2, -0x1.d6d39cp-2, 0x1.2811ecp+0, 0x1.ecd10ap-2, 0x1.43c8c6p+0, -0x1.65ee24p-1, 0x1.19ba56p-3, 0x1.c1acc2p-1),
#               f5:(0x1.a34526p-1, -0x1.3c5e32p-1, -0x1.13e6ep+0, -0x1.ce1bf2p-6, -0x1.c423c6p-2, 0x1.b9441cp-1, 0x1.fd82aap-3, 0x1.37b708p-3, 0x1.ca30a6p-2, 0x1.9f2d88p-2, -0x1.79ad46p+0, 0x1.16a2b8p-2, 0x1.10cb4cp-2, 0x1.02bacap-1, -0x1.5d69fep-3, 0x1.8368b2p-2, 0x1.0b4284p-1, 0x1.88c03ep-3, 0x1.944e36p-4, 0x1.455c16p-2, -0x1.c59748p-4, 0x1.6b26e6p-3, 0x1.0e4c06p-3, -0x1.f5dfaap-1, -0x1.eba4a6p-2, 0x1.d88b36p-2, 0x1.c42914p-2, 0x1.114998p-1, -0x1.b79b58p-3, -0x1.6e4ae8p-1, 0x1.56ae32p-3, -0x1.c93968p-1, -0x1.e9f0d4p-3, -0x1.ddfc7cp-1, 0x1.9b4824p-6, 0x1.0f4368p-5, 0x1.2c32f8p+0, 0x1.caee8ap-1, -0x1.afb362p-3, -0x1.7216dap-1, -0x1.38c1fap-9, 0x1.31aab6p-1, 0x1.a7364ap-1, 0x1.0f95cap+0, 0x1.0d375p-3, 0x1.a131ecp-3, -0x1.81383cp-2, 0x1.968de8p-3),
#               f6:(-0x1.0bb9dap-2, -0x1.403ca4p-3, 0x1.9d8a94p-1, 0x1.ed0c46p-1, -0x1.3c45cp-1, -0x1.bdfa82p-5, -0x1.8517fcp-1, 0x1.bde69ap-6, 0x1.0dba0cp+1, 0x1.2c52d8p-1, 0x1.274726p-3, -0x1.cd61dap-2, -0x1.32d192p-3, 0x1.b410f8p-2, -0x1.827042p+0, 0x1.145b4ep-1, 0x1.b151dap-3, 0x1.170c32p-1, -0x1.19b9c8p+0, -0x1.e67402p-1, -0x1.8ebb24p-4, -0x1.111fecp-4, 0x1.83b552p-1, 0x1.bb7accp-4, 0x1.744b32p+0, 0x1.19c168p-1, 0x1.1f70eep-4, -0x1.2f37c6p-5, 0x1.8b5e52p-1, -0x1.21755p-1, -0x1.e058fp-5, 0x1.ad35a2p-2, 0x1.7185e4p-4, 0x1.3c6ab2p-2, 0x1.ca342ap-3, 0x1.a9ffcep-2, -0x1.be64c8p-1, 0x1.fa0dap-2, -0x1.bb6c66p-5, 0x1.43e84cp-1, 0x1.3d33cp-2, 0x1.0a1094p-1, 0x1.bea22cp-3, 0x1.23d96ep-1, -0x1.011fe8p-4, 0x1.c36938p-1, 0x1.4821a2p-1, -0x1.d591d8p-1)]
# {IN}  Y_N1 = [f1:(0x1.db51bep-1, 0x1.56b9a6p-1, 0x1.c6822p-3, -0x1.3213dep-1, -0x1.06490cp-4, 0x1.8a52ep-2, -0x1.a635ep-6, -0x1.1322d6p+0, -0x1.685da4p+0, 0x1.43bf32p-2, -0x1.144312p-1, -0x1.123adp-4, -0x1.ac93p-2, 0x1.b415ep-2, -0x1.13dbdp+0, 0x1.6c932p-1, 0x1.505158p-1, -0x1.6619a8p-1, 0x1.4aa714p-4, -0x1.9c724p-7, -0x1.556edep-2, -0x1.58f01cp-4, 0x1.312544p-2, -0x1.bd9eeap-2, 0x1.45723p-1, 0x1.b9caf4p-2, 0x1.bfbeccp-2, 0x1.3afe5ap-2, -0x1.4436fep-1, 0x1.4bbcaap+0, 0x1.065e84p-4, 0x1.edaa3cp-3, -0x1.01901cp-1, 0x1.c931c4p-3, 0x1.d2122p-4, -0x1.e197acp-3, -0x1.642692p+0, -0x1.bf38eep+0, 0x1.0bbf76p-3, -0x1.03dd42p-1, -0x1.2505ecp+0, 0x1.6dc3b2p+0, -0x1.1f823ap-2, 0x1.9b6f92p-5, 0x1.ba9808p-1, 0x1.f02ce8p-4, -0x1.2c65ecp-2, -0x1.8d2352p-2),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# {OUT} Y_N2 = [f1:(-0x1.8085dp+1, -0x1.95fb34p+2, -0x1.99d516p+2, -0x1.39b13cp+2, 0x1.68513ep+1, -0x1.324e3p+0, 0x1.fef4ep-2, 0x1.277b1p-2, -0x1.c7c9dp-1, -0x1.86c4acp+0, -0x1.3c1668p+1, -0x1.08bd2p+2),
#               f2:(0x1.c9341p+0, 0x1.62668ap+1, 0x1.9a7368p+0, 0x1.cb988p+2, 0x1.638868p+0, -0x1.bd8d9p-1, 0x1.081cp-2, -0x1.97e44p+1, -0x1.0d13d4p+0, 0x1.47073cp+1, 0x1.a179f6p+3, 0x1.dd1b0cp+1),
#               f3:(-0x1.bdaf2p-3, -0x1.7ed05p+0, -0x1.68737cp+2, -0x1.da6adp-1, 0x1.c1bef8p+0, 0x1.bc97f8p+0, 0x1.04819ep+1, -0x1.1e4874p+1, -0x1.1c956p-2, 0x1.7ed37ap+0, 0x1.d33b48p+1, 0x1.1a3fc6p+1),
#               f4:(-0x1.5f5c88p+1, 0x1.7ad63ep+2, -0x1.704a1p-1, 0x1.afbe84p+0, -0x1.7251c8p-1, -0x1.1ced5p-1, -0x1.464694p+1, -0x1.8e53p-5, -0x1.cda9f8p+3, -0x1.7d17ep+3, 0x1.00951ap+3, -0x1.57b88ap+1),
#               f5:(-0x1.c401ep-3, -0x1.abfc8cp+1, 0x1.340f2p-2, -0x1.324e94p+1, -0x1.1b09b4p+1, 0x1.25bed8p+0, -0x1.7ca73p-1, 0x1.b934bp+1, -0x1.14f364p+1, 0x1.5aca36p+0, 0x1.833148p+0, -0x1.8949f4p+1),
#               f6:(-0x1.88b704p+1, 0x1.21b76p+1, -0x1.8fb2b8p-1, -0x1.9b9fp-4, -0x1.0fed6p-3, 0x1.3ae26p-2, 0x1.6f2a1p+0, -0x1.04192cp+2, 0x1.805ed2p+1, -0x1.0b2d36p+3, -0x1.757694p+1, 0x1.dac58p+1)]
# Returned status: 0
#
# Quantizer_standard::process(const float32 Y_N1[6x12], int8 Y_N2[6x12])
# {IN}  Y_N1 = [f1:(-0x1.8085dp+1, -0x1.95fb34p+2, -0x1.99d516p+2, -0x1.39b13cp+2, 0x1.68513ep+1, -0x1.324e3p+0, 0x1.fef4ep-2, 0x1.277b1p-2, -0x1.c7c9dp-1, -0x1.86c4acp+0, -0x1.3c1668p+1, -0x1.08bd2p+2),
#               f2:(0x1.c9341p+0, 0x1.62668ap+1, 0x1.9a7368p+0, 0x1.cb988p+2, 0x1.638868p+0, -0x1.bd8d9p-1, 0x1.081cp-2, -0x1.97e44p+1, -0x1.0d13d4p+0, 0x1.47073cp+1, 0x1.a179f6p+3, 0x1.dd1b0cp+1),
#               f3:(-0x1.bdaf2p-3, -0x1.7ed05p+0, -0x1.68737cp+2, -0x1.da6adp-1, 0x1.c1bef8p+0, 0x1.bc97f8p+0, 0x1.04819ep+1, -0x1.1e4874p+1, -0x1.1c956p-2, 0x1.7ed37ap+0, 0x1.d33b48p+1, 0x1.1a3fc6p+1),
#               f4:(-0x1.5f5c88p+1, 0x1.7ad63ep+2, -0x1.704a1p-1, 0x1.afbe84p+0, -0x1.7251c8p-1, -0x1.1ced5p-1, -0x1.464694p+1, -0x1.8e53p-5, -0x1.cda9f8p+3, -0x1.7d17ep+3, 0x1.00951ap+3, -0x1.57b88ap+1),
#               f5:(-0x1.c401ep-3, -0x1.abfc8cp+1, 0x1.340f2p-2, -0x1.324e94p+1, -0x1.1b09b4p+1, 0x1.25bed8p+0, -0x1.7ca73p-1, 0x1.b934bp+1, -0x1.14f364p+1, 0x1.5aca36p+0, 0x1.833148p+0, -0x1.8949f4p+1),
#               f6:(-0x1.88b704p+1, 0x1.21b76p+1, -0x1.8fb2b8p-1, -0x1.9b9fp-4, -0x1.0fed6p-3, 0x1.3ae26p-2, 0x1.6f2a1p+0, -0x1.04192cp+2, 0x1.805ed2p+1, -0x1.0b2d36p+3, -0x1.757694p+1, 0x1.dac58p+1)]
# {OUT} Y_N2 = [f1:(0xffffffe8, 0xffffffcd, 0xffffffcd, 0xffffffd9, 0x17, 0xfffffff6, 0x4, 0x2, 0xfffffff9, 0xfffffff4, 0xffffffec, 0xffffffdf),
#               f2:(0xe, 0x16, 0xd, 0x39, 0xb, 0xfffffff9, 0x2, 0xffffffe7, 0xfffffff8, 0x14, 0x68, 0x1e),
#               f3:(0xfffffffe, 0xfffffff4, 0xffffffd3, 0xfffffff9, 0xe, 0xe, 0x10, 0xffffffee, 0xfffffffe, 0xc, 0x1d, 0x12),
#               f4:(0xffffffea, 0x2f, 0xfffffffa, 0xd, 0xfffffffa, 0xfffffffc, 0xffffffec, 0x0, 0xffffff8d, 0xffffffa1, 0x40, 0xffffffeb),
#               f5:(0xfffffffe, 0xffffffe5, 0x2, 0xffffffed, 0xffffffee, 0x9, 0xfffffffa, 0x1c, 0xffffffef, 0xb, 0xc, 0xffffffe7),
#               f6:(0xffffffe7, 0x12, 0xfffffffa, 0xffffffff, 0xffffffff, 0x2, 0xb, 0xffffffdf, 0x18, 0xffffffbd, 0xffffffe9, 0x1e)]
# Returned status: 0
#
# Puncturer_NO::depuncture(const int8 Y_N1[6x12], int8 Y_N2[6x12])
# {IN}  Y_N1 = [f1:(0xffffffe8, 0xffffffcd, 0xffffffcd, 0xffffffd9, 0x17, 0xfffffff6, 0x4, 0x2, 0xfffffff9, 0xfffffff4, 0xffffffec, 0xffffffdf),
#               f2:(0xe, 0x16, 0xd, 0x39, 0xb, 0xfffffff9, 0x2, 0xffffffe7, 0xfffffff8, 0x14, 0x68, 0x1e),
#               f3:(0xfffffffe, 0xfffffff4, 0xffffffd3, 0xfffffff9, 0xe, 0xe, 0x10, 0xffffffee, 0xfffffffe, 0xc, 0x1d, 0x12),
#               f4:(0xffffffea, 0x2f, 0xfffffffa, 0xd, 0xfffffffa, 0xfffffffc, 0xffffffec, 0x0, 0xffffff8d, 0xffffffa1, 0x40, 0xffffffeb),
#               f5:(0xfffffffe, 0xffffffe5, 0x2, 0xffffffed, 0xffffffee, 0x9, 0xfffffffa, 0x1c, 0xffffffef, 0xb, 0xc, 0xffffffe7),
#               f6:(0xffffffe7, 0x12, 0xfffffffa, 0xffffffff, 0xffffffff, 0x2, 0xb, 0xffffffdf, 0x18, 0xffffffbd, 0xffffffe9, 0x1e)]
# {OUT} Y_N2 = [f1:(0xffffffe8, 0xffffffcd, 0xffffffcd, 0xffffffd9, 0x17, 0xfffffff6, 0x4, 0x2, 0xfffffff9, 0xfffffff4, 0xffffffec, 0xffffffdf),
#               f2:(0xe, 0x16, 0xd, 0x39, 0xb, 0xfffffff9, 0x2, 0xffffffe7, 0xfffffff8, 0x14, 0x68, 0x1e),
#               f3:(0xfffffffe, 0xfffffff4, 0xffffffd3, 0xfffffff9, 0xe, 0xe, 0x10, 0xffffffee, 0xfffffffe, 0xc, 0x1d, 0x12),
#               f4:(0xffffffea, 0x2f, 0xfffffffa, 0xd, 0xfffffffa, 0xfffffffc, 0xffffffec, 0x0, 0xffffff8d, 0xffffffa1, 0x40, 0xffffffeb),
#               f5:(0xfffffffe, 0xffffffe5, 0x2, 0xffffffed, 0xffffffee, 0x9, 0xfffffffa, 0x1c, 0xffffffef, 0xb, 0xc, 0xffffffe7),
#               f6:(0xffffffe7, 0x12, 0xfffffffa, 0xffffffff, 0xffffffff, 0x2, 0xb, 0xffffffdf, 0x18, 0xffffffbd, 0xffffffe9, 0x1e)]
# Returned status: 0
#
# Decoder_NO::decode_siho(const int8 Y_N[6x12], int8 V_K[6x12])
# {IN}  Y_N = [f1:(0xffffffe8, 0xffffffcd, 0xffffffcd, 0xffffffd9, 0x17, 0xfffffff6, 0x4, 0x2, 0xfffffff9, 0xfffffff4, 0xffffffec, 0xffffffdf),
#              f2:(0xe, 0x16, 0xd, 0x39, 0xb, 0xfffffff9, 0x2, 0xffffffe7, 0xfffffff8, 0x14, 0x68, 0x1e),
#              f3:(0xfffffffe, 0xfffffff4, 0xffffffd3, 0xfffffff9, 0xe, 0xe, 0x10, 0xffffffee, 0xfffffffe, 0xc, 0x1d, 0x12),
#              f4:(0xffffffea, 0x2f, 0xfffffffa, 0xd, 0xfffffffa, 0xfffffffc, 0xffffffec, 0x0, 0xffffff8d, 0xffffffa1, 0x40, 0xffffffeb),
#              f5:(0xfffffffe, 0xffffffe5, 0x2, 0xffffffed, 0xffffffee, 0x9, 0xfffffffa, 0x1c, 0xffffffef, 0xb, 0xc, 0xffffffe7),
#              f6:(0xffffffe7, 0x12, 0xfffffffa, 0xffffffff, 0xffffffff, 0x2, 0xb, 0xffffffdf, 0x18, 0xffffffbd, 0xffffffe9, 0x1e)]
# {OUT} V_K = [f1:(0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1),
#              f2:(0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#              f3:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#              f4:(0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1),
#              f5:(0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1),
#              f6:(0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0)]
# Returned status: 0
#
# CRC_NO::extract(const int8 V_K1[6x12], int8 V_K2[6x12])
# {IN}  V_K1 = [f1:(0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1),
#               f2:(0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#               f3:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#               f4:(0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1),
#               f5:(0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1),
#               f6:(0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0)]
# {OUT} V_K2 = [f1:(0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1),
#               f2:(0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#               f3:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#               f4:(0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1),
#               f5:(0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1),
#               f6:(0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0)]
# Returned status: 0
#
# Monitor_BFER::check_errors(const int8 U[6x12], const int8 V[6x12])
# {IN}  U = [f1:(0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1),
#            f2:(0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#            f3:(0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#            f4:(0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1),
#            f5:(0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1),
#            f6:(0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0)]
# {IN}  V = [f1:(0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1),
#            f2:(0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#            f3:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#            f4:(0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1),
#            f5:(0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1),
#            f6:(0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0)]
# Returned status: 5
#
# -------------------------------
# New communication (nÂ°17)
# -------------------------------
#
# Source_random::generate(int8 U_K[6x12])
# {OUT} U_K = [f1:(0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0),
#              f2:(0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1),
#              f3:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1),
#              f4:(0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1),
#              f5:(0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0),
#              f6:(0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0)]
# Returned status: 0
#
# CRC_NO::build(const int8 U_K1[6x12], int8 U_K2[6x12])
# {IN}  U_K1 = [f1:(0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0),
#               f2:(0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1),
#               f3:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1),
#               f4:(0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1),
#               f5:(0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0),
#               f6:(0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0)]
# {OUT} U_K2 = [f1:(0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0),
#               f2:(0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1),
#               f3:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1),
#               f4:(0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1),
#               f5:(0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0),
#               f6:(0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0)]
# Returned status: 0
#
# Encoder_NO::encode(const int8 U_K[6x12], int8 X_N[6x12])
# {IN}  U_K = [f1:(0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0),
#              f2:(0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1),
#              f3:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1),
#              f4:(0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1),
#              f5:(0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0),
#              f6:(0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0)]
# {OUT} X_N = [f1:(0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0),
#              f2:(0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1),
#              f3:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1),
#              f4:(0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1),
#              f5:(0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0),
#              f6:(0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0)]
# Returned status: 0
#
# Puncturer_NO::puncture(const int8 X_N1[6x12], int8 X_N2[6x12])
# {IN}  X_N1 = [f1:(0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0),
#               f2:(0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1),
#               f3:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1),
#               f4:(0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1),
#               f5:(0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0),
#               f6:(0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0)]
# {OUT} X_N2 = [f1:(0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0),
#               f2:(0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1),
#               f3:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1),
#               f4:(0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1),
#               f5:(0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0),
#               f6:(0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0)]
# Returned status: 0
#
# Modem_SCMA::modulate(const int8 X_N1[6x12], float32 X_N2[6x48])
# {IN}  X_N1 = [f1:(0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0),
#               f2:(0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1),
#               f3:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1),
#               f4:(0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1),
#               f5:(0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0),
#               f6:(0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0)]
# {OUT} X_N2 = [f1:(0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0),
#               f2:(-0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0),
#               f3:(0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1),
#               f5:(0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3),
#               f6:(0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Channel_Rayleigh_LLR::add_noise_wg(const float32 X_N[6x48], float32 H_N[6x48], float32 Y_N[6x48])
# {IN}  X_N = [f1:(0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0),
#              f2:(-0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0),
#              f3:(0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1),
#              f5:(0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3),
#              f6:(0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0)]
# {OUT} H_N = [f1:(-0x1.bdde1ap-1, 0x1.74a1e6p-1, -0x1.9fbb8ep+0, 0x1.e4c55cp-2, 0x1.ddec4cp-1, 0x1.4b4cecp-3, 0x1.77fe52p-3, 0x1.212bd8p-1, -0x1.ea6cdap-2, 0x1.45af54p-1, 0x1.8facfep-3, -0x1.37c09cp-2, -0x1.62fe8ap-5, -0x1.303466p-2, -0x1.a97632p-2, -0x1.b2928p-2, 0x1.111e4p+0, 0x1.ce0108p-2, -0x1.fe58p-4, -0x1.62571ap+0, 0x1.bacdc8p-6, -0x1.90471p-3, -0x1.6178acp-1, 0x1.55f576p+0, 0x1.43cd64p-4, 0x1.810c3ep-7, 0x1.1b0bd2p-1, 0x1.acbe32p-2, 0x1.f16ee6p-1, 0x1.74a558p-2, 0x1.317796p-4, 0x1.70ffa4p-1, 0x1.48fa3ep-3, -0x1.269f8p+0, 0x1.fd4932p-3, -0x1.724932p-1, 0x1.435cb4p+0, 0x1.2baa78p-1, 0x1.def45p-1, 0x1.9f5362p-3, -0x1.1c4806p+1, -0x1.1c4ef8p-1, -0x1.495ffcp-3, 0x1.d6f69p+0, -0x1.6e994ap-1, 0x1.ccec74p-1, 0x1.2769e8p-1, 0x1.d45654p-1),
#              f2:(0x1.bc8a5cp-1, -0x1.309408p-3, -0x1.0e9324p+0, 0x1.b0cb8ep-2, -0x1.8fa914p-1, 0x1.4d0734p-1, 0x1.8cdc08p-2, -0x1.547f2p-2, 0x1.0eea86p+0, -0x1.dfdd08p-3, 0x1.6209e4p-3, 0x1.7425bp+0, 0x1.162712p-1, 0x1.2474ccp-1, 0x1.8c4cdcp-1, -0x1.4ea764p+0, -0x1.45d42p-4, -0x1.68ca36p-3, 0x1.7cc862p-4, -0x1.63e024p-2, -0x1.0a752cp+0, 0x1.f1545ap-6, -0x1.bda8ccp-1, -0x1.9d742ap-4, -0x1.91d2e4p-1, -0x1.9194a2p+0, -0x1.958134p-3, -0x1.6369e8p+0, 0x1.5266fap+0, 0x1.3ad4fap-4, -0x1.9d2574p-1, -0x1.18e8dap-3, -0x1.899444p-1, 0x1.3a94dap+0, 0x1.8e8664p-2, -0x1.16ef5ap-3, 0x1.1bf286p+0, 0x1.cd6a18p+0, -0x1.b104bp-6, -0x1.69a6ap+0, -0x1.8211eep-1, -0x1.110f48p+0, 0x1.9c986ep-2, 0x1.a8160ep-2, 0x1.815e72p-6, -0x1.26d6cep-2, -0x1.8510fcp-1, -0x1.60d07cp-2),
#              f3:(0x1.998174p-1, 0x1.a0a842p-3, 0x1.2c1056p-5, -0x1.4bfd1ep-1, 0x1.20ac38p-2, 0x1.bccd34p-2, -0x1.c21b4p-2, 0x1.408984p-1, 0x1.f29dd4p-1, 0x1.1eefbcp-3, 0x1.670f44p-1, 0x1.0e8feap-1, 0x1.17b43ep+0, 0x1.ab4174p-2, -0x1.b1d6e8p-3, 0x1.541f02p-4, -0x1.0de09ap+0, 0x1.3f9d02p+1, -0x1.07585p-1, 0x1.1cec36p-3, 0x1.ace0bp-1, 0x1.a1199p-1, -0x1.5b49fap-4, -0x1.8964cap-1, -0x1.07747p+0, 0x1.2ef3aap-3, -0x1.85c442p-3, 0x1.7b4b2ep+0, -0x1.18bdap-1, -0x1.cca4ecp-6, 0x1.5c972ep-5, -0x1.241776p-1, -0x1.646ebep+0, 0x1.573428p-7, 0x1.7cd75cp-4, 0x1.9f976ap-2, -0x1.6f4dep-1, -0x1.58d0c4p-1, -0x1.f79094p-1, -0x1.032cc2p+0, 0x1.76d516p-4, 0x1.f4b158p-2, 0x1.3fdd44p+0, 0x1.49c22ep-3, -0x1.77339ep-1, -0x1.357ca2p-10, -0x1.a3b33ap-1, 0x1.04304ep-2),
#              f4:(-0x1.ff3446p-2, 0x1.201cf4p-2, -0x1.67d68p-1, -0x1.30ce8cp-1, -0x1.544d26p-2, -0x1.15fe52p+1, -0x1.1ed8ep-1, -0x1.3ddf88p+0, -0x1.81f156p+0, -0x1.8b5f7cp-1, 0x1.fd5ac6p-2, 0x1.1e522ap+0, -0x1.477ea8p+0, 0x1.8b79cep-4, 0x1.1089ap+0, 0x1.890368p-1, -0x1.a8ba98p-1, 0x1.525854p-1, -0x1.bc7dbep-3, -0x1.66ca1p+0, 0x1.b2e1ep-2, -0x1.6ecbf2p-1, -0x1.16b96cp-1, -0x1.6fcfbap+0, -0x1.0a54a8p+1, -0x1.2d1824p+0, 0x1.04d9dap-1, -0x1.8083c2p-4, 0x1.722594p-2, -0x1.74b678p-4, -0x1.99154cp-3, -0x1.2c7f52p-6, -0x1.00e98ep-5, -0x1.a9672p-4, -0x1.a1d3b8p-1, 0x1.369c2ep-3, 0x1.4db1eep-1, 0x1.3a7ddcp+0, 0x1.669faap-4, -0x1.820616p-1, -0x1.102058p+0, 0x1.9c0b72p-2, -0x1.f4ad9ep-3, 0x1.302e18p+0, -0x1.507c9p-2, -0x1.69bc96p-3, -0x1.2f8752p-1, 0x1.1a549p-1),
#              f5:(-0x1.a51a24p-2, -0x1.2080a6p+0, 0x1.39af1ep-2, 0x1.2fac22p-3, 0x1.a48ac6p-1, 0x1.cf2e5cp-5, 0x1.4959d8p-3, 0x1.f4108ep-2, -0x1.fbc31ep-2, 0x1.3f3fap-3, 0x1.065b6ap-2, -0x1.7d8ff4p-1, -0x1.d564fcp-1, 0x1.e3f18cp-2, 0x1.421454p+0, 0x1.918bf2p-7, 0x1.caeb02p-1, -0x1.a0c5b2p-1, 0x1.6fae7p-1, 0x1.8065a2p-2, 0x1.12277cp+1, 0x1.7096b6p+0, 0x1.77b168p-1, 0x1.034176p-1, -0x1.71bcbap-6, 0x1.3b5058p-1, 0x1.c9f2c2p-2, 0x1.e52a2ep-1, -0x1.086616p-5, 0x1.524ca2p-1, 0x1.3101cep+0, -0x1.ed7f44p-2, 0x1.4f8d3cp+0, -0x1.77ce08p-1, -0x1.77497cp-1, -0x1.65a534p-3, 0x1.ca0598p-2, 0x1.158098p-2, 0x1.dbe2cep+0, 0x1.39f89cp-1, 0x1.7687aep-1, -0x1.cb8b6cp-1, 0x1.036b92p+0, 0x1.a0f1dep-1, -0x1.4648f2p-2, 0x1.17c9d4p+0, -0x1.6dde6ap-1, 0x1.3580fap+0),
#              f6:(-0x1.fb5d08p-7, -0x1.84618p-2, -0x1.be924p-1, 0x1.69460cp-5, 0x1.60b26p-4, -0x1.07b102p-2, -0x1.1ba5b4p-1, 0x1.c1d7ccp-2, -0x1.3c613ap-1, -0x1.5d3ecap-3, 0x1.9f85ep-2, 0x1.7e786cp-1, 0x1.97928ap-2, 0x1.852cdcp-2, -0x1.3bd5fap+0, 0x1.a72936p-1, -0x1.44fc54p-3, -0x1.4a7186p-2, 0x1.278368p-2, 0x1.8ef2bap-1, -0x1.287c8ap-2, -0x1.4558dp+0, 0x1.debde4p-1, 0x1.1aab22p-9, -0x1.2dea7ep+0, -0x1.dce928p-2, -0x1.73772ap-3, -0x1.f0e82ap-2, 0x1.9daef4p-2, -0x1.51b7b8p+0, -0x1.ef65ecp-2, -0x1.0b4444p-2, -0x1.8ad82ap-1, 0x1.719edcp+0, 0x1.90d178p-5, 0x1.be3d38p-6, -0x1.1ee8dep-2, 0x1.a8bd1ap-1, -0x1.17454ep-2, 0x1.266d22p-2, -0x1.df50fp-2, 0x1.573492p-2, -0x1.6a03fp-2, -0x1.a43daep-1, 0x1.cc2dfcp-1, -0x1.118db2p-4, -0x1.0c0f36p-2, -0x1.40da3ap-2)]
# {OUT} Y_N = [f1:(0x1.504778p-1, -0x1.35f4b2p-1, 0x1.abff98p-1, 0x1.03d15p+0, -0x1.8b389ep-3, 0x1.73ffa4p-1, -0x1.9763d6p-1, 0x1.7451bp-2, -0x1.b5f89cp-1, -0x1.72bcbcp-2, 0x1.d0798p-2, -0x1.41d21p-3, 0x1.7b58ap-1, 0x1.81f658p-2, 0x1.84f72cp+0, -0x1.266cc8p+0, -0x1.096992p+0, -0x1.192782p+0, 0x1.37f398p-3, -0x1.73165ap+0, -0x1.a6ba66p-3, -0x1.4595ap-3, 0x1.cbe53p+0, -0x1.f1caccp+0, 0x1.8c5338p-2, -0x1.bfacc6p+0, 0x1.cd2b4p-4, 0x1.99eacap-2, -0x1.058c04p-1, -0x1.f28236p-1, -0x1.0adb24p-2, -0x1.002048p+0, 0x1.d55e06p+0, -0x1.9493bp+0, -0x1.0275cep-2, 0x1.9b9718p-2, 0x1.9ffb4p-6, 0x1.a223b4p+0, 0x1.125238p+1, -0x1.84ba5cp-2, 0x1.02809ep-1, 0x1.b89dcap-2, 0x1.15dc98p-3, -0x1.8b368p-1, 0x1.69b1d8p-2, -0x1.598c06p-2, -0x1.9a3bbp-4, 0x1.659bcp-1),
#              f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Modem_SCMA::filter(const float32 Y_N1[6x48], float32 Y_N2[6x48])
# {IN}  Y_N1 = [f1:(0x1.504778p-1, -0x1.35f4b2p-1, 0x1.abff98p-1, 0x1.03d15p+0, -0x1.8b389ep-3, 0x1.73ffa4p-1, -0x1.9763d6p-1, 0x1.7451bp-2, -0x1.b5f89cp-1, -0x1.72bcbcp-2, 0x1.d0798p-2, -0x1.41d21p-3, 0x1.7b58ap-1, 0x1.81f658p-2, 0x1.84f72cp+0, -0x1.266cc8p+0, -0x1.096992p+0, -0x1.192782p+0, 0x1.37f398p-3, -0x1.73165ap+0, -0x1.a6ba66p-3, -0x1.4595ap-3, 0x1.cbe53p+0, -0x1.f1caccp+0, 0x1.8c5338p-2, -0x1.bfacc6p+0, 0x1.cd2b4p-4, 0x1.99eacap-2, -0x1.058c04p-1, -0x1.f28236p-1, -0x1.0adb24p-2, -0x1.002048p+0, 0x1.d55e06p+0, -0x1.9493bp+0, -0x1.0275cep-2, 0x1.9b9718p-2, 0x1.9ffb4p-6, 0x1.a223b4p+0, 0x1.125238p+1, -0x1.84ba5cp-2, 0x1.02809ep-1, 0x1.b89dcap-2, 0x1.15dc98p-3, -0x1.8b368p-1, 0x1.69b1d8p-2, -0x1.598c06p-2, -0x1.9a3bbp-4, 0x1.659bcp-1),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# {OUT} Y_N2 = [f1:(0x1.504778p-1, -0x1.35f4b2p-1, 0x1.abff98p-1, 0x1.03d15p+0, -0x1.8b389ep-3, 0x1.73ffa4p-1, -0x1.9763d6p-1, 0x1.7451bp-2, -0x1.b5f89cp-1, -0x1.72bcbcp-2, 0x1.d0798p-2, -0x1.41d21p-3, 0x1.7b58ap-1, 0x1.81f658p-2, 0x1.84f72cp+0, -0x1.266cc8p+0, -0x1.096992p+0, -0x1.192782p+0, 0x1.37f398p-3, -0x1.73165ap+0, -0x1.a6ba66p-3, -0x1.4595ap-3, 0x1.cbe53p+0, -0x1.f1caccp+0, 0x1.8c5338p-2, -0x1.bfacc6p+0, 0x1.cd2b4p-4, 0x1.99eacap-2, -0x1.058c04p-1, -0x1.f28236p-1, -0x1.0adb24p-2, -0x1.002048p+0, 0x1.d55e06p+0, -0x1.9493bp+0, -0x1.0275cep-2, 0x1.9b9718p-2, 0x1.9ffb4p-6, 0x1.a223b4p+0, 0x1.125238p+1, -0x1.84ba5cp-2, 0x1.02809ep-1, 0x1.b89dcap-2, 0x1.15dc98p-3, -0x1.8b368p-1, 0x1.69b1d8p-2, -0x1.598c06p-2, -0x1.9a3bbp-4, 0x1.659bcp-1),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Modem_SCMA::demodulate_wg(const float32 H_N[6x48], const float32 Y_N1[6x48], float32 Y_N2[6x12])
# {IN}  H_N  = [f1:(-0x1.bdde1ap-1, 0x1.74a1e6p-1, -0x1.9fbb8ep+0, 0x1.e4c55cp-2, 0x1.ddec4cp-1, 0x1.4b4cecp-3, 0x1.77fe52p-3, 0x1.212bd8p-1, -0x1.ea6cdap-2, 0x1.45af54p-1, 0x1.8facfep-3, -0x1.37c09cp-2, -0x1.62fe8ap-5, -0x1.303466p-2, -0x1.a97632p-2, -0x1.b2928p-2, 0x1.111e4p+0, 0x1.ce0108p-2, -0x1.fe58p-4, -0x1.62571ap+0, 0x1.bacdc8p-6, -0x1.90471p-3, -0x1.6178acp-1, 0x1.55f576p+0, 0x1.43cd64p-4, 0x1.810c3ep-7, 0x1.1b0bd2p-1, 0x1.acbe32p-2, 0x1.f16ee6p-1, 0x1.74a558p-2, 0x1.317796p-4, 0x1.70ffa4p-1, 0x1.48fa3ep-3, -0x1.269f8p+0, 0x1.fd4932p-3, -0x1.724932p-1, 0x1.435cb4p+0, 0x1.2baa78p-1, 0x1.def45p-1, 0x1.9f5362p-3, -0x1.1c4806p+1, -0x1.1c4ef8p-1, -0x1.495ffcp-3, 0x1.d6f69p+0, -0x1.6e994ap-1, 0x1.ccec74p-1, 0x1.2769e8p-1, 0x1.d45654p-1),
#               f2:(0x1.bc8a5cp-1, -0x1.309408p-3, -0x1.0e9324p+0, 0x1.b0cb8ep-2, -0x1.8fa914p-1, 0x1.4d0734p-1, 0x1.8cdc08p-2, -0x1.547f2p-2, 0x1.0eea86p+0, -0x1.dfdd08p-3, 0x1.6209e4p-3, 0x1.7425bp+0, 0x1.162712p-1, 0x1.2474ccp-1, 0x1.8c4cdcp-1, -0x1.4ea764p+0, -0x1.45d42p-4, -0x1.68ca36p-3, 0x1.7cc862p-4, -0x1.63e024p-2, -0x1.0a752cp+0, 0x1.f1545ap-6, -0x1.bda8ccp-1, -0x1.9d742ap-4, -0x1.91d2e4p-1, -0x1.9194a2p+0, -0x1.958134p-3, -0x1.6369e8p+0, 0x1.5266fap+0, 0x1.3ad4fap-4, -0x1.9d2574p-1, -0x1.18e8dap-3, -0x1.899444p-1, 0x1.3a94dap+0, 0x1.8e8664p-2, -0x1.16ef5ap-3, 0x1.1bf286p+0, 0x1.cd6a18p+0, -0x1.b104bp-6, -0x1.69a6ap+0, -0x1.8211eep-1, -0x1.110f48p+0, 0x1.9c986ep-2, 0x1.a8160ep-2, 0x1.815e72p-6, -0x1.26d6cep-2, -0x1.8510fcp-1, -0x1.60d07cp-2),
#               f3:(0x1.998174p-1, 0x1.a0a842p-3, 0x1.2c1056p-5, -0x1.4bfd1ep-1, 0x1.20ac38p-2, 0x1.bccd34p-2, -0x1.c21b4p-2, 0x1.408984p-1, 0x1.f29dd4p-1, 0x1.1eefbcp-3, 0x1.670f44p-1, 0x1.0e8feap-1, 0x1.17b43ep+0, 0x1.ab4174p-2, -0x1.b1d6e8p-3, 0x1.541f02p-4, -0x1.0de09ap+0, 0x1.3f9d02p+1, -0x1.07585p-1, 0x1.1cec36p-3, 0x1.ace0bp-1, 0x1.a1199p-1, -0x1.5b49fap-4, -0x1.8964cap-1, -0x1.07747p+0, 0x1.2ef3aap-3, -0x1.85c442p-3, 0x1.7b4b2ep+0, -0x1.18bdap-1, -0x1.cca4ecp-6, 0x1.5c972ep-5, -0x1.241776p-1, -0x1.646ebep+0, 0x1.573428p-7, 0x1.7cd75cp-4, 0x1.9f976ap-2, -0x1.6f4dep-1, -0x1.58d0c4p-1, -0x1.f79094p-1, -0x1.032cc2p+0, 0x1.76d516p-4, 0x1.f4b158p-2, 0x1.3fdd44p+0, 0x1.49c22ep-3, -0x1.77339ep-1, -0x1.357ca2p-10, -0x1.a3b33ap-1, 0x1.04304ep-2),
#               f4:(-0x1.ff3446p-2, 0x1.201cf4p-2, -0x1.67d68p-1, -0x1.30ce8cp-1, -0x1.544d26p-2, -0x1.15fe52p+1, -0x1.1ed8ep-1, -0x1.3ddf88p+0, -0x1.81f156p+0, -0x1.8b5f7cp-1, 0x1.fd5ac6p-2, 0x1.1e522ap+0, -0x1.477ea8p+0, 0x1.8b79cep-4, 0x1.1089ap+0, 0x1.890368p-1, -0x1.a8ba98p-1, 0x1.525854p-1, -0x1.bc7dbep-3, -0x1.66ca1p+0, 0x1.b2e1ep-2, -0x1.6ecbf2p-1, -0x1.16b96cp-1, -0x1.6fcfbap+0, -0x1.0a54a8p+1, -0x1.2d1824p+0, 0x1.04d9dap-1, -0x1.8083c2p-4, 0x1.722594p-2, -0x1.74b678p-4, -0x1.99154cp-3, -0x1.2c7f52p-6, -0x1.00e98ep-5, -0x1.a9672p-4, -0x1.a1d3b8p-1, 0x1.369c2ep-3, 0x1.4db1eep-1, 0x1.3a7ddcp+0, 0x1.669faap-4, -0x1.820616p-1, -0x1.102058p+0, 0x1.9c0b72p-2, -0x1.f4ad9ep-3, 0x1.302e18p+0, -0x1.507c9p-2, -0x1.69bc96p-3, -0x1.2f8752p-1, 0x1.1a549p-1),
#               f5:(-0x1.a51a24p-2, -0x1.2080a6p+0, 0x1.39af1ep-2, 0x1.2fac22p-3, 0x1.a48ac6p-1, 0x1.cf2e5cp-5, 0x1.4959d8p-3, 0x1.f4108ep-2, -0x1.fbc31ep-2, 0x1.3f3fap-3, 0x1.065b6ap-2, -0x1.7d8ff4p-1, -0x1.d564fcp-1, 0x1.e3f18cp-2, 0x1.421454p+0, 0x1.918bf2p-7, 0x1.caeb02p-1, -0x1.a0c5b2p-1, 0x1.6fae7p-1, 0x1.8065a2p-2, 0x1.12277cp+1, 0x1.7096b6p+0, 0x1.77b168p-1, 0x1.034176p-1, -0x1.71bcbap-6, 0x1.3b5058p-1, 0x1.c9f2c2p-2, 0x1.e52a2ep-1, -0x1.086616p-5, 0x1.524ca2p-1, 0x1.3101cep+0, -0x1.ed7f44p-2, 0x1.4f8d3cp+0, -0x1.77ce08p-1, -0x1.77497cp-1, -0x1.65a534p-3, 0x1.ca0598p-2, 0x1.158098p-2, 0x1.dbe2cep+0, 0x1.39f89cp-1, 0x1.7687aep-1, -0x1.cb8b6cp-1, 0x1.036b92p+0, 0x1.a0f1dep-1, -0x1.4648f2p-2, 0x1.17c9d4p+0, -0x1.6dde6ap-1, 0x1.3580fap+0),
#               f6:(-0x1.fb5d08p-7, -0x1.84618p-2, -0x1.be924p-1, 0x1.69460cp-5, 0x1.60b26p-4, -0x1.07b102p-2, -0x1.1ba5b4p-1, 0x1.c1d7ccp-2, -0x1.3c613ap-1, -0x1.5d3ecap-3, 0x1.9f85ep-2, 0x1.7e786cp-1, 0x1.97928ap-2, 0x1.852cdcp-2, -0x1.3bd5fap+0, 0x1.a72936p-1, -0x1.44fc54p-3, -0x1.4a7186p-2, 0x1.278368p-2, 0x1.8ef2bap-1, -0x1.287c8ap-2, -0x1.4558dp+0, 0x1.debde4p-1, 0x1.1aab22p-9, -0x1.2dea7ep+0, -0x1.dce928p-2, -0x1.73772ap-3, -0x1.f0e82ap-2, 0x1.9daef4p-2, -0x1.51b7b8p+0, -0x1.ef65ecp-2, -0x1.0b4444p-2, -0x1.8ad82ap-1, 0x1.719edcp+0, 0x1.90d178p-5, 0x1.be3d38p-6, -0x1.1ee8dep-2, 0x1.a8bd1ap-1, -0x1.17454ep-2, 0x1.266d22p-2, -0x1.df50fp-2, 0x1.573492p-2, -0x1.6a03fp-2, -0x1.a43daep-1, 0x1.cc2dfcp-1, -0x1.118db2p-4, -0x1.0c0f36p-2, -0x1.40da3ap-2)]
# {IN}  Y_N1 = [f1:(0x1.504778p-1, -0x1.35f4b2p-1, 0x1.abff98p-1, 0x1.03d15p+0, -0x1.8b389ep-3, 0x1.73ffa4p-1, -0x1.9763d6p-1, 0x1.7451bp-2, -0x1.b5f89cp-1, -0x1.72bcbcp-2, 0x1.d0798p-2, -0x1.41d21p-3, 0x1.7b58ap-1, 0x1.81f658p-2, 0x1.84f72cp+0, -0x1.266cc8p+0, -0x1.096992p+0, -0x1.192782p+0, 0x1.37f398p-3, -0x1.73165ap+0, -0x1.a6ba66p-3, -0x1.4595ap-3, 0x1.cbe53p+0, -0x1.f1caccp+0, 0x1.8c5338p-2, -0x1.bfacc6p+0, 0x1.cd2b4p-4, 0x1.99eacap-2, -0x1.058c04p-1, -0x1.f28236p-1, -0x1.0adb24p-2, -0x1.002048p+0, 0x1.d55e06p+0, -0x1.9493bp+0, -0x1.0275cep-2, 0x1.9b9718p-2, 0x1.9ffb4p-6, 0x1.a223b4p+0, 0x1.125238p+1, -0x1.84ba5cp-2, 0x1.02809ep-1, 0x1.b89dcap-2, 0x1.15dc98p-3, -0x1.8b368p-1, 0x1.69b1d8p-2, -0x1.598c06p-2, -0x1.9a3bbp-4, 0x1.659bcp-1),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# {OUT} Y_N2 = [f1:(-0x1.416542p+1, 0x1.2dc994p+2, -0x1.7c4afcp+0, -0x1.71824p-3, -0x1.0b2008p+4, -0x1.240cf2p+4, -0x1.dde10ap+1, -0x1.6d89b6p+1, 0x1.6cd1c4p-1, 0x1.52a3aap+2, -0x1.05c864p+0, 0x1.0d99f8p-1),
#               f2:(-0x1.216p-3, -0x1.840458p+0, -0x1.8b8ad4p+0, -0x1.7f2b2p+2, -0x1.e35bep-4, -0x1.667422p+0, 0x1.911bb4p+3, 0x1.0605eep+3, -0x1.a7afe4p+3, -0x1.8a856cp+4, -0x1.cd2658p-1, -0x1.9924ap-2),
#               f3:(-0x1.201b8p-1, -0x1.57cc34p+1, -0x1.7e2bbcp+0, 0x1.9de6p+1, 0x1.4f7522p+3, -0x1.0a6ea8p+3, 0x1.a6dd5p+2, 0x1.079d5cp+3, 0x1.b10cb2p+3, 0x1.773aap+2, -0x1.7726cp-3, -0x1.2d0dp-4),
#               f4:(-0x1.5ca44ep+4, 0x1.3f9a9cp+3, -0x1.31ba7cp+3, 0x1.af9e08p+2, 0x1.8a0d9cp+2, -0x1.cfa20ep+3, 0x1.06c494p+0, 0x1.445p-9, 0x1.396918p+2, 0x1.0fdbbp-1, -0x1.f1ffbp-2, -0x1.6b71ap-3),
#               f5:(0x1.7510b8p-1, -0x1.45f004p+1, -0x1.70d6fep+2, -0x1.44e62cp+2, -0x1.76f848p+2, 0x1.f999b4p+2, -0x1.3df58p+2, 0x1.9f133cp+1, -0x1.e66388p+3, -0x1.7a8de8p+3, -0x1.babdep+0, -0x1.05ac0ap+1),
#               f6:(0x1.3e556ep+1, 0x1.47ffcp-2, -0x1.23c86p+1, 0x1.42a76cp+1, -0x1.90e704p+2, -0x1.980996p+0, -0x1.741d46p+0, 0x1.98baf8p+2, -0x1.00e6d8p-1, 0x1.056f28p-1, 0x1.17c2bcp+0, 0x1.4679bcp+2)]
# Returned status: 0
#
# Quantizer_standard::process(const float32 Y_N1[6x12], int8 Y_N2[6x12])
# {IN}  Y_N1 = [f1:(-0x1.416542p+1, 0x1.2dc994p+2, -0x1.7c4afcp+0, -0x1.71824p-3, -0x1.0b2008p+4, -0x1.240cf2p+4, -0x1.dde10ap+1, -0x1.6d89b6p+1, 0x1.6cd1c4p-1, 0x1.52a3aap+2, -0x1.05c864p+0, 0x1.0d99f8p-1),
#               f2:(-0x1.216p-3, -0x1.840458p+0, -0x1.8b8ad4p+0, -0x1.7f2b2p+2, -0x1.e35bep-4, -0x1.667422p+0, 0x1.911bb4p+3, 0x1.0605eep+3, -0x1.a7afe4p+3, -0x1.8a856cp+4, -0x1.cd2658p-1, -0x1.9924ap-2),
#               f3:(-0x1.201b8p-1, -0x1.57cc34p+1, -0x1.7e2bbcp+0, 0x1.9de6p+1, 0x1.4f7522p+3, -0x1.0a6ea8p+3, 0x1.a6dd5p+2, 0x1.079d5cp+3, 0x1.b10cb2p+3, 0x1.773aap+2, -0x1.7726cp-3, -0x1.2d0dp-4),
#               f4:(-0x1.5ca44ep+4, 0x1.3f9a9cp+3, -0x1.31ba7cp+3, 0x1.af9e08p+2, 0x1.8a0d9cp+2, -0x1.cfa20ep+3, 0x1.06c494p+0, 0x1.445p-9, 0x1.396918p+2, 0x1.0fdbbp-1, -0x1.f1ffbp-2, -0x1.6b71ap-3),
#               f5:(0x1.7510b8p-1, -0x1.45f004p+1, -0x1.70d6fep+2, -0x1.44e62cp+2, -0x1.76f848p+2, 0x1.f999b4p+2, -0x1.3df58p+2, 0x1.9f133cp+1, -0x1.e66388p+3, -0x1.7a8de8p+3, -0x1.babdep+0, -0x1.05ac0ap+1),
#               f6:(0x1.3e556ep+1, 0x1.47ffcp-2, -0x1.23c86p+1, 0x1.42a76cp+1, -0x1.90e704p+2, -0x1.980996p+0, -0x1.741d46p+0, 0x1.98baf8p+2, -0x1.00e6d8p-1, 0x1.056f28p-1, 0x1.17c2bcp+0, 0x1.4679bcp+2)]
# {OUT} Y_N2 = [f1:(0xffffffec, 0x26, 0xfffffff4, 0xffffffff, 0xffffff81, 0xffffff81, 0xffffffe2, 0xffffffe9, 0x6, 0x2a, 0xfffffff8, 0x4),
#               f2:(0xffffffff, 0xfffffff4, 0xfffffff4, 0xffffffd0, 0xffffffff, 0xfffffff5, 0x64, 0x42, 0xffffff96, 0xffffff81, 0xfffffff9, 0xfffffffd),
#               f3:(0xfffffffb, 0xffffffeb, 0xfffffff4, 0x1a, 0x54, 0xffffffbd, 0x35, 0x42, 0x6c, 0x2f, 0xffffffff, 0xffffffff),
#               f4:(0xffffff81, 0x50, 0xffffffb4, 0x36, 0x31, 0xffffff8c, 0x8, 0x0, 0x27, 0x4, 0xfffffffc, 0xffffffff),
#               f5:(0x6, 0xffffffec, 0xffffffd2, 0xffffffd7, 0xffffffd1, 0x3f, 0xffffffd8, 0x1a, 0xffffff86, 0xffffffa1, 0xfffffff2, 0xfffffff0),
#               f6:(0x14, 0x3, 0xffffffee, 0x14, 0xffffffce, 0xfffffff3, 0xfffffff4, 0x33, 0xfffffffc, 0x4, 0x9, 0x29)]
# Returned status: 0
#
# Puncturer_NO::depuncture(const int8 Y_N1[6x12], int8 Y_N2[6x12])
# {IN}  Y_N1 = [f1:(0xffffffec, 0x26, 0xfffffff4, 0xffffffff, 0xffffff81, 0xffffff81, 0xffffffe2, 0xffffffe9, 0x6, 0x2a, 0xfffffff8, 0x4),
#               f2:(0xffffffff, 0xfffffff4, 0xfffffff4, 0xffffffd0, 0xffffffff, 0xfffffff5, 0x64, 0x42, 0xffffff96, 0xffffff81, 0xfffffff9, 0xfffffffd),
#               f3:(0xfffffffb, 0xffffffeb, 0xfffffff4, 0x1a, 0x54, 0xffffffbd, 0x35, 0x42, 0x6c, 0x2f, 0xffffffff, 0xffffffff),
#               f4:(0xffffff81, 0x50, 0xffffffb4, 0x36, 0x31, 0xffffff8c, 0x8, 0x0, 0x27, 0x4, 0xfffffffc, 0xffffffff),
#               f5:(0x6, 0xffffffec, 0xffffffd2, 0xffffffd7, 0xffffffd1, 0x3f, 0xffffffd8, 0x1a, 0xffffff86, 0xffffffa1, 0xfffffff2, 0xfffffff0),
#               f6:(0x14, 0x3, 0xffffffee, 0x14, 0xffffffce, 0xfffffff3, 0xfffffff4, 0x33, 0xfffffffc, 0x4, 0x9, 0x29)]
# {OUT} Y_N2 = [f1:(0xffffffec, 0x26, 0xfffffff4, 0xffffffff, 0xffffff81, 0xffffff81, 0xffffffe2, 0xffffffe9, 0x6, 0x2a, 0xfffffff8, 0x4),
#               f2:(0xffffffff, 0xfffffff4, 0xfffffff4, 0xffffffd0, 0xffffffff, 0xfffffff5, 0x64, 0x42, 0xffffff96, 0xffffff81, 0xfffffff9, 0xfffffffd),
#               f3:(0xfffffffb, 0xffffffeb, 0xfffffff4, 0x1a, 0x54, 0xffffffbd, 0x35, 0x42, 0x6c, 0x2f, 0xffffffff, 0xffffffff),
#               f4:(0xffffff81, 0x50, 0xffffffb4, 0x36, 0x31, 0xffffff8c, 0x8, 0x0, 0x27, 0x4, 0xfffffffc, 0xffffffff),
#               f5:(0x6, 0xffffffec, 0xffffffd2, 0xffffffd7, 0xffffffd1, 0x3f, 0xffffffd8, 0x1a, 0xffffff86, 0xffffffa1, 0xfffffff2, 0xfffffff0),
#               f6:(0x14, 0x3, 0xffffffee, 0x14, 0xffffffce, 0xfffffff3, 0xfffffff4, 0x33, 0xfffffffc, 0x4, 0x9, 0x29)]
# Returned status: 0
#
# Decoder_NO::decode_siho(const int8 Y_N[6x12], int8 V_K[6x12])
# {IN}  Y_N = [f1:(0xffffffec, 0x26, 0xfffffff4, 0xffffffff, 0xffffff81, 0xffffff81, 0xffffffe2, 0xffffffe9, 0x6, 0x2a, 0xfffffff8, 0x4),
#              f2:(0xffffffff, 0xfffffff4, 0xfffffff4, 0xffffffd0, 0xffffffff, 0xfffffff5, 0x64, 0x42, 0xffffff96, 0xffffff81, 0xfffffff9, 0xfffffffd),
#              f3:(0xfffffffb, 0xffffffeb, 0xfffffff4, 0x1a, 0x54, 0xffffffbd, 0x35, 0x42, 0x6c, 0x2f, 0xffffffff, 0xffffffff),
#              f4:(0xffffff81, 0x50, 0xffffffb4, 0x36, 0x31, 0xffffff8c, 0x8, 0x0, 0x27, 0x4, 0xfffffffc, 0xffffffff),
#              f5:(0x6, 0xffffffec, 0xffffffd2, 0xffffffd7, 0xffffffd1, 0x3f, 0xffffffd8, 0x1a, 0xffffff86, 0xffffffa1, 0xfffffff2, 0xfffffff0),
#              f6:(0x14, 0x3, 0xffffffee, 0x14, 0xffffffce, 0xfffffff3, 0xfffffff4, 0x33, 0xfffffffc, 0x4, 0x9, 0x29)]
# {OUT} V_K = [f1:(0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0),
#              f2:(0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1),
#              f3:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1),
#              f4:(0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1),
#              f5:(0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1),
#              f6:(0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0)]
# Returned status: 0
#
# CRC_NO::extract(const int8 V_K1[6x12], int8 V_K2[6x12])
# {IN}  V_K1 = [f1:(0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0),
#               f2:(0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1),
#               f3:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1),
#               f4:(0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1),
#               f5:(0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1),
#               f6:(0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0)]
# {OUT} V_K2 = [f1:(0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0),
#               f2:(0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1),
#               f3:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1),
#               f4:(0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1),
#               f5:(0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1),
#               f6:(0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0)]
# Returned status: 0
#
# Monitor_BFER::check_errors(const int8 U[6x12], const int8 V[6x12])
# {IN}  U = [f1:(0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0),
#            f2:(0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1),
#            f3:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1),
#            f4:(0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1),
#            f5:(0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0),
#            f6:(0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0)]
# {IN}  V = [f1:(0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0),
#            f2:(0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1),
#            f3:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1),
#            f4:(0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1),
#            f5:(0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1),
#            f6:(0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0)]
# Returned status: 6
#
# -------------------------------
# New communication (nÂ°18)
# -------------------------------
#
# Source_random::generate(int8 U_K[6x12])
# {OUT} U_K = [f1:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#              f2:(0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0),
#              f3:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0),
#              f4:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1),
#              f5:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1),
#              f6:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0)]
# Returned status: 0
#
# CRC_NO::build(const int8 U_K1[6x12], int8 U_K2[6x12])
# {IN}  U_K1 = [f1:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#               f2:(0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0),
#               f3:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0),
#               f4:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1),
#               f5:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1),
#               f6:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0)]
# {OUT} U_K2 = [f1:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#               f2:(0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0),
#               f3:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0),
#               f4:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1),
#               f5:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1),
#               f6:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0)]
# Returned status: 0
#
# Encoder_NO::encode(const int8 U_K[6x12], int8 X_N[6x12])
# {IN}  U_K = [f1:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#              f2:(0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0),
#              f3:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0),
#              f4:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1),
#              f5:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1),
#              f6:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0)]
# {OUT} X_N = [f1:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#              f2:(0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0),
#              f3:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0),
#              f4:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1),
#              f5:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1),
#              f6:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0)]
# Returned status: 0
#
# Puncturer_NO::puncture(const int8 X_N1[6x12], int8 X_N2[6x12])
# {IN}  X_N1 = [f1:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#               f2:(0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0),
#               f3:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0),
#               f4:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1),
#               f5:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1),
#               f6:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0)]
# {OUT} X_N2 = [f1:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#               f2:(0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0),
#               f3:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0),
#               f4:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1),
#               f5:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1),
#               f6:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0)]
# Returned status: 0
#
# Modem_SCMA::modulate(const int8 X_N1[6x12], float32 X_N2[6x48])
# {IN}  X_N1 = [f1:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#               f2:(0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0),
#               f3:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0),
#               f4:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1),
#               f5:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1),
#               f6:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0)]
# {OUT} X_N2 = [f1:(0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0),
#               f2:(0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0),
#               f3:(-0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1),
#               f5:(-0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2),
#               f6:(0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Channel_Rayleigh_LLR::add_noise_wg(const float32 X_N[6x48], float32 H_N[6x48], float32 Y_N[6x48])
# {IN}  X_N = [f1:(0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0),
#              f2:(0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0),
#              f3:(-0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1),
#              f5:(-0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2),
#              f6:(0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0)]
# {OUT} H_N = [f1:(-0x1.1cd724p-1, -0x1.a04f68p+0, -0x1.fc61f4p-5, -0x1.b61d1cp-3, -0x1.418758p-1, -0x1.318f38p+0, 0x1.57329cp+1, -0x1.6a21e6p-1, -0x1.02f28ap-1, -0x1.6506e4p-2, -0x1.666072p-1, 0x1.07ed86p-4, 0x1.c7f7bcp-4, 0x1.46366ep-2, 0x1.ab8b9ap-1, -0x1.7d2a8ep-2, 0x1.a1df2ap-7, -0x1.3ca184p-1, -0x1.b666ecp-1, 0x1.ef4e6ep-4, 0x1.3bf92cp-3, 0x1.445122p-3, -0x1.26db84p-2, 0x1.5aa79cp-3, -0x1.117acep-2, 0x1.e8200ep-5, 0x1.99ac84p-3, -0x1.dd4338p-4, -0x1.416a52p-1, -0x1.162b82p-2, -0x1.b60b56p-2, -0x1.46cb98p-5, 0x1.d319p-2, 0x1.97a18p-5, -0x1.9c0fep-1, 0x1.78ceeep+0, 0x1.363b42p-6, 0x1.133086p+0, -0x1.48b37p-1, 0x1.a5d926p-2, -0x1.112394p-2, 0x1.8a60f8p-1, 0x1.65822cp-2, 0x1.57b4d8p-3, -0x1.19edp+0, 0x1.00f754p-3, -0x1.b7a4bcp-2, 0x1.70ab1ep-2),
#              f2:(0x1.104d02p-4, 0x1.79f6e6p-1, 0x1.ae0bd6p-3, 0x1.c0af18p-2, 0x1.e87c3ap+0, 0x1.486e3p-3, -0x1.fb8f94p-3, 0x1.39fe82p-4, 0x1.05e3a2p+0, -0x1.44ca76p-1, 0x1.f5889ap-1, -0x1.7d1ee4p-3, 0x1.6b813ap-3, 0x1.6d5a42p-1, -0x1.f0ed06p-1, -0x1.9e0d2p+0, 0x1.cdacbep-2, -0x1.1ba7c2p-4, -0x1.6b7612p-2, -0x1.6d564ep-3, 0x1.2ca9a4p-2, -0x1.fe2686p-4, 0x1.774a5p-2, 0x1.585c34p-1, 0x1.5cb0f2p-3, 0x1.e48f76p-2, 0x1.4165f4p-2, -0x1.fdad98p-3, 0x1.68d2ap-1, -0x1.ba3336p-2, 0x1.8c9c9cp-2, 0x1.720236p-3, -0x1.2c172ap+0, -0x1.71baa4p-1, -0x1.4ceccep+0, -0x1.e7bb66p-2, 0x1.5a106cp-2, 0x1.bbf214p-2, -0x1.3b873cp-4, 0x1.474702p-1, 0x1.7981c8p+0, -0x1.e83588p-1, 0x1.b488f2p+0, 0x1.7d5904p-6, -0x1.449c5p-2, 0x1.00cfdcp-2, -0x1.3623dep+0, -0x1.ca0e8ep-4),
#              f3:(-0x1.a34e64p-2, -0x1.70c376p-6, -0x1.567fdcp-6, -0x1.4926fp-1, -0x1.326a5ap-3, 0x1.bc8baap+0, -0x1.b3eba2p-6, 0x1.465d5ep-5, -0x1.07de4ep+0, -0x1.4ece96p-1, 0x1.dc32aap-1, -0x1.9e3fb6p-2, 0x1.f5611p-1, -0x1.045438p-1, -0x1.6263e4p-3, -0x1.72ab44p-3, -0x1.46c152p-2, 0x1.f3d99ep-2, 0x1.caddc2p-7, 0x1.4e8152p-1, -0x1.04b7f6p-1, 0x1.f58d5ep-2, 0x1.d75b4ep-3, 0x1.f5cd2ep-1, 0x1.87e48p-1, -0x1.34a452p-2, -0x1.80287ap-1, 0x1.57749cp+0, 0x1.15534p-2, -0x1.466198p-1, 0x1.3b74c4p-5, 0x1.918702p-4, 0x1.93ce34p-1, 0x1.7f0e9ap-4, -0x1.93f194p-1, 0x1.6a7822p+0, -0x1.c5c4a4p-2, 0x1.4594b6p+0, 0x1.166f38p-4, -0x1.541e96p-1, -0x1.6c272p-1, 0x1.a8e152p-1, -0x1.1e38eap-3, -0x1.bb99c4p-2, -0x1.c70ebcp-2, -0x1.6a610cp-4, 0x1.037b9cp-4, -0x1.977874p-2),
#              f4:(0x1.3593aep+0, 0x1.431d9cp-1, 0x1.0eab36p-1, 0x1.b04608p-1, 0x1.7c40ecp-1, -0x1.0d5d4ep-1, 0x1.30ebe8p-1, 0x1.d7658cp-1, -0x1.489bfap-3, -0x1.eb8da4p-3, -0x1.30606ap-2, -0x1.e8c07ap-3, 0x1.187314p+0, -0x1.891904p+0, -0x1.50453ep-1, 0x1.1ecdd8p-1, -0x1.07f29p-3, -0x1.68ef5cp-1, -0x1.b64f48p-1, 0x1.3815cap+0, 0x1.b40e16p-1, 0x1.a4a246p-2, -0x1.2f3254p-1, 0x1.1b57ap-1, -0x1.af9f5ep-3, 0x1.d76f4p-2, 0x1.41f68ap+0, 0x1.0fdb24p-1, 0x1.1e1476p-2, 0x1.fb33f6p-3, 0x1.b2c9bp-5, 0x1.12f79ep-3, 0x1.ea921ep-1, 0x1.5ad3fep-4, 0x1.cb9b3ep-2, -0x1.7ef43ep-2, 0x1.64a9f2p-1, -0x1.e01f2ep-5, 0x1.6f0a1ap-3, 0x1.708dfap-1, 0x1.52b8b6p-3, -0x1.24b18ap-1, -0x1.b3cbb8p-6, -0x1.780fdp-6, 0x1.af651p-5, 0x1.7ea88ap+0, -0x1.093fa4p-1, 0x1.c712e4p-2),
#              f5:(-0x1.5211dap-3, 0x1.8e506ep+0, 0x1.74872cp-3, 0x1.382a52p-1, 0x1.734d0cp+0, -0x1.f0c7d6p-2, -0x1.ce28c6p+0, -0x1.ccb72ep-5, 0x1.8d3f52p-1, 0x1.0659bep-1, 0x1.f7e6d6p-1, -0x1.bf8ce6p-1, -0x1.481758p+0, -0x1.171e14p-4, 0x1.2748b6p-7, 0x1.d6d9fcp-3, 0x1.ae9cdcp-5, 0x1.ad906ep-2, -0x1.ef0166p-1, 0x1.243c9ep-3, -0x1.f04204p-2, 0x1.60c0e2p-3, 0x1.a16432p+0, 0x1.44eefp-1, 0x1.a7dp+0, -0x1.dd9ecp-1, 0x1.21ec9p-5, -0x1.afa04cp-1, 0x1.55b4bap-2, 0x1.501b98p-1, 0x1.2431dap+0, -0x1.7a63d4p-4, -0x1.cf5398p-4, -0x1.c63812p-3, 0x1.b5ad16p-2, 0x1.bc5e2p-3, -0x1.27723ep-1, 0x1.19c2fap-1, 0x1.0b4b6ap+0, 0x1.963a1p-3, 0x1.e4b74cp-2, 0x1.7a66a8p-2, 0x1.66ca94p-2, 0x1.61ep-1, 0x1.d07fa4p+0, -0x1.85d186p-1, -0x1.37b8f2p-1, 0x1.e6667cp-1),
#              f6:(-0x1.2a8c98p-8, 0x1.da4f1ep-4, -0x1.cb2b5cp-1, -0x1.a583bep-2, 0x1.60fd86p-2, 0x1.0f903ep+0, -0x1.0231bp-1, 0x1.693deep-1, -0x1.4a8ffp-1, -0x1.85ee1cp-10, -0x1.1c73a6p+0, 0x1.0b025ep+0, -0x1.0a239p+0, -0x1.4b9212p-5, -0x1.71cc6ap+0, -0x1.193f7ep-2, 0x1.738d32p-1, 0x1.ec1bdep-1, -0x1.a8898ap-1, 0x1.870d72p+0, 0x1.61c34p-5, -0x1.6a89ep-1, -0x1.0f284p-3, 0x1.e4dd74p-4, 0x1.3f7fdcp-1, -0x1.33a7b2p-3, 0x1.39c4fcp-5, -0x1.1fde34p-1, -0x1.009c26p-2, -0x1.d736c2p-1, -0x1.68604ep-1, -0x1.7a0fc6p-1, -0x1.47075ap-1, 0x1.1d9734p+0, -0x1.f4c5f6p-1, -0x1.327148p-2, 0x1.e58942p-2, 0x1.27dcdep+0, -0x1.9cbf6ep-1, -0x1.b9e116p+0, 0x1.3ea92ap+0, 0x1.76bfa6p-1, 0x1.685544p-2, 0x1.c4690ap-7, -0x1.4b3278p-3, 0x1.69973cp-1, -0x1.7fc1fap-3, 0x1.7aa422p-2)]
# {OUT} Y_N = [f1:(0x1.abe788p-1, 0x1.c52c4ap-2, 0x1.39d828p-1, 0x1.4d5682p-1, -0x1.f65c5cp-1, 0x1.6110bep-4, 0x1.5d2924p-2, -0x1.2b2c96p-2, -0x1.acdd38p-1, 0x1.b35da2p-1, -0x1.32121ap-1, 0x1.9c3348p-2, -0x1.27a21p-5, 0x1.e2fbcep-2, -0x1.39184cp-1, -0x1.ae2ba8p-1, 0x1.651bfp-6, 0x1.3964e2p-2, 0x1.0f4bd4p-2, 0x1.392e94p-2, 0x1.294cep-1, 0x1.6a955cp-1, -0x1.534b6p-3, -0x1.1a433p-1, -0x1.a71adp-1, -0x1.cc7d22p+0, -0x1.4ac90cp-5, -0x1.0a25ep-3, 0x1.188662p-1, 0x1.28c35p-7, 0x1.0e6decp-1, -0x1.13d15ep-2, 0x1.cc4bap-5, -0x1.47902cp-2, 0x1.916a08p+0, 0x1.08271ep-1, -0x1.79d762p-2, 0x1.2f7acp-3, 0x1.1b166ap+0, -0x1.7fbb88p-1, -0x1.584424p-1, 0x1.9d88e4p-2, -0x1.a950fp-1, 0x1.016642p-3, 0x1.39b5ecp+0, 0x1.e95a7ep-1, -0x1.981b9cp-2, 0x1.992138p-1),
#              f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Modem_SCMA::filter(const float32 Y_N1[6x48], float32 Y_N2[6x48])
# {IN}  Y_N1 = [f1:(0x1.abe788p-1, 0x1.c52c4ap-2, 0x1.39d828p-1, 0x1.4d5682p-1, -0x1.f65c5cp-1, 0x1.6110bep-4, 0x1.5d2924p-2, -0x1.2b2c96p-2, -0x1.acdd38p-1, 0x1.b35da2p-1, -0x1.32121ap-1, 0x1.9c3348p-2, -0x1.27a21p-5, 0x1.e2fbcep-2, -0x1.39184cp-1, -0x1.ae2ba8p-1, 0x1.651bfp-6, 0x1.3964e2p-2, 0x1.0f4bd4p-2, 0x1.392e94p-2, 0x1.294cep-1, 0x1.6a955cp-1, -0x1.534b6p-3, -0x1.1a433p-1, -0x1.a71adp-1, -0x1.cc7d22p+0, -0x1.4ac90cp-5, -0x1.0a25ep-3, 0x1.188662p-1, 0x1.28c35p-7, 0x1.0e6decp-1, -0x1.13d15ep-2, 0x1.cc4bap-5, -0x1.47902cp-2, 0x1.916a08p+0, 0x1.08271ep-1, -0x1.79d762p-2, 0x1.2f7acp-3, 0x1.1b166ap+0, -0x1.7fbb88p-1, -0x1.584424p-1, 0x1.9d88e4p-2, -0x1.a950fp-1, 0x1.016642p-3, 0x1.39b5ecp+0, 0x1.e95a7ep-1, -0x1.981b9cp-2, 0x1.992138p-1),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# {OUT} Y_N2 = [f1:(0x1.abe788p-1, 0x1.c52c4ap-2, 0x1.39d828p-1, 0x1.4d5682p-1, -0x1.f65c5cp-1, 0x1.6110bep-4, 0x1.5d2924p-2, -0x1.2b2c96p-2, -0x1.acdd38p-1, 0x1.b35da2p-1, -0x1.32121ap-1, 0x1.9c3348p-2, -0x1.27a21p-5, 0x1.e2fbcep-2, -0x1.39184cp-1, -0x1.ae2ba8p-1, 0x1.651bfp-6, 0x1.3964e2p-2, 0x1.0f4bd4p-2, 0x1.392e94p-2, 0x1.294cep-1, 0x1.6a955cp-1, -0x1.534b6p-3, -0x1.1a433p-1, -0x1.a71adp-1, -0x1.cc7d22p+0, -0x1.4ac90cp-5, -0x1.0a25ep-3, 0x1.188662p-1, 0x1.28c35p-7, 0x1.0e6decp-1, -0x1.13d15ep-2, 0x1.cc4bap-5, -0x1.47902cp-2, 0x1.916a08p+0, 0x1.08271ep-1, -0x1.79d762p-2, 0x1.2f7acp-3, 0x1.1b166ap+0, -0x1.7fbb88p-1, -0x1.584424p-1, 0x1.9d88e4p-2, -0x1.a950fp-1, 0x1.016642p-3, 0x1.39b5ecp+0, 0x1.e95a7ep-1, -0x1.981b9cp-2, 0x1.992138p-1),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Modem_SCMA::demodulate_wg(const float32 H_N[6x48], const float32 Y_N1[6x48], float32 Y_N2[6x12])
# {IN}  H_N  = [f1:(-0x1.1cd724p-1, -0x1.a04f68p+0, -0x1.fc61f4p-5, -0x1.b61d1cp-3, -0x1.418758p-1, -0x1.318f38p+0, 0x1.57329cp+1, -0x1.6a21e6p-1, -0x1.02f28ap-1, -0x1.6506e4p-2, -0x1.666072p-1, 0x1.07ed86p-4, 0x1.c7f7bcp-4, 0x1.46366ep-2, 0x1.ab8b9ap-1, -0x1.7d2a8ep-2, 0x1.a1df2ap-7, -0x1.3ca184p-1, -0x1.b666ecp-1, 0x1.ef4e6ep-4, 0x1.3bf92cp-3, 0x1.445122p-3, -0x1.26db84p-2, 0x1.5aa79cp-3, -0x1.117acep-2, 0x1.e8200ep-5, 0x1.99ac84p-3, -0x1.dd4338p-4, -0x1.416a52p-1, -0x1.162b82p-2, -0x1.b60b56p-2, -0x1.46cb98p-5, 0x1.d319p-2, 0x1.97a18p-5, -0x1.9c0fep-1, 0x1.78ceeep+0, 0x1.363b42p-6, 0x1.133086p+0, -0x1.48b37p-1, 0x1.a5d926p-2, -0x1.112394p-2, 0x1.8a60f8p-1, 0x1.65822cp-2, 0x1.57b4d8p-3, -0x1.19edp+0, 0x1.00f754p-3, -0x1.b7a4bcp-2, 0x1.70ab1ep-2),
#               f2:(0x1.104d02p-4, 0x1.79f6e6p-1, 0x1.ae0bd6p-3, 0x1.c0af18p-2, 0x1.e87c3ap+0, 0x1.486e3p-3, -0x1.fb8f94p-3, 0x1.39fe82p-4, 0x1.05e3a2p+0, -0x1.44ca76p-1, 0x1.f5889ap-1, -0x1.7d1ee4p-3, 0x1.6b813ap-3, 0x1.6d5a42p-1, -0x1.f0ed06p-1, -0x1.9e0d2p+0, 0x1.cdacbep-2, -0x1.1ba7c2p-4, -0x1.6b7612p-2, -0x1.6d564ep-3, 0x1.2ca9a4p-2, -0x1.fe2686p-4, 0x1.774a5p-2, 0x1.585c34p-1, 0x1.5cb0f2p-3, 0x1.e48f76p-2, 0x1.4165f4p-2, -0x1.fdad98p-3, 0x1.68d2ap-1, -0x1.ba3336p-2, 0x1.8c9c9cp-2, 0x1.720236p-3, -0x1.2c172ap+0, -0x1.71baa4p-1, -0x1.4ceccep+0, -0x1.e7bb66p-2, 0x1.5a106cp-2, 0x1.bbf214p-2, -0x1.3b873cp-4, 0x1.474702p-1, 0x1.7981c8p+0, -0x1.e83588p-1, 0x1.b488f2p+0, 0x1.7d5904p-6, -0x1.449c5p-2, 0x1.00cfdcp-2, -0x1.3623dep+0, -0x1.ca0e8ep-4),
#               f3:(-0x1.a34e64p-2, -0x1.70c376p-6, -0x1.567fdcp-6, -0x1.4926fp-1, -0x1.326a5ap-3, 0x1.bc8baap+0, -0x1.b3eba2p-6, 0x1.465d5ep-5, -0x1.07de4ep+0, -0x1.4ece96p-1, 0x1.dc32aap-1, -0x1.9e3fb6p-2, 0x1.f5611p-1, -0x1.045438p-1, -0x1.6263e4p-3, -0x1.72ab44p-3, -0x1.46c152p-2, 0x1.f3d99ep-2, 0x1.caddc2p-7, 0x1.4e8152p-1, -0x1.04b7f6p-1, 0x1.f58d5ep-2, 0x1.d75b4ep-3, 0x1.f5cd2ep-1, 0x1.87e48p-1, -0x1.34a452p-2, -0x1.80287ap-1, 0x1.57749cp+0, 0x1.15534p-2, -0x1.466198p-1, 0x1.3b74c4p-5, 0x1.918702p-4, 0x1.93ce34p-1, 0x1.7f0e9ap-4, -0x1.93f194p-1, 0x1.6a7822p+0, -0x1.c5c4a4p-2, 0x1.4594b6p+0, 0x1.166f38p-4, -0x1.541e96p-1, -0x1.6c272p-1, 0x1.a8e152p-1, -0x1.1e38eap-3, -0x1.bb99c4p-2, -0x1.c70ebcp-2, -0x1.6a610cp-4, 0x1.037b9cp-4, -0x1.977874p-2),
#               f4:(0x1.3593aep+0, 0x1.431d9cp-1, 0x1.0eab36p-1, 0x1.b04608p-1, 0x1.7c40ecp-1, -0x1.0d5d4ep-1, 0x1.30ebe8p-1, 0x1.d7658cp-1, -0x1.489bfap-3, -0x1.eb8da4p-3, -0x1.30606ap-2, -0x1.e8c07ap-3, 0x1.187314p+0, -0x1.891904p+0, -0x1.50453ep-1, 0x1.1ecdd8p-1, -0x1.07f29p-3, -0x1.68ef5cp-1, -0x1.b64f48p-1, 0x1.3815cap+0, 0x1.b40e16p-1, 0x1.a4a246p-2, -0x1.2f3254p-1, 0x1.1b57ap-1, -0x1.af9f5ep-3, 0x1.d76f4p-2, 0x1.41f68ap+0, 0x1.0fdb24p-1, 0x1.1e1476p-2, 0x1.fb33f6p-3, 0x1.b2c9bp-5, 0x1.12f79ep-3, 0x1.ea921ep-1, 0x1.5ad3fep-4, 0x1.cb9b3ep-2, -0x1.7ef43ep-2, 0x1.64a9f2p-1, -0x1.e01f2ep-5, 0x1.6f0a1ap-3, 0x1.708dfap-1, 0x1.52b8b6p-3, -0x1.24b18ap-1, -0x1.b3cbb8p-6, -0x1.780fdp-6, 0x1.af651p-5, 0x1.7ea88ap+0, -0x1.093fa4p-1, 0x1.c712e4p-2),
#               f5:(-0x1.5211dap-3, 0x1.8e506ep+0, 0x1.74872cp-3, 0x1.382a52p-1, 0x1.734d0cp+0, -0x1.f0c7d6p-2, -0x1.ce28c6p+0, -0x1.ccb72ep-5, 0x1.8d3f52p-1, 0x1.0659bep-1, 0x1.f7e6d6p-1, -0x1.bf8ce6p-1, -0x1.481758p+0, -0x1.171e14p-4, 0x1.2748b6p-7, 0x1.d6d9fcp-3, 0x1.ae9cdcp-5, 0x1.ad906ep-2, -0x1.ef0166p-1, 0x1.243c9ep-3, -0x1.f04204p-2, 0x1.60c0e2p-3, 0x1.a16432p+0, 0x1.44eefp-1, 0x1.a7dp+0, -0x1.dd9ecp-1, 0x1.21ec9p-5, -0x1.afa04cp-1, 0x1.55b4bap-2, 0x1.501b98p-1, 0x1.2431dap+0, -0x1.7a63d4p-4, -0x1.cf5398p-4, -0x1.c63812p-3, 0x1.b5ad16p-2, 0x1.bc5e2p-3, -0x1.27723ep-1, 0x1.19c2fap-1, 0x1.0b4b6ap+0, 0x1.963a1p-3, 0x1.e4b74cp-2, 0x1.7a66a8p-2, 0x1.66ca94p-2, 0x1.61ep-1, 0x1.d07fa4p+0, -0x1.85d186p-1, -0x1.37b8f2p-1, 0x1.e6667cp-1),
#               f6:(-0x1.2a8c98p-8, 0x1.da4f1ep-4, -0x1.cb2b5cp-1, -0x1.a583bep-2, 0x1.60fd86p-2, 0x1.0f903ep+0, -0x1.0231bp-1, 0x1.693deep-1, -0x1.4a8ffp-1, -0x1.85ee1cp-10, -0x1.1c73a6p+0, 0x1.0b025ep+0, -0x1.0a239p+0, -0x1.4b9212p-5, -0x1.71cc6ap+0, -0x1.193f7ep-2, 0x1.738d32p-1, 0x1.ec1bdep-1, -0x1.a8898ap-1, 0x1.870d72p+0, 0x1.61c34p-5, -0x1.6a89ep-1, -0x1.0f284p-3, 0x1.e4dd74p-4, 0x1.3f7fdcp-1, -0x1.33a7b2p-3, 0x1.39c4fcp-5, -0x1.1fde34p-1, -0x1.009c26p-2, -0x1.d736c2p-1, -0x1.68604ep-1, -0x1.7a0fc6p-1, -0x1.47075ap-1, 0x1.1d9734p+0, -0x1.f4c5f6p-1, -0x1.327148p-2, 0x1.e58942p-2, 0x1.27dcdep+0, -0x1.9cbf6ep-1, -0x1.b9e116p+0, 0x1.3ea92ap+0, 0x1.76bfa6p-1, 0x1.685544p-2, 0x1.c4690ap-7, -0x1.4b3278p-3, 0x1.69973cp-1, -0x1.7fc1fap-3, 0x1.7aa422p-2)]
# {IN}  Y_N1 = [f1:(0x1.abe788p-1, 0x1.c52c4ap-2, 0x1.39d828p-1, 0x1.4d5682p-1, -0x1.f65c5cp-1, 0x1.6110bep-4, 0x1.5d2924p-2, -0x1.2b2c96p-2, -0x1.acdd38p-1, 0x1.b35da2p-1, -0x1.32121ap-1, 0x1.9c3348p-2, -0x1.27a21p-5, 0x1.e2fbcep-2, -0x1.39184cp-1, -0x1.ae2ba8p-1, 0x1.651bfp-6, 0x1.3964e2p-2, 0x1.0f4bd4p-2, 0x1.392e94p-2, 0x1.294cep-1, 0x1.6a955cp-1, -0x1.534b6p-3, -0x1.1a433p-1, -0x1.a71adp-1, -0x1.cc7d22p+0, -0x1.4ac90cp-5, -0x1.0a25ep-3, 0x1.188662p-1, 0x1.28c35p-7, 0x1.0e6decp-1, -0x1.13d15ep-2, 0x1.cc4bap-5, -0x1.47902cp-2, 0x1.916a08p+0, 0x1.08271ep-1, -0x1.79d762p-2, 0x1.2f7acp-3, 0x1.1b166ap+0, -0x1.7fbb88p-1, -0x1.584424p-1, 0x1.9d88e4p-2, -0x1.a950fp-1, 0x1.016642p-3, 0x1.39b5ecp+0, 0x1.e95a7ep-1, -0x1.981b9cp-2, 0x1.992138p-1),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# {OUT} Y_N2 = [f1:(-0x1.3a95aap+1, 0x1.18e6a4p+1, 0x1.3ada28p-1, -0x1.43e468p-1, -0x1.362538p-1, 0x1.ce4698p-1, -0x1.ef32a4p-1, -0x1.7d6ac8p-1, -0x1.5d1f14p+2, 0x1.9a9e06p+2, 0x1.688854p+0, 0x1.10c69p-1),
#               f2:(0x1.4cc9dcp+1, 0x1.7260e2p+2, -0x1.c12ae8p+0, -0x1.595e22p+1, -0x1.58237cp-1, -0x1.92ecp-2, -0x1.ef75p-5, -0x1.8466ecp+0, 0x1.f9e78cp+1, -0x1.c8e52ep+1, -0x1.199944p+3, 0x1.01607cp+2),
#               f3:(0x1.74f9bep+0, 0x1.0dedep-2, 0x1.a1c2dp-2, -0x1.0e0678p-1, -0x1.a4725cp+0, -0x1.6e67ap-2, -0x1.2173bap+1, -0x1.71fc18p+1, -0x1.6b391ep+2, 0x1.8f2bb8p+2, -0x1.e2865ap+1, 0x1.cbfd96p+1),
#               f4:(-0x1.013bap+2, -0x1.0ac76ep+1, 0x1.8bccb2p+1, -0x1.0fd4aap+3, 0x1.322ab4p+2, -0x1.7a4a3p+1, -0x1.ccb6ep-3, 0x1.20ae3p-2, 0x1.b5fd04p+0, 0x1.861072p+1, 0x1.4f201cp+2, -0x1.c87508p+0),
#               f5:(0x1.c279fp+0, 0x1.8945dp+2, 0x1.6d54a4p+0, -0x1.760b94p+0, -0x1.617c38p+0, 0x1.486a9p+0, -0x1.7e1f32p+3, 0x1.e21cc8p+3, -0x1.48250cp+2, -0x1.49973p+1, -0x1.02f9bap+2, -0x1.744d76p+1),
#               f6:(-0x1.05d3ecp+2, -0x1.42eb94p+1, -0x1.ad0b6p-3, 0x1.700f74p+1, 0x1.71e55ep+2, -0x1.701b8cp+2, -0x1.9280cp-2, -0x1.6097bcp+0, 0x1.ad49acp+1, -0x1.76f73ap+1, -0x1.f44ep+1, 0x1.783698p+1)]
# Returned status: 0
#
# Quantizer_standard::process(const float32 Y_N1[6x12], int8 Y_N2[6x12])
# {IN}  Y_N1 = [f1:(-0x1.3a95aap+1, 0x1.18e6a4p+1, 0x1.3ada28p-1, -0x1.43e468p-1, -0x1.362538p-1, 0x1.ce4698p-1, -0x1.ef32a4p-1, -0x1.7d6ac8p-1, -0x1.5d1f14p+2, 0x1.9a9e06p+2, 0x1.688854p+0, 0x1.10c69p-1),
#               f2:(0x1.4cc9dcp+1, 0x1.7260e2p+2, -0x1.c12ae8p+0, -0x1.595e22p+1, -0x1.58237cp-1, -0x1.92ecp-2, -0x1.ef75p-5, -0x1.8466ecp+0, 0x1.f9e78cp+1, -0x1.c8e52ep+1, -0x1.199944p+3, 0x1.01607cp+2),
#               f3:(0x1.74f9bep+0, 0x1.0dedep-2, 0x1.a1c2dp-2, -0x1.0e0678p-1, -0x1.a4725cp+0, -0x1.6e67ap-2, -0x1.2173bap+1, -0x1.71fc18p+1, -0x1.6b391ep+2, 0x1.8f2bb8p+2, -0x1.e2865ap+1, 0x1.cbfd96p+1),
#               f4:(-0x1.013bap+2, -0x1.0ac76ep+1, 0x1.8bccb2p+1, -0x1.0fd4aap+3, 0x1.322ab4p+2, -0x1.7a4a3p+1, -0x1.ccb6ep-3, 0x1.20ae3p-2, 0x1.b5fd04p+0, 0x1.861072p+1, 0x1.4f201cp+2, -0x1.c87508p+0),
#               f5:(0x1.c279fp+0, 0x1.8945dp+2, 0x1.6d54a4p+0, -0x1.760b94p+0, -0x1.617c38p+0, 0x1.486a9p+0, -0x1.7e1f32p+3, 0x1.e21cc8p+3, -0x1.48250cp+2, -0x1.49973p+1, -0x1.02f9bap+2, -0x1.744d76p+1),
#               f6:(-0x1.05d3ecp+2, -0x1.42eb94p+1, -0x1.ad0b6p-3, 0x1.700f74p+1, 0x1.71e55ep+2, -0x1.701b8cp+2, -0x1.9280cp-2, -0x1.6097bcp+0, 0x1.ad49acp+1, -0x1.76f73ap+1, -0x1.f44ep+1, 0x1.783698p+1)]
# {OUT} Y_N2 = [f1:(0xffffffec, 0x12, 0x5, 0xfffffffb, 0xfffffffb, 0x7, 0xfffffff8, 0xfffffffa, 0xffffffd4, 0x33, 0xb, 0x4),
#               f2:(0x15, 0x2e, 0xfffffff2, 0xffffffea, 0xfffffffb, 0xfffffffd, 0x0, 0xfffffff4, 0x20, 0xffffffe3, 0xffffffba, 0x20),
#               f3:(0xc, 0x2, 0x3, 0xfffffffc, 0xfffffff3, 0xfffffffd, 0xffffffee, 0xffffffe9, 0xffffffd3, 0x32, 0xffffffe2, 0x1d),
#               f4:(0xffffffe0, 0xffffffef, 0x19, 0xffffffbc, 0x26, 0xffffffe8, 0xfffffffe, 0x2, 0xe, 0x18, 0x2a, 0xfffffff2),
#               f5:(0xe, 0x31, 0xb, 0xfffffff4, 0xfffffff5, 0xa, 0xffffffa0, 0x79, 0xffffffd7, 0xffffffeb, 0xffffffe0, 0xffffffe9),
#               f6:(0xffffffdf, 0xffffffec, 0xfffffffe, 0x17, 0x2e, 0xffffffd2, 0xfffffffd, 0xfffffff5, 0x1b, 0xffffffe9, 0xffffffe1, 0x18)]
# Returned status: 0
#
# Puncturer_NO::depuncture(const int8 Y_N1[6x12], int8 Y_N2[6x12])
# {IN}  Y_N1 = [f1:(0xffffffec, 0x12, 0x5, 0xfffffffb, 0xfffffffb, 0x7, 0xfffffff8, 0xfffffffa, 0xffffffd4, 0x33, 0xb, 0x4),
#               f2:(0x15, 0x2e, 0xfffffff2, 0xffffffea, 0xfffffffb, 0xfffffffd, 0x0, 0xfffffff4, 0x20, 0xffffffe3, 0xffffffba, 0x20),
#               f3:(0xc, 0x2, 0x3, 0xfffffffc, 0xfffffff3, 0xfffffffd, 0xffffffee, 0xffffffe9, 0xffffffd3, 0x32, 0xffffffe2, 0x1d),
#               f4:(0xffffffe0, 0xffffffef, 0x19, 0xffffffbc, 0x26, 0xffffffe8, 0xfffffffe, 0x2, 0xe, 0x18, 0x2a, 0xfffffff2),
#               f5:(0xe, 0x31, 0xb, 0xfffffff4, 0xfffffff5, 0xa, 0xffffffa0, 0x79, 0xffffffd7, 0xffffffeb, 0xffffffe0, 0xffffffe9),
#               f6:(0xffffffdf, 0xffffffec, 0xfffffffe, 0x17, 0x2e, 0xffffffd2, 0xfffffffd, 0xfffffff5, 0x1b, 0xffffffe9, 0xffffffe1, 0x18)]
# {OUT} Y_N2 = [f1:(0xffffffec, 0x12, 0x5, 0xfffffffb, 0xfffffffb, 0x7, 0xfffffff8, 0xfffffffa, 0xffffffd4, 0x33, 0xb, 0x4),
#               f2:(0x15, 0x2e, 0xfffffff2, 0xffffffea, 0xfffffffb, 0xfffffffd, 0x0, 0xfffffff4, 0x20, 0xffffffe3, 0xffffffba, 0x20),
#               f3:(0xc, 0x2, 0x3, 0xfffffffc, 0xfffffff3, 0xfffffffd, 0xffffffee, 0xffffffe9, 0xffffffd3, 0x32, 0xffffffe2, 0x1d),
#               f4:(0xffffffe0, 0xffffffef, 0x19, 0xffffffbc, 0x26, 0xffffffe8, 0xfffffffe, 0x2, 0xe, 0x18, 0x2a, 0xfffffff2),
#               f5:(0xe, 0x31, 0xb, 0xfffffff4, 0xfffffff5, 0xa, 0xffffffa0, 0x79, 0xffffffd7, 0xffffffeb, 0xffffffe0, 0xffffffe9),
#               f6:(0xffffffdf, 0xffffffec, 0xfffffffe, 0x17, 0x2e, 0xffffffd2, 0xfffffffd, 0xfffffff5, 0x1b, 0xffffffe9, 0xffffffe1, 0x18)]
# Returned status: 0
#
# Decoder_NO::decode_siho(const int8 Y_N[6x12], int8 V_K[6x12])
# {IN}  Y_N = [f1:(0xffffffec, 0x12, 0x5, 0xfffffffb, 0xfffffffb, 0x7, 0xfffffff8, 0xfffffffa, 0xffffffd4, 0x33, 0xb, 0x4),
#              f2:(0x15, 0x2e, 0xfffffff2, 0xffffffea, 0xfffffffb, 0xfffffffd, 0x0, 0xfffffff4, 0x20, 0xffffffe3, 0xffffffba, 0x20),
#              f3:(0xc, 0x2, 0x3, 0xfffffffc, 0xfffffff3, 0xfffffffd, 0xffffffee, 0xffffffe9, 0xffffffd3, 0x32, 0xffffffe2, 0x1d),
#              f4:(0xffffffe0, 0xffffffef, 0x19, 0xffffffbc, 0x26, 0xffffffe8, 0xfffffffe, 0x2, 0xe, 0x18, 0x2a, 0xfffffff2),
#              f5:(0xe, 0x31, 0xb, 0xfffffff4, 0xfffffff5, 0xa, 0xffffffa0, 0x79, 0xffffffd7, 0xffffffeb, 0xffffffe0, 0xffffffe9),
#              f6:(0xffffffdf, 0xffffffec, 0xfffffffe, 0x17, 0x2e, 0xffffffd2, 0xfffffffd, 0xfffffff5, 0x1b, 0xffffffe9, 0xffffffe1, 0x18)]
# {OUT} V_K = [f1:(0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0),
#              f2:(0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0),
#              f3:(0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0),
#              f4:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1),
#              f5:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1),
#              f6:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0)]
# Returned status: 0
#
# CRC_NO::extract(const int8 V_K1[6x12], int8 V_K2[6x12])
# {IN}  V_K1 = [f1:(0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0),
#               f2:(0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0),
#               f3:(0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0),
#               f4:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1),
#               f5:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1),
#               f6:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0)]
# {OUT} V_K2 = [f1:(0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0),
#               f2:(0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0),
#               f3:(0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0),
#               f4:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1),
#               f5:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1),
#               f6:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0)]
# Returned status: 0
#
# Monitor_BFER::check_errors(const int8 U[6x12], const int8 V[6x12])
# {IN}  U = [f1:(0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0),
#            f2:(0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0),
#            f3:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0),
#            f4:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1),
#            f5:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1),
#            f6:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0)]
# {IN}  V = [f1:(0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0),
#            f2:(0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0),
#            f3:(0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0),
#            f4:(0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1),
#            f5:(0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1),
#            f6:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0)]
# Returned status: 4
#
# -------------------------------
# New communication (nÂ°19)
# -------------------------------
#
# Source_random::generate(int8 U_K[6x12])
# {OUT} U_K = [f1:(0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1),
#              f2:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0),
#              f3:(0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1),
#              f4:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0),
#              f5:(0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#              f6:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0)]
# Returned status: 0
#
# CRC_NO::build(const int8 U_K1[6x12], int8 U_K2[6x12])
# {IN}  U_K1 = [f1:(0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1),
#               f2:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0),
#               f3:(0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1),
#               f4:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0),
#               f5:(0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#               f6:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0)]
# {OUT} U_K2 = [f1:(0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1),
#               f2:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0),
#               f3:(0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1),
#               f4:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0),
#               f5:(0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#               f6:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0)]
# Returned status: 0
#
# Encoder_NO::encode(const int8 U_K[6x12], int8 X_N[6x12])
# {IN}  U_K = [f1:(0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1),
#              f2:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0),
#              f3:(0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1),
#              f4:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0),
#              f5:(0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#              f6:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0)]
# {OUT} X_N = [f1:(0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1),
#              f2:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0),
#              f3:(0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1),
#              f4:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0),
#              f5:(0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#              f6:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0)]
# Returned status: 0
#
# Puncturer_NO::puncture(const int8 X_N1[6x12], int8 X_N2[6x12])
# {IN}  X_N1 = [f1:(0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1),
#               f2:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0),
#               f3:(0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1),
#               f4:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0),
#               f5:(0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#               f6:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0)]
# {OUT} X_N2 = [f1:(0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1),
#               f2:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0),
#               f3:(0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1),
#               f4:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0),
#               f5:(0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#               f6:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0)]
# Returned status: 0
#
# Modem_SCMA::modulate(const int8 X_N1[6x12], float32 X_N2[6x48])
# {IN}  X_N1 = [f1:(0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1),
#               f2:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0),
#               f3:(0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1),
#               f4:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0),
#               f5:(0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#               f6:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0)]
# {OUT} X_N2 = [f1:(0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0),
#               f2:(-0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0),
#               f3:(0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3),
#               f5:(-0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2),
#               f6:(0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Channel_Rayleigh_LLR::add_noise_wg(const float32 X_N[6x48], float32 H_N[6x48], float32 Y_N[6x48])
# {IN}  X_N = [f1:(0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0),
#              f2:(-0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0),
#              f3:(0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3),
#              f5:(-0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2),
#              f6:(0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0)]
# {OUT} H_N = [f1:(-0x1.00ff3cp-1, 0x1.65fd7p-3, 0x1.20c41ap-4, 0x1.0fdc7ap-7, 0x1.274982p-1, -0x1.026e46p-6, 0x1.0b8848p-8, 0x1.250f34p-1, 0x1.ec1766p-1, 0x1.01c658p-1, 0x1.64d49cp-2, -0x1.173244p+0, -0x1.84e0e6p-1, 0x1.8f03ap-1, -0x1.e747b4p-6, 0x1.376012p-1, -0x1.d5cf4cp-2, 0x1.212ffap-1, 0x1.730046p-1, 0x1.99ead2p-3, -0x1.6b477ap-2, -0x1.b67106p-1, 0x1.ead7dep-3, 0x1.fb46f4p-1, 0x1.60e7b8p-2, 0x1.3f2e3ap+0, -0x1.100b7cp-1, 0x1.db3418p-1, -0x1.3131e8p-3, -0x1.847d58p+0, -0x1.994918p-5, -0x1.060e36p-2, 0x1.cc9008p-1, 0x1.dcaa52p+0, 0x1.82e41ep-1, -0x1.596254p-6, 0x1.e05e5ep-1, -0x1.3b433ep-2, 0x1.02f26ap-3, 0x1.87bea2p-1, -0x1.c53992p-1, 0x1.606872p-3, 0x1.7e4d14p-2, 0x1.5a5642p-3, -0x1.a2d782p-1, 0x1.5df08ep-1, -0x1.e75ab4p-1, -0x1.9d89e4p-1),
#              f2:(-0x1.a7b62p+0, 0x1.3ff13ep-1, 0x1.5bc71ep-1, -0x1.485abep-1, 0x1.205e52p-5, -0x1.214c1ap-1, -0x1.9b741ap-2, 0x1.fa6a9cp-4, 0x1.58410ap-3, 0x1.73484cp-4, 0x1.5a3ff8p+0, 0x1.a8a782p-7, -0x1.13ae56p-2, 0x1.1cc5b6p-4, -0x1.aeb9b8p-4, -0x1.0c31bcp-1, -0x1.ea1dfcp-1, 0x1.7030d6p-1, -0x1.728254p-1, -0x1.531b42p-1, -0x1.226d2cp-3, 0x1.33dcf8p-1, 0x1.041492p-1, 0x1.e15db8p-3, -0x1.34d988p+0, 0x1.93b066p-1, -0x1.b7422p-4, 0x1.2ab274p-1, 0x1.658b3ep-2, 0x1.2dc6f4p-1, -0x1.14179ep+0, -0x1.4b8116p-2, 0x1.049a28p-1, -0x1.a3e69ap-3, -0x1.98e906p-2, -0x1.711e88p-2, -0x1.619ba2p-3, -0x1.807c2p-1, -0x1.56ad2p-2, -0x1.ac2aecp+0, -0x1.1d8448p+0, -0x1.210f5ep-1, 0x1.1409f2p-2, -0x1.29af46p-1, 0x1.1da3ap+0, -0x1.428f2ep-4, 0x1.97f52p-3, -0x1.9b44b4p-1),
#              f3:(-0x1.a67aecp+0, 0x1.9b9812p-1, -0x1.737b6ep-2, 0x1.31c85ep-2, 0x1.43eedap-5, 0x1.167aeep-1, 0x1.92564ap-2, 0x1.3e77e8p+0, -0x1.be354ap-2, -0x1.0690cep-1, -0x1.14ccc6p-2, -0x1.60a95ap-2, -0x1.450a84p-1, 0x1.03e16ep+0, 0x1.ab818ep-1, 0x1.b60f9ep-1, -0x1.b2cd64p-1, -0x1.a39eep-1, 0x1.7ad674p+0, 0x1.ab3c2cp-2, -0x1.080146p+0, -0x1.534bfap-1, 0x1.2676dp-2, -0x1.90c918p+0, -0x1.eff5b8p-3, 0x1.1e6a78p+0, 0x1.1a6feep-3, -0x1.d6bacp-2, 0x1.120bcap+0, -0x1.fc6664p-2, -0x1.07b3e6p+0, 0x1.3df802p-2, -0x1.48bdcap-3, -0x1.3ee876p-1, -0x1.7f0b82p-2, -0x1.4da12ap-2, 0x1.54b4b4p-1, -0x1.5dd32ap-3, 0x1.35e5ap-2, 0x1.1108acp-1, 0x1.38507ap-3, 0x1.79c9bp-1, -0x1.9b97ap-1, 0x1.4270f6p-1, 0x1.f1bf42p-2, 0x1.b0c434p+0, -0x1.5177e8p-1, -0x1.753c4ap+0),
#              f4:(-0x1.793c8cp-2, 0x1.02be48p-1, 0x1.7062b8p-1, -0x1.04ca3p-2, 0x1.b61a8p-3, -0x1.a0d5e2p-4, -0x1.a904ap-1, -0x1.3717a8p-3, 0x1.ecbbe4p-3, -0x1.93a366p-4, -0x1.111202p-3, 0x1.c99a34p-2, 0x1.db5f74p-4, -0x1.f95a54p-4, -0x1.d73106p-3, -0x1.b4e5bap-1, -0x1.1c8accp-1, -0x1.93523p-2, -0x1.26bf6cp-1, 0x1.6730a8p-1, -0x1.22bf5p-3, 0x1.616eacp-1, -0x1.baa596p-2, -0x1.fdbf0ap-3, 0x1.830c02p-4, -0x1.1b3f3ep-1, -0x1.bdb942p-1, -0x1.740404p-1, 0x1.4bf25p-1, -0x1.4cb136p-1, 0x1.66697p-1, 0x1.e1f198p-5, 0x1.caed16p+0, -0x1.f8c25cp-8, 0x1.ca8c62p-1, 0x1.31a138p-2, -0x1.3ce9eap+0, -0x1.8bfd96p-3, -0x1.c89f04p-3, -0x1.3dd14ep+0, -0x1.afcd62p-9, -0x1.05795cp-1, -0x1.64469ap-1, 0x1.4f5f9ap-3, 0x1.31ccaap-2, -0x1.11ced6p-1, -0x1.136b26p-4, -0x1.27b538p-1),
#              f5:(0x1.24c424p+0, 0x1.f5658ep-3, -0x1.bf6cc2p-1, 0x1.897c6p+0, 0x1.3157fep+0, 0x1.58d10cp-2, 0x1.45d304p-4, -0x1.7554aap+0, 0x1.bb2642p-1, -0x1.cfe8dcp+0, 0x1.25b8a6p-3, 0x1.32e2ccp-1, -0x1.609e94p+0, 0x1.fb4434p-2, 0x1.dd466ep-3, -0x1.7a484ep-3, 0x1.162e52p-7, -0x1.c2d444p+0, -0x1.38c11ep-3, -0x1.91ff1ap+0, 0x1.3cabccp-1, -0x1.99953ep-3, -0x1.86e3cep-1, 0x1.780b86p-2, 0x1.1a3d58p-2, -0x1.8ac27cp-2, -0x1.169b76p-1, -0x1.e918dep-4, -0x1.594128p-2, -0x1.b04906p-2, 0x1.e00a38p-4, -0x1.8bbcc2p+0, -0x1.688abep-4, -0x1.ae894p-3, -0x1.1a35fcp-3, 0x1.eb21cp-7, 0x1.8014c2p-3, 0x1.4694a4p-1, 0x1.941aap-4, 0x1.b40a18p-2, 0x1.95717p-1, -0x1.01f3d4p-1, 0x1.4f204p+0, -0x1.3d35e6p-1, 0x1.3553e8p-3, -0x1.2ec202p-1, -0x1.a310fep-2, 0x1.61535cp-1),
#              f6:(-0x1.7801f2p-1, -0x1.046b9cp-1, -0x1.4bee1cp+0, 0x1.28db3ep-4, -0x1.a89c2ap-1, -0x1.1a8196p-1, 0x1.0e695ap-2, -0x1.8a482p+0, -0x1.8c46b6p-1, 0x1.ec8be4p-2, 0x1.db78e8p+0, -0x1.a36b5p-2, -0x1.4d1072p-3, 0x1.8d5654p-2, -0x1.25deb8p-2, 0x1.4f76bp-1, -0x1.707268p-4, -0x1.1136bep+0, 0x1.f52f7ep-2, -0x1.76226p-1, -0x1.19fcf6p-1, -0x1.5be192p+0, 0x1.b7b7a2p-4, 0x1.0c6be2p-1, 0x1.347fc2p-2, -0x1.5d041ap-2, 0x1.961fecp-3, -0x1.d7e18cp-2, -0x1.0ae8a2p-1, -0x1.3b73a2p-1, 0x1.f9954ap-2, 0x1.03dd2cp-1, -0x1.e61b8p-2, -0x1.b201a8p-2, -0x1.02cbb6p-3, -0x1.0b7576p-1, -0x1.42f7a2p+0, 0x1.cf6966p+0, -0x1.7ae132p-1, -0x1.3600d8p-2, 0x1.a754cp-2, 0x1.78d778p-4, 0x1.08721ep-6, 0x1.37bf4cp+0, -0x1.04a786p-1, -0x1.da9036p-3, 0x1.1e969p-2, 0x1.eb2746p-1)]
# {OUT} Y_N = [f1:(-0x1.240c76p-2, 0x1.4269ep-1, 0x1.ab9ec8p-1, -0x1.d8c6f8p-2, -0x1.5383bp-2, 0x1.350e48p-1, 0x1.690844p-1, 0x1.5563f4p-1, -0x1.670adcp+0, -0x1.2c47b4p-2, 0x1.d64aeap-1, -0x1.3de8a8p-2, 0x1.3b516ep-1, 0x1.55cb44p-2, 0x1.2fa838p-1, -0x1.3a5bep-4, -0x1.26bdbcp+0, -0x1.45d8ccp-1, 0x1.e022d8p-1, -0x1.965fap-1, 0x1.039a46p+0, 0x1.68ba9p-2, -0x1.b618dcp-2, -0x1.f3ea1ap-2, 0x1.0684c4p+0, -0x1.3559b2p-2, 0x1.f04898p-1, 0x1.0f52d4p-2, 0x1.e0cc3ap-2, -0x1.089d02p+0, 0x1.12ccccp-3, -0x1.39ce4p-4, -0x1.1854p-9, -0x1.55af66p-3, -0x1.683444p-2, 0x1.02a684p-3, -0x1.d4af3p-5, -0x1.7cda34p-1, 0x1.ad879ep-4, -0x1.13ae36p+0, -0x1.4a7e78p-1, -0x1.3d697cp-3, -0x1.8f0c2p-3, 0x1.08cb8cp+0, -0x1.0b3254p-4, -0x1.28ccbp-1, 0x1.efce62p-2, -0x1.79f028p-5),
#              f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Modem_SCMA::filter(const float32 Y_N1[6x48], float32 Y_N2[6x48])
# {IN}  Y_N1 = [f1:(-0x1.240c76p-2, 0x1.4269ep-1, 0x1.ab9ec8p-1, -0x1.d8c6f8p-2, -0x1.5383bp-2, 0x1.350e48p-1, 0x1.690844p-1, 0x1.5563f4p-1, -0x1.670adcp+0, -0x1.2c47b4p-2, 0x1.d64aeap-1, -0x1.3de8a8p-2, 0x1.3b516ep-1, 0x1.55cb44p-2, 0x1.2fa838p-1, -0x1.3a5bep-4, -0x1.26bdbcp+0, -0x1.45d8ccp-1, 0x1.e022d8p-1, -0x1.965fap-1, 0x1.039a46p+0, 0x1.68ba9p-2, -0x1.b618dcp-2, -0x1.f3ea1ap-2, 0x1.0684c4p+0, -0x1.3559b2p-2, 0x1.f04898p-1, 0x1.0f52d4p-2, 0x1.e0cc3ap-2, -0x1.089d02p+0, 0x1.12ccccp-3, -0x1.39ce4p-4, -0x1.1854p-9, -0x1.55af66p-3, -0x1.683444p-2, 0x1.02a684p-3, -0x1.d4af3p-5, -0x1.7cda34p-1, 0x1.ad879ep-4, -0x1.13ae36p+0, -0x1.4a7e78p-1, -0x1.3d697cp-3, -0x1.8f0c2p-3, 0x1.08cb8cp+0, -0x1.0b3254p-4, -0x1.28ccbp-1, 0x1.efce62p-2, -0x1.79f028p-5),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# {OUT} Y_N2 = [f1:(-0x1.240c76p-2, 0x1.4269ep-1, 0x1.ab9ec8p-1, -0x1.d8c6f8p-2, -0x1.5383bp-2, 0x1.350e48p-1, 0x1.690844p-1, 0x1.5563f4p-1, -0x1.670adcp+0, -0x1.2c47b4p-2, 0x1.d64aeap-1, -0x1.3de8a8p-2, 0x1.3b516ep-1, 0x1.55cb44p-2, 0x1.2fa838p-1, -0x1.3a5bep-4, -0x1.26bdbcp+0, -0x1.45d8ccp-1, 0x1.e022d8p-1, -0x1.965fap-1, 0x1.039a46p+0, 0x1.68ba9p-2, -0x1.b618dcp-2, -0x1.f3ea1ap-2, 0x1.0684c4p+0, -0x1.3559b2p-2, 0x1.f04898p-1, 0x1.0f52d4p-2, 0x1.e0cc3ap-2, -0x1.089d02p+0, 0x1.12ccccp-3, -0x1.39ce4p-4, -0x1.1854p-9, -0x1.55af66p-3, -0x1.683444p-2, 0x1.02a684p-3, -0x1.d4af3p-5, -0x1.7cda34p-1, 0x1.ad879ep-4, -0x1.13ae36p+0, -0x1.4a7e78p-1, -0x1.3d697cp-3, -0x1.8f0c2p-3, 0x1.08cb8cp+0, -0x1.0b3254p-4, -0x1.28ccbp-1, 0x1.efce62p-2, -0x1.79f028p-5),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Modem_SCMA::demodulate_wg(const float32 H_N[6x48], const float32 Y_N1[6x48], float32 Y_N2[6x12])
# {IN}  H_N  = [f1:(-0x1.00ff3cp-1, 0x1.65fd7p-3, 0x1.20c41ap-4, 0x1.0fdc7ap-7, 0x1.274982p-1, -0x1.026e46p-6, 0x1.0b8848p-8, 0x1.250f34p-1, 0x1.ec1766p-1, 0x1.01c658p-1, 0x1.64d49cp-2, -0x1.173244p+0, -0x1.84e0e6p-1, 0x1.8f03ap-1, -0x1.e747b4p-6, 0x1.376012p-1, -0x1.d5cf4cp-2, 0x1.212ffap-1, 0x1.730046p-1, 0x1.99ead2p-3, -0x1.6b477ap-2, -0x1.b67106p-1, 0x1.ead7dep-3, 0x1.fb46f4p-1, 0x1.60e7b8p-2, 0x1.3f2e3ap+0, -0x1.100b7cp-1, 0x1.db3418p-1, -0x1.3131e8p-3, -0x1.847d58p+0, -0x1.994918p-5, -0x1.060e36p-2, 0x1.cc9008p-1, 0x1.dcaa52p+0, 0x1.82e41ep-1, -0x1.596254p-6, 0x1.e05e5ep-1, -0x1.3b433ep-2, 0x1.02f26ap-3, 0x1.87bea2p-1, -0x1.c53992p-1, 0x1.606872p-3, 0x1.7e4d14p-2, 0x1.5a5642p-3, -0x1.a2d782p-1, 0x1.5df08ep-1, -0x1.e75ab4p-1, -0x1.9d89e4p-1),
#               f2:(-0x1.a7b62p+0, 0x1.3ff13ep-1, 0x1.5bc71ep-1, -0x1.485abep-1, 0x1.205e52p-5, -0x1.214c1ap-1, -0x1.9b741ap-2, 0x1.fa6a9cp-4, 0x1.58410ap-3, 0x1.73484cp-4, 0x1.5a3ff8p+0, 0x1.a8a782p-7, -0x1.13ae56p-2, 0x1.1cc5b6p-4, -0x1.aeb9b8p-4, -0x1.0c31bcp-1, -0x1.ea1dfcp-1, 0x1.7030d6p-1, -0x1.728254p-1, -0x1.531b42p-1, -0x1.226d2cp-3, 0x1.33dcf8p-1, 0x1.041492p-1, 0x1.e15db8p-3, -0x1.34d988p+0, 0x1.93b066p-1, -0x1.b7422p-4, 0x1.2ab274p-1, 0x1.658b3ep-2, 0x1.2dc6f4p-1, -0x1.14179ep+0, -0x1.4b8116p-2, 0x1.049a28p-1, -0x1.a3e69ap-3, -0x1.98e906p-2, -0x1.711e88p-2, -0x1.619ba2p-3, -0x1.807c2p-1, -0x1.56ad2p-2, -0x1.ac2aecp+0, -0x1.1d8448p+0, -0x1.210f5ep-1, 0x1.1409f2p-2, -0x1.29af46p-1, 0x1.1da3ap+0, -0x1.428f2ep-4, 0x1.97f52p-3, -0x1.9b44b4p-1),
#               f3:(-0x1.a67aecp+0, 0x1.9b9812p-1, -0x1.737b6ep-2, 0x1.31c85ep-2, 0x1.43eedap-5, 0x1.167aeep-1, 0x1.92564ap-2, 0x1.3e77e8p+0, -0x1.be354ap-2, -0x1.0690cep-1, -0x1.14ccc6p-2, -0x1.60a95ap-2, -0x1.450a84p-1, 0x1.03e16ep+0, 0x1.ab818ep-1, 0x1.b60f9ep-1, -0x1.b2cd64p-1, -0x1.a39eep-1, 0x1.7ad674p+0, 0x1.ab3c2cp-2, -0x1.080146p+0, -0x1.534bfap-1, 0x1.2676dp-2, -0x1.90c918p+0, -0x1.eff5b8p-3, 0x1.1e6a78p+0, 0x1.1a6feep-3, -0x1.d6bacp-2, 0x1.120bcap+0, -0x1.fc6664p-2, -0x1.07b3e6p+0, 0x1.3df802p-2, -0x1.48bdcap-3, -0x1.3ee876p-1, -0x1.7f0b82p-2, -0x1.4da12ap-2, 0x1.54b4b4p-1, -0x1.5dd32ap-3, 0x1.35e5ap-2, 0x1.1108acp-1, 0x1.38507ap-3, 0x1.79c9bp-1, -0x1.9b97ap-1, 0x1.4270f6p-1, 0x1.f1bf42p-2, 0x1.b0c434p+0, -0x1.5177e8p-1, -0x1.753c4ap+0),
#               f4:(-0x1.793c8cp-2, 0x1.02be48p-1, 0x1.7062b8p-1, -0x1.04ca3p-2, 0x1.b61a8p-3, -0x1.a0d5e2p-4, -0x1.a904ap-1, -0x1.3717a8p-3, 0x1.ecbbe4p-3, -0x1.93a366p-4, -0x1.111202p-3, 0x1.c99a34p-2, 0x1.db5f74p-4, -0x1.f95a54p-4, -0x1.d73106p-3, -0x1.b4e5bap-1, -0x1.1c8accp-1, -0x1.93523p-2, -0x1.26bf6cp-1, 0x1.6730a8p-1, -0x1.22bf5p-3, 0x1.616eacp-1, -0x1.baa596p-2, -0x1.fdbf0ap-3, 0x1.830c02p-4, -0x1.1b3f3ep-1, -0x1.bdb942p-1, -0x1.740404p-1, 0x1.4bf25p-1, -0x1.4cb136p-1, 0x1.66697p-1, 0x1.e1f198p-5, 0x1.caed16p+0, -0x1.f8c25cp-8, 0x1.ca8c62p-1, 0x1.31a138p-2, -0x1.3ce9eap+0, -0x1.8bfd96p-3, -0x1.c89f04p-3, -0x1.3dd14ep+0, -0x1.afcd62p-9, -0x1.05795cp-1, -0x1.64469ap-1, 0x1.4f5f9ap-3, 0x1.31ccaap-2, -0x1.11ced6p-1, -0x1.136b26p-4, -0x1.27b538p-1),
#               f5:(0x1.24c424p+0, 0x1.f5658ep-3, -0x1.bf6cc2p-1, 0x1.897c6p+0, 0x1.3157fep+0, 0x1.58d10cp-2, 0x1.45d304p-4, -0x1.7554aap+0, 0x1.bb2642p-1, -0x1.cfe8dcp+0, 0x1.25b8a6p-3, 0x1.32e2ccp-1, -0x1.609e94p+0, 0x1.fb4434p-2, 0x1.dd466ep-3, -0x1.7a484ep-3, 0x1.162e52p-7, -0x1.c2d444p+0, -0x1.38c11ep-3, -0x1.91ff1ap+0, 0x1.3cabccp-1, -0x1.99953ep-3, -0x1.86e3cep-1, 0x1.780b86p-2, 0x1.1a3d58p-2, -0x1.8ac27cp-2, -0x1.169b76p-1, -0x1.e918dep-4, -0x1.594128p-2, -0x1.b04906p-2, 0x1.e00a38p-4, -0x1.8bbcc2p+0, -0x1.688abep-4, -0x1.ae894p-3, -0x1.1a35fcp-3, 0x1.eb21cp-7, 0x1.8014c2p-3, 0x1.4694a4p-1, 0x1.941aap-4, 0x1.b40a18p-2, 0x1.95717p-1, -0x1.01f3d4p-1, 0x1.4f204p+0, -0x1.3d35e6p-1, 0x1.3553e8p-3, -0x1.2ec202p-1, -0x1.a310fep-2, 0x1.61535cp-1),
#               f6:(-0x1.7801f2p-1, -0x1.046b9cp-1, -0x1.4bee1cp+0, 0x1.28db3ep-4, -0x1.a89c2ap-1, -0x1.1a8196p-1, 0x1.0e695ap-2, -0x1.8a482p+0, -0x1.8c46b6p-1, 0x1.ec8be4p-2, 0x1.db78e8p+0, -0x1.a36b5p-2, -0x1.4d1072p-3, 0x1.8d5654p-2, -0x1.25deb8p-2, 0x1.4f76bp-1, -0x1.707268p-4, -0x1.1136bep+0, 0x1.f52f7ep-2, -0x1.76226p-1, -0x1.19fcf6p-1, -0x1.5be192p+0, 0x1.b7b7a2p-4, 0x1.0c6be2p-1, 0x1.347fc2p-2, -0x1.5d041ap-2, 0x1.961fecp-3, -0x1.d7e18cp-2, -0x1.0ae8a2p-1, -0x1.3b73a2p-1, 0x1.f9954ap-2, 0x1.03dd2cp-1, -0x1.e61b8p-2, -0x1.b201a8p-2, -0x1.02cbb6p-3, -0x1.0b7576p-1, -0x1.42f7a2p+0, 0x1.cf6966p+0, -0x1.7ae132p-1, -0x1.3600d8p-2, 0x1.a754cp-2, 0x1.78d778p-4, 0x1.08721ep-6, 0x1.37bf4cp+0, -0x1.04a786p-1, -0x1.da9036p-3, 0x1.1e969p-2, 0x1.eb2746p-1)]
# {IN}  Y_N1 = [f1:(-0x1.240c76p-2, 0x1.4269ep-1, 0x1.ab9ec8p-1, -0x1.d8c6f8p-2, -0x1.5383bp-2, 0x1.350e48p-1, 0x1.690844p-1, 0x1.5563f4p-1, -0x1.670adcp+0, -0x1.2c47b4p-2, 0x1.d64aeap-1, -0x1.3de8a8p-2, 0x1.3b516ep-1, 0x1.55cb44p-2, 0x1.2fa838p-1, -0x1.3a5bep-4, -0x1.26bdbcp+0, -0x1.45d8ccp-1, 0x1.e022d8p-1, -0x1.965fap-1, 0x1.039a46p+0, 0x1.68ba9p-2, -0x1.b618dcp-2, -0x1.f3ea1ap-2, 0x1.0684c4p+0, -0x1.3559b2p-2, 0x1.f04898p-1, 0x1.0f52d4p-2, 0x1.e0cc3ap-2, -0x1.089d02p+0, 0x1.12ccccp-3, -0x1.39ce4p-4, -0x1.1854p-9, -0x1.55af66p-3, -0x1.683444p-2, 0x1.02a684p-3, -0x1.d4af3p-5, -0x1.7cda34p-1, 0x1.ad879ep-4, -0x1.13ae36p+0, -0x1.4a7e78p-1, -0x1.3d697cp-3, -0x1.8f0c2p-3, 0x1.08cb8cp+0, -0x1.0b3254p-4, -0x1.28ccbp-1, 0x1.efce62p-2, -0x1.79f028p-5),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# {OUT} Y_N2 = [f1:(-0x1.2d0bbp-2, 0x1.241d4p-3, 0x1.60f5a4p+0, -0x1.df1d3p-2, -0x1.37d7c2p+2, -0x1.1dfde8p+1, -0x1.da6cd8p-1, 0x1.0c908p+2, -0x1.73d49ap+2, -0x1.1af0cap+1, -0x1.7a6cd8p+0, -0x1.4ee44p-2),
#               f2:(-0x1.ca60d6p+1, 0x1.e0c5f2p+1, -0x1.4c9188p-1, 0x1.5b0c2cp+0, -0x1.1bc4a4p+2, -0x1.becbdcp+0, -0x1.5b8822p+3, 0x1.235078p+0, -0x1.f0a7f8p-1, 0x1.4ee23cp+0, 0x1.f8904p+0, 0x1.5a82bcp+2),
#               f3:(-0x1.625476p+1, -0x1.0f2e7cp+2, 0x1.e1416p-2, -0x1.a6625p-1, -0x1.cb801ap+2, 0x1.233866p+3, 0x1.30967p+1, -0x1.c4fb88p+1, -0x1.ce1a68p+0, 0x1.c1c53ep+0, -0x1.016cap-1, 0x1.315148p+0),
#               f4:(-0x1.0a3828p-1, -0x1.649476p+0, 0x1.44bf44p+0, -0x1.970258p+1, -0x1.02a7acp-1, 0x1.85098cp-1, 0x1.241d9cp+1, 0x1.94f7f8p+1, -0x1.309b68p+0, -0x1.13ddbep+2, 0x1.dd6fbp+0, 0x1.7ed62p-3),
#               f5:(0x1.702d88p+2, 0x1.5ce528p+1, -0x1.ad4b84p+0, 0x1.12d3b2p+3, -0x1.27a77cp+2, 0x1.d6363ep+2, 0x1.402d1ep+1, -0x1.441ad2p+1, 0x1.bb6858p+0, 0x1.97164p-2, 0x1.8dadacp+0, 0x1.3981p-4),
#               f6:(-0x1.1c717cp+3, -0x1.30a862p+1, -0x1.04086p-3, 0x1.7446e4p+1, 0x1.1c206ap+2, -0x1.12793p+3, -0x1.4109dp-1, -0x1.0a15bp-1, 0x1.5a9b04p+0, -0x1.8ae85p+1, 0x1.939bcep+1, 0x1.87706p-2)]
# Returned status: 0
#
# Quantizer_standard::process(const float32 Y_N1[6x12], int8 Y_N2[6x12])
# {IN}  Y_N1 = [f1:(-0x1.2d0bbp-2, 0x1.241d4p-3, 0x1.60f5a4p+0, -0x1.df1d3p-2, -0x1.37d7c2p+2, -0x1.1dfde8p+1, -0x1.da6cd8p-1, 0x1.0c908p+2, -0x1.73d49ap+2, -0x1.1af0cap+1, -0x1.7a6cd8p+0, -0x1.4ee44p-2),
#               f2:(-0x1.ca60d6p+1, 0x1.e0c5f2p+1, -0x1.4c9188p-1, 0x1.5b0c2cp+0, -0x1.1bc4a4p+2, -0x1.becbdcp+0, -0x1.5b8822p+3, 0x1.235078p+0, -0x1.f0a7f8p-1, 0x1.4ee23cp+0, 0x1.f8904p+0, 0x1.5a82bcp+2),
#               f3:(-0x1.625476p+1, -0x1.0f2e7cp+2, 0x1.e1416p-2, -0x1.a6625p-1, -0x1.cb801ap+2, 0x1.233866p+3, 0x1.30967p+1, -0x1.c4fb88p+1, -0x1.ce1a68p+0, 0x1.c1c53ep+0, -0x1.016cap-1, 0x1.315148p+0),
#               f4:(-0x1.0a3828p-1, -0x1.649476p+0, 0x1.44bf44p+0, -0x1.970258p+1, -0x1.02a7acp-1, 0x1.85098cp-1, 0x1.241d9cp+1, 0x1.94f7f8p+1, -0x1.309b68p+0, -0x1.13ddbep+2, 0x1.dd6fbp+0, 0x1.7ed62p-3),
#               f5:(0x1.702d88p+2, 0x1.5ce528p+1, -0x1.ad4b84p+0, 0x1.12d3b2p+3, -0x1.27a77cp+2, 0x1.d6363ep+2, 0x1.402d1ep+1, -0x1.441ad2p+1, 0x1.bb6858p+0, 0x1.97164p-2, 0x1.8dadacp+0, 0x1.3981p-4),
#               f6:(-0x1.1c717cp+3, -0x1.30a862p+1, -0x1.04086p-3, 0x1.7446e4p+1, 0x1.1c206ap+2, -0x1.12793p+3, -0x1.4109dp-1, -0x1.0a15bp-1, 0x1.5a9b04p+0, -0x1.8ae85p+1, 0x1.939bcep+1, 0x1.87706p-2)]
# {OUT} Y_N2 = [f1:(0xfffffffe, 0x1, 0xb, 0xfffffffc, 0xffffffd9, 0xffffffee, 0xfffffff9, 0x22, 0xffffffd2, 0xffffffee, 0xfffffff4, 0xfffffffd),
#               f2:(0xffffffe3, 0x1e, 0xfffffffb, 0xb, 0xffffffdd, 0xfffffff2, 0xffffffa9, 0x9, 0xfffffff8, 0xa, 0x10, 0x2b),
#               f3:(0xffffffea, 0xffffffde, 0x4, 0xfffffff9, 0xffffffc7, 0x49, 0x13, 0xffffffe4, 0xfffffff2, 0xe, 0xfffffffc, 0xa),
#               f4:(0xfffffffc, 0xfffffff5, 0xa, 0xffffffe7, 0xfffffffc, 0x6, 0x12, 0x19, 0xfffffff6, 0xffffffde, 0xf, 0x1),
#               f5:(0x2e, 0x16, 0xfffffff3, 0x45, 0xffffffdb, 0x3b, 0x14, 0xffffffec, 0xe, 0x3, 0xc, 0x1),
#               f6:(0xffffffb9, 0xffffffed, 0xffffffff, 0x17, 0x24, 0xffffffbb, 0xfffffffb, 0xfffffffc, 0xb, 0xffffffe7, 0x19, 0x3)]
# Returned status: 0
#
# Puncturer_NO::depuncture(const int8 Y_N1[6x12], int8 Y_N2[6x12])
# {IN}  Y_N1 = [f1:(0xfffffffe, 0x1, 0xb, 0xfffffffc, 0xffffffd9, 0xffffffee, 0xfffffff9, 0x22, 0xffffffd2, 0xffffffee, 0xfffffff4, 0xfffffffd),
#               f2:(0xffffffe3, 0x1e, 0xfffffffb, 0xb, 0xffffffdd, 0xfffffff2, 0xffffffa9, 0x9, 0xfffffff8, 0xa, 0x10, 0x2b),
#               f3:(0xffffffea, 0xffffffde, 0x4, 0xfffffff9, 0xffffffc7, 0x49, 0x13, 0xffffffe4, 0xfffffff2, 0xe, 0xfffffffc, 0xa),
#               f4:(0xfffffffc, 0xfffffff5, 0xa, 0xffffffe7, 0xfffffffc, 0x6, 0x12, 0x19, 0xfffffff6, 0xffffffde, 0xf, 0x1),
#               f5:(0x2e, 0x16, 0xfffffff3, 0x45, 0xffffffdb, 0x3b, 0x14, 0xffffffec, 0xe, 0x3, 0xc, 0x1),
#               f6:(0xffffffb9, 0xffffffed, 0xffffffff, 0x17, 0x24, 0xffffffbb, 0xfffffffb, 0xfffffffc, 0xb, 0xffffffe7, 0x19, 0x3)]
# {OUT} Y_N2 = [f1:(0xfffffffe, 0x1, 0xb, 0xfffffffc, 0xffffffd9, 0xffffffee, 0xfffffff9, 0x22, 0xffffffd2, 0xffffffee, 0xfffffff4, 0xfffffffd),
#               f2:(0xffffffe3, 0x1e, 0xfffffffb, 0xb, 0xffffffdd, 0xfffffff2, 0xffffffa9, 0x9, 0xfffffff8, 0xa, 0x10, 0x2b),
#               f3:(0xffffffea, 0xffffffde, 0x4, 0xfffffff9, 0xffffffc7, 0x49, 0x13, 0xffffffe4, 0xfffffff2, 0xe, 0xfffffffc, 0xa),
#               f4:(0xfffffffc, 0xfffffff5, 0xa, 0xffffffe7, 0xfffffffc, 0x6, 0x12, 0x19, 0xfffffff6, 0xffffffde, 0xf, 0x1),
#               f5:(0x2e, 0x16, 0xfffffff3, 0x45, 0xffffffdb, 0x3b, 0x14, 0xffffffec, 0xe, 0x3, 0xc, 0x1),
#               f6:(0xffffffb9, 0xffffffed, 0xffffffff, 0x17, 0x24, 0xffffffbb, 0xfffffffb, 0xfffffffc, 0xb, 0xffffffe7, 0x19, 0x3)]
# Returned status: 0
#
# Decoder_NO::decode_siho(const int8 Y_N[6x12], int8 V_K[6x12])
# {IN}  Y_N = [f1:(0xfffffffe, 0x1, 0xb, 0xfffffffc, 0xffffffd9, 0xffffffee, 0xfffffff9, 0x22, 0xffffffd2, 0xffffffee, 0xfffffff4, 0xfffffffd),
#              f2:(0xffffffe3, 0x1e, 0xfffffffb, 0xb, 0xffffffdd, 0xfffffff2, 0xffffffa9, 0x9, 0xfffffff8, 0xa, 0x10, 0x2b),
#              f3:(0xffffffea, 0xffffffde, 0x4, 0xfffffff9, 0xffffffc7, 0x49, 0x13, 0xffffffe4, 0xfffffff2, 0xe, 0xfffffffc, 0xa),
#              f4:(0xfffffffc, 0xfffffff5, 0xa, 0xffffffe7, 0xfffffffc, 0x6, 0x12, 0x19, 0xfffffff6, 0xffffffde, 0xf, 0x1),
#              f5:(0x2e, 0x16, 0xfffffff3, 0x45, 0xffffffdb, 0x3b, 0x14, 0xffffffec, 0xe, 0x3, 0xc, 0x1),
#              f6:(0xffffffb9, 0xffffffed, 0xffffffff, 0x17, 0x24, 0xffffffbb, 0xfffffffb, 0xfffffffc, 0xb, 0xffffffe7, 0x19, 0x3)]
# {OUT} V_K = [f1:(0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1),
#              f2:(0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0),
#              f3:(0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0),
#              f4:(0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0),
#              f5:(0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#              f6:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0)]
# Returned status: 0
#
# CRC_NO::extract(const int8 V_K1[6x12], int8 V_K2[6x12])
# {IN}  V_K1 = [f1:(0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1),
#               f2:(0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0),
#               f3:(0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0),
#               f4:(0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0),
#               f5:(0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#               f6:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0)]
# {OUT} V_K2 = [f1:(0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1),
#               f2:(0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0),
#               f3:(0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0),
#               f4:(0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0),
#               f5:(0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#               f6:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0)]
# Returned status: 0
#
# Monitor_BFER::check_errors(const int8 U[6x12], const int8 V[6x12])
# {IN}  U = [f1:(0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1),
#            f2:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0),
#            f3:(0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1),
#            f4:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0),
#            f5:(0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#            f6:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0)]
# {IN}  V = [f1:(0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x1),
#            f2:(0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0),
#            f3:(0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0),
#            f4:(0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0),
#            f5:(0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0),
#            f6:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0)]
# Returned status: 6
#
# -------------------------------
# New communication (nÂ°20)
# -------------------------------
#
# Source_random::generate(int8 U_K[6x12])
# {OUT} U_K = [f1:(0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1),
#              f2:(0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0),
#              f3:(0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1),
#              f4:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1),
#              f5:(0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0),
#              f6:(0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1)]
# Returned status: 0
#
# CRC_NO::build(const int8 U_K1[6x12], int8 U_K2[6x12])
# {IN}  U_K1 = [f1:(0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1),
#               f2:(0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0),
#               f3:(0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1),
#               f4:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1),
#               f5:(0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0),
#               f6:(0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1)]
# {OUT} U_K2 = [f1:(0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1),
#               f2:(0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0),
#               f3:(0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1),
#               f4:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1),
#               f5:(0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0),
#               f6:(0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1)]
# Returned status: 0
#
# Encoder_NO::encode(const int8 U_K[6x12], int8 X_N[6x12])
# {IN}  U_K = [f1:(0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1),
#              f2:(0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0),
#              f3:(0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1),
#              f4:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1),
#              f5:(0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0),
#              f6:(0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1)]
# {OUT} X_N = [f1:(0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1),
#              f2:(0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0),
#              f3:(0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1),
#              f4:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1),
#              f5:(0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0),
#              f6:(0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1)]
# Returned status: 0
#
# Puncturer_NO::puncture(const int8 X_N1[6x12], int8 X_N2[6x12])
# {IN}  X_N1 = [f1:(0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1),
#               f2:(0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0),
#               f3:(0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1),
#               f4:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1),
#               f5:(0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0),
#               f6:(0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1)]
# {OUT} X_N2 = [f1:(0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1),
#               f2:(0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0),
#               f3:(0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1),
#               f4:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1),
#               f5:(0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0),
#               f6:(0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1)]
# Returned status: 0
#
# Modem_SCMA::modulate(const int8 X_N1[6x12], float32 X_N2[6x48])
# {IN}  X_N1 = [f1:(0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1),
#               f2:(0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0),
#               f3:(0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1),
#               f4:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1),
#               f5:(0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0),
#               f6:(0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1)]
# {OUT} X_N2 = [f1:(0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0),
#               f2:(-0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0),
#               f3:(0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3),
#               f5:(0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3),
#               f6:(0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Channel_Rayleigh_LLR::add_noise_wg(const float32 X_N[6x48], float32 H_N[6x48], float32 Y_N[6x48])
# {IN}  X_N = [f1:(0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0),
#              f2:(-0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0),
#              f3:(0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3),
#              f5:(0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3),
#              f6:(0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0)]
# {OUT} H_N = [f1:(-0x1.5de44ap-3, -0x1.ac4276p-2, -0x1.5a58c6p+0, -0x1.12ba34p+0, -0x1.18abeep-2, 0x1.76e8bap-3, 0x1.5bd416p-3, -0x1.10ec98p+0, -0x1.06afeep-1, -0x1.0d0d38p-2, 0x1.8c2562p-8, -0x1.92c168p-3, 0x1.b2fa3ap-4, -0x1.c7d142p-2, -0x1.6ea636p-3, 0x1.6ccb4ep-2, 0x1.9fe5e8p-5, 0x1.ef1bbp-3, 0x1.036cbcp-1, -0x1.f7c8f6p-3, -0x1.376e1ap-2, -0x1.eacb78p-2, -0x1.011016p-1, 0x1.151adcp-2, -0x1.96792ep+0, 0x1.248b82p-9, 0x1.192aa6p-2, -0x1.8c1e64p-7, 0x1.1afeaap+0, -0x1.556394p-2, 0x1.520e18p-4, 0x1.430dfp-2, -0x1.1c6a72p+0, 0x1.93c286p-1, 0x1.3e0124p+0, 0x1.0e1e66p-2, 0x1.290b3ep-2, 0x1.2fa522p-3, 0x1.f05184p-2, -0x1.65e6b4p-2, -0x1.d060a2p-2, -0x1.3b2004p-2, 0x1.2e36fp-2, 0x1.18a2b8p-1, 0x1.46dfap-2, -0x1.5a9e48p-2, -0x1.58a5ccp+0, 0x1.7affb8p-5),
#              f2:(0x1.16a9c6p-2, 0x1.07f134p+0, -0x1.4366c8p-2, 0x1.858f78p-1, 0x1.9c0ca6p-1, -0x1.4aca8p-1, -0x1.35e246p-6, -0x1.a5e706p-1, -0x1.695608p-1, 0x1.54e78cp-1, 0x1.e412f8p-3, 0x1.a3da1p-2, -0x1.40ceecp+0, -0x1.655758p-2, 0x1.acc3dap-4, -0x1.28455p+0, -0x1.0e34dap+0, 0x1.068408p-3, -0x1.4c8d06p+0, 0x1.4b2422p-1, 0x1.442bb4p-1, 0x1.ab9c38p+0, 0x1.a642f6p-2, 0x1.1e1c6ap+1, -0x1.2a9326p-1, -0x1.854da6p-2, 0x1.5158d6p-4, 0x1.9db406p-2, 0x1.197722p-3, 0x1.3f002ap-3, -0x1.42f8ecp-3, -0x1.a56206p-7, -0x1.2597aep-3, 0x1.33e618p+0, 0x1.52674cp-5, 0x1.b6945p-1, -0x1.dc329p-4, 0x1.618abep-1, 0x1.23335ep+0, 0x1.fa29e2p-1, -0x1.0d8994p+0, 0x1.199208p-2, 0x1.d94628p-1, 0x1.f2da44p-4, 0x1.2402ecp+0, 0x1.253e08p+0, 0x1.c584c2p-1, 0x1.519066p-1),
#              f3:(-0x1.dce0d6p-1, 0x1.91afdap-3, -0x1.2c6902p-4, 0x1.0b6368p+0, 0x1.1c06e2p-1, -0x1.6c26cp-2, 0x1.519ddep-2, -0x1.2b8e38p-2, 0x1.46b36cp+0, -0x1.09abc6p-1, -0x1.4d18aap-2, 0x1.17e816p+0, -0x1.40f87ep+0, 0x1.5b4e44p-1, -0x1.f97a54p-3, -0x1.90b4b2p-3, 0x1.3896b2p-5, -0x1.79d7fcp-2, 0x1.55845ep-1, -0x1.ae185cp-1, -0x1.b9459p-6, 0x1.1aef08p+0, 0x1.ae8cecp-4, 0x1.da316ep-1, -0x1.cacee4p-1, -0x1.bc296p-2, -0x1.49d854p-3, -0x1.f88898p-1, -0x1.11f9b4p+0, 0x1.90cf88p-2, -0x1.4be392p-1, -0x1.58c9cep-3, -0x1.217e54p-1, 0x1.059f9cp-1, 0x1.719fdcp-4, -0x1.38676ap-3, -0x1.33696ap-2, -0x1.0d087cp-1, -0x1.8719c8p-2, -0x1.dbe23cp-4, -0x1.a1e2dp-5, -0x1.70ede6p-2, 0x1.3bfcdp+0, -0x1.125b34p+0, -0x1.56805cp+0, 0x1.133878p-1, 0x1.2b139ep-3, -0x1.05f802p-1),
#              f4:(0x1.60397p-2, 0x1.05b734p-1, 0x1.ed9b56p-1, 0x1.59927cp-3, -0x1.47d6bp-1, 0x1.b972ccp-2, -0x1.1a6802p+0, 0x1.00a13ep-2, 0x1.70e47ap-3, -0x1.3aa5b6p-2, 0x1.475432p-1, 0x1.ccfa92p-1, 0x1.300094p-1, 0x1.2d84aap-1, -0x1.57d78cp-1, 0x1.1e7692p-1, 0x1.5d3d2ap+0, -0x1.aa849ep-2, 0x1.1f112cp+0, 0x1.92be1cp-1, 0x1.72a73cp-1, -0x1.71eb0ap+0, 0x1.3aef0cp+0, -0x1.3d67acp-1, -0x1.8de7a8p-5, 0x1.2bfb2ap-3, -0x1.7e2fbap-1, -0x1.403ec6p-2, -0x1.54e3c6p-5, -0x1.be09c4p-3, -0x1.2d235ep+0, 0x1.17eedcp-5, 0x1.191cf6p-2, 0x1.add884p-2, 0x1.1268f6p-4, 0x1.23fb22p-4, -0x1.d06f76p-3, 0x1.85ea4p-6, -0x1.2a3518p-2, -0x1.e3bf16p-4, -0x1.09002ep+1, -0x1.4ab27p-2, 0x1.65bcdp-1, -0x1.91e546p-5, -0x1.af3a56p+0, -0x1.0b8656p-3, 0x1.40f832p-3, -0x1.5f684p-2),
#              f5:(-0x1.65189ap-1, -0x1.f50c02p-2, -0x1.30e826p-2, 0x1.5edd08p-1, 0x1.273acp+0, 0x1.bf46d6p-1, 0x1.20186cp-3, 0x1.f15b22p-1, 0x1.472e4ap-1, 0x1.527acap-3, 0x1.5008cap-1, 0x1.e588fap-3, 0x1.ac0bacp-1, -0x1.19be98p-4, -0x1.b82596p-2, -0x1.8e61p-4, 0x1.ab2adcp-1, -0x1.93ac2cp-3, 0x1.67e22ap-3, -0x1.f234cep-3, -0x1.d28ddp-2, -0x1.03fb1p+0, -0x1.123d9ap-1, -0x1.bd5de8p-1, -0x1.a1fa12p-3, -0x1.66b4dep-1, 0x1.9a4784p-1, 0x1.de21f8p-3, -0x1.30d6c8p-2, -0x1.c14cd6p-2, 0x1.6bc906p-4, 0x1.b8a422p-3, -0x1.ab1a02p-3, 0x1.9f89aap+0, -0x1.b757bap-3, 0x1.090ee2p-1, 0x1.43d556p-6, 0x1.15e72ap-3, 0x1.3fdfe8p-2, -0x1.823592p-2, -0x1.5d5046p-5, -0x1.21754cp-2, 0x1.17da8cp-4, 0x1.4651e2p-2, -0x1.1941fep-1, -0x1.07465ap-2, -0x1.bcf602p-1, -0x1.5b4a36p-2),
#              f6:(0x1.d343dcp-1, -0x1.d687ap-1, 0x1.588e86p-7, -0x1.666bfcp-3, 0x1.cb43ap-1, 0x1.8a0152p-1, 0x1.2cc126p-3, -0x1.84ae58p-2, 0x1.207b66p+0, 0x1.4d7368p-1, 0x1.c101dap-1, -0x1.4ac2aep-3, -0x1.3dc692p-2, 0x1.6267dep-3, -0x1.1b2e0ep-1, 0x1.2e599ep-2, -0x1.44d618p-1, -0x1.33dc12p+0, -0x1.6e85dp+0, -0x1.6ff02p-1, 0x1.25f90ap+0, -0x1.e394p+0, 0x1.0cf714p+0, 0x1.59287ep+0, 0x1.d6644p-1, 0x1.d5c5d6p-1, 0x1.1e44c8p+0, 0x1.681484p-1, 0x1.14ddecp-2, 0x1.34aaa6p-1, -0x1.b4c0e8p-1, 0x1.4335fcp-3, 0x1.8d3afp+0, 0x1.f79d52p-7, -0x1.d39c24p-3, 0x1.222436p-1, -0x1.db3572p-2, -0x1.1d4c9ap-2, -0x1.ea2cdcp-1, -0x1.32ec38p-1, 0x1.2a96bp-4, 0x1.95d624p-1, -0x1.082056p-11, -0x1.98181cp-2, 0x1.aa3f3cp+0, -0x1.35eb4ep-1, -0x1.fa5aap-3, 0x1.e5d9c6p-4)]
# {OUT} Y_N = [f1:(0x1.01d9cp-2, 0x1.0da834p-3, -0x1.c159cp-2, -0x1.68a6a8p+0, -0x1.8cde5cp-2, -0x1.0310e4p-1, 0x1.e4205p-2, -0x1.a26dp-2, -0x1.90e808p-3, 0x1.9b233cp-2, 0x1.e2e048p-4, 0x1.27ebfp+0, -0x1.f70e64p-3, 0x1.0187e4p-3, -0x1.297p-6, 0x1.17d7a2p-3, -0x1.6c2614p-3, 0x1.c5ec3cp-3, 0x1.63aea4p-1, 0x1.b55b24p-3, -0x1.e7388ep-2, 0x1.60e402p+1, -0x1.fe867cp-1, -0x1.e2e95ep-3, -0x1.850dp-2, -0x1.9f890ap-3, 0x1.31c0bap-1, 0x1.6f0428p-2, 0x1.22f04ap-1, -0x1.3e1824p-3, 0x1.618eb6p-3, -0x1.6efa0cp-4, -0x1.c2e7dp-4, 0x1.08ac8p+0, 0x1.cc392p-2, 0x1.3c33eep-1, -0x1.eab2fcp-4, 0x1.3c050cp-1, 0x1.7dec28p-2, -0x1.087db8p+0, -0x1.c2203cp-3, -0x1.740466p-2, 0x1.77f58p-3, 0x1.5fdb48p-1, 0x1.3813fcp+0, -0x1.1fc26cp+0, 0x1.a5c114p-1, -0x1.4e08a8p-1),
#              f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Modem_SCMA::filter(const float32 Y_N1[6x48], float32 Y_N2[6x48])
# {IN}  Y_N1 = [f1:(0x1.01d9cp-2, 0x1.0da834p-3, -0x1.c159cp-2, -0x1.68a6a8p+0, -0x1.8cde5cp-2, -0x1.0310e4p-1, 0x1.e4205p-2, -0x1.a26dp-2, -0x1.90e808p-3, 0x1.9b233cp-2, 0x1.e2e048p-4, 0x1.27ebfp+0, -0x1.f70e64p-3, 0x1.0187e4p-3, -0x1.297p-6, 0x1.17d7a2p-3, -0x1.6c2614p-3, 0x1.c5ec3cp-3, 0x1.63aea4p-1, 0x1.b55b24p-3, -0x1.e7388ep-2, 0x1.60e402p+1, -0x1.fe867cp-1, -0x1.e2e95ep-3, -0x1.850dp-2, -0x1.9f890ap-3, 0x1.31c0bap-1, 0x1.6f0428p-2, 0x1.22f04ap-1, -0x1.3e1824p-3, 0x1.618eb6p-3, -0x1.6efa0cp-4, -0x1.c2e7dp-4, 0x1.08ac8p+0, 0x1.cc392p-2, 0x1.3c33eep-1, -0x1.eab2fcp-4, 0x1.3c050cp-1, 0x1.7dec28p-2, -0x1.087db8p+0, -0x1.c2203cp-3, -0x1.740466p-2, 0x1.77f58p-3, 0x1.5fdb48p-1, 0x1.3813fcp+0, -0x1.1fc26cp+0, 0x1.a5c114p-1, -0x1.4e08a8p-1),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# {OUT} Y_N2 = [f1:(0x1.01d9cp-2, 0x1.0da834p-3, -0x1.c159cp-2, -0x1.68a6a8p+0, -0x1.8cde5cp-2, -0x1.0310e4p-1, 0x1.e4205p-2, -0x1.a26dp-2, -0x1.90e808p-3, 0x1.9b233cp-2, 0x1.e2e048p-4, 0x1.27ebfp+0, -0x1.f70e64p-3, 0x1.0187e4p-3, -0x1.297p-6, 0x1.17d7a2p-3, -0x1.6c2614p-3, 0x1.c5ec3cp-3, 0x1.63aea4p-1, 0x1.b55b24p-3, -0x1.e7388ep-2, 0x1.60e402p+1, -0x1.fe867cp-1, -0x1.e2e95ep-3, -0x1.850dp-2, -0x1.9f890ap-3, 0x1.31c0bap-1, 0x1.6f0428p-2, 0x1.22f04ap-1, -0x1.3e1824p-3, 0x1.618eb6p-3, -0x1.6efa0cp-4, -0x1.c2e7dp-4, 0x1.08ac8p+0, 0x1.cc392p-2, 0x1.3c33eep-1, -0x1.eab2fcp-4, 0x1.3c050cp-1, 0x1.7dec28p-2, -0x1.087db8p+0, -0x1.c2203cp-3, -0x1.740466p-2, 0x1.77f58p-3, 0x1.5fdb48p-1, 0x1.3813fcp+0, -0x1.1fc26cp+0, 0x1.a5c114p-1, -0x1.4e08a8p-1),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Modem_SCMA::demodulate_wg(const float32 H_N[6x48], const float32 Y_N1[6x48], float32 Y_N2[6x12])
# {IN}  H_N  = [f1:(-0x1.5de44ap-3, -0x1.ac4276p-2, -0x1.5a58c6p+0, -0x1.12ba34p+0, -0x1.18abeep-2, 0x1.76e8bap-3, 0x1.5bd416p-3, -0x1.10ec98p+0, -0x1.06afeep-1, -0x1.0d0d38p-2, 0x1.8c2562p-8, -0x1.92c168p-3, 0x1.b2fa3ap-4, -0x1.c7d142p-2, -0x1.6ea636p-3, 0x1.6ccb4ep-2, 0x1.9fe5e8p-5, 0x1.ef1bbp-3, 0x1.036cbcp-1, -0x1.f7c8f6p-3, -0x1.376e1ap-2, -0x1.eacb78p-2, -0x1.011016p-1, 0x1.151adcp-2, -0x1.96792ep+0, 0x1.248b82p-9, 0x1.192aa6p-2, -0x1.8c1e64p-7, 0x1.1afeaap+0, -0x1.556394p-2, 0x1.520e18p-4, 0x1.430dfp-2, -0x1.1c6a72p+0, 0x1.93c286p-1, 0x1.3e0124p+0, 0x1.0e1e66p-2, 0x1.290b3ep-2, 0x1.2fa522p-3, 0x1.f05184p-2, -0x1.65e6b4p-2, -0x1.d060a2p-2, -0x1.3b2004p-2, 0x1.2e36fp-2, 0x1.18a2b8p-1, 0x1.46dfap-2, -0x1.5a9e48p-2, -0x1.58a5ccp+0, 0x1.7affb8p-5),
#               f2:(0x1.16a9c6p-2, 0x1.07f134p+0, -0x1.4366c8p-2, 0x1.858f78p-1, 0x1.9c0ca6p-1, -0x1.4aca8p-1, -0x1.35e246p-6, -0x1.a5e706p-1, -0x1.695608p-1, 0x1.54e78cp-1, 0x1.e412f8p-3, 0x1.a3da1p-2, -0x1.40ceecp+0, -0x1.655758p-2, 0x1.acc3dap-4, -0x1.28455p+0, -0x1.0e34dap+0, 0x1.068408p-3, -0x1.4c8d06p+0, 0x1.4b2422p-1, 0x1.442bb4p-1, 0x1.ab9c38p+0, 0x1.a642f6p-2, 0x1.1e1c6ap+1, -0x1.2a9326p-1, -0x1.854da6p-2, 0x1.5158d6p-4, 0x1.9db406p-2, 0x1.197722p-3, 0x1.3f002ap-3, -0x1.42f8ecp-3, -0x1.a56206p-7, -0x1.2597aep-3, 0x1.33e618p+0, 0x1.52674cp-5, 0x1.b6945p-1, -0x1.dc329p-4, 0x1.618abep-1, 0x1.23335ep+0, 0x1.fa29e2p-1, -0x1.0d8994p+0, 0x1.199208p-2, 0x1.d94628p-1, 0x1.f2da44p-4, 0x1.2402ecp+0, 0x1.253e08p+0, 0x1.c584c2p-1, 0x1.519066p-1),
#               f3:(-0x1.dce0d6p-1, 0x1.91afdap-3, -0x1.2c6902p-4, 0x1.0b6368p+0, 0x1.1c06e2p-1, -0x1.6c26cp-2, 0x1.519ddep-2, -0x1.2b8e38p-2, 0x1.46b36cp+0, -0x1.09abc6p-1, -0x1.4d18aap-2, 0x1.17e816p+0, -0x1.40f87ep+0, 0x1.5b4e44p-1, -0x1.f97a54p-3, -0x1.90b4b2p-3, 0x1.3896b2p-5, -0x1.79d7fcp-2, 0x1.55845ep-1, -0x1.ae185cp-1, -0x1.b9459p-6, 0x1.1aef08p+0, 0x1.ae8cecp-4, 0x1.da316ep-1, -0x1.cacee4p-1, -0x1.bc296p-2, -0x1.49d854p-3, -0x1.f88898p-1, -0x1.11f9b4p+0, 0x1.90cf88p-2, -0x1.4be392p-1, -0x1.58c9cep-3, -0x1.217e54p-1, 0x1.059f9cp-1, 0x1.719fdcp-4, -0x1.38676ap-3, -0x1.33696ap-2, -0x1.0d087cp-1, -0x1.8719c8p-2, -0x1.dbe23cp-4, -0x1.a1e2dp-5, -0x1.70ede6p-2, 0x1.3bfcdp+0, -0x1.125b34p+0, -0x1.56805cp+0, 0x1.133878p-1, 0x1.2b139ep-3, -0x1.05f802p-1),
#               f4:(0x1.60397p-2, 0x1.05b734p-1, 0x1.ed9b56p-1, 0x1.59927cp-3, -0x1.47d6bp-1, 0x1.b972ccp-2, -0x1.1a6802p+0, 0x1.00a13ep-2, 0x1.70e47ap-3, -0x1.3aa5b6p-2, 0x1.475432p-1, 0x1.ccfa92p-1, 0x1.300094p-1, 0x1.2d84aap-1, -0x1.57d78cp-1, 0x1.1e7692p-1, 0x1.5d3d2ap+0, -0x1.aa849ep-2, 0x1.1f112cp+0, 0x1.92be1cp-1, 0x1.72a73cp-1, -0x1.71eb0ap+0, 0x1.3aef0cp+0, -0x1.3d67acp-1, -0x1.8de7a8p-5, 0x1.2bfb2ap-3, -0x1.7e2fbap-1, -0x1.403ec6p-2, -0x1.54e3c6p-5, -0x1.be09c4p-3, -0x1.2d235ep+0, 0x1.17eedcp-5, 0x1.191cf6p-2, 0x1.add884p-2, 0x1.1268f6p-4, 0x1.23fb22p-4, -0x1.d06f76p-3, 0x1.85ea4p-6, -0x1.2a3518p-2, -0x1.e3bf16p-4, -0x1.09002ep+1, -0x1.4ab27p-2, 0x1.65bcdp-1, -0x1.91e546p-5, -0x1.af3a56p+0, -0x1.0b8656p-3, 0x1.40f832p-3, -0x1.5f684p-2),
#               f5:(-0x1.65189ap-1, -0x1.f50c02p-2, -0x1.30e826p-2, 0x1.5edd08p-1, 0x1.273acp+0, 0x1.bf46d6p-1, 0x1.20186cp-3, 0x1.f15b22p-1, 0x1.472e4ap-1, 0x1.527acap-3, 0x1.5008cap-1, 0x1.e588fap-3, 0x1.ac0bacp-1, -0x1.19be98p-4, -0x1.b82596p-2, -0x1.8e61p-4, 0x1.ab2adcp-1, -0x1.93ac2cp-3, 0x1.67e22ap-3, -0x1.f234cep-3, -0x1.d28ddp-2, -0x1.03fb1p+0, -0x1.123d9ap-1, -0x1.bd5de8p-1, -0x1.a1fa12p-3, -0x1.66b4dep-1, 0x1.9a4784p-1, 0x1.de21f8p-3, -0x1.30d6c8p-2, -0x1.c14cd6p-2, 0x1.6bc906p-4, 0x1.b8a422p-3, -0x1.ab1a02p-3, 0x1.9f89aap+0, -0x1.b757bap-3, 0x1.090ee2p-1, 0x1.43d556p-6, 0x1.15e72ap-3, 0x1.3fdfe8p-2, -0x1.823592p-2, -0x1.5d5046p-5, -0x1.21754cp-2, 0x1.17da8cp-4, 0x1.4651e2p-2, -0x1.1941fep-1, -0x1.07465ap-2, -0x1.bcf602p-1, -0x1.5b4a36p-2),
#               f6:(0x1.d343dcp-1, -0x1.d687ap-1, 0x1.588e86p-7, -0x1.666bfcp-3, 0x1.cb43ap-1, 0x1.8a0152p-1, 0x1.2cc126p-3, -0x1.84ae58p-2, 0x1.207b66p+0, 0x1.4d7368p-1, 0x1.c101dap-1, -0x1.4ac2aep-3, -0x1.3dc692p-2, 0x1.6267dep-3, -0x1.1b2e0ep-1, 0x1.2e599ep-2, -0x1.44d618p-1, -0x1.33dc12p+0, -0x1.6e85dp+0, -0x1.6ff02p-1, 0x1.25f90ap+0, -0x1.e394p+0, 0x1.0cf714p+0, 0x1.59287ep+0, 0x1.d6644p-1, 0x1.d5c5d6p-1, 0x1.1e44c8p+0, 0x1.681484p-1, 0x1.14ddecp-2, 0x1.34aaa6p-1, -0x1.b4c0e8p-1, 0x1.4335fcp-3, 0x1.8d3afp+0, 0x1.f79d52p-7, -0x1.d39c24p-3, 0x1.222436p-1, -0x1.db3572p-2, -0x1.1d4c9ap-2, -0x1.ea2cdcp-1, -0x1.32ec38p-1, 0x1.2a96bp-4, 0x1.95d624p-1, -0x1.082056p-11, -0x1.98181cp-2, 0x1.aa3f3cp+0, -0x1.35eb4ep-1, -0x1.fa5aap-3, 0x1.e5d9c6p-4)]
# {IN}  Y_N1 = [f1:(0x1.01d9cp-2, 0x1.0da834p-3, -0x1.c159cp-2, -0x1.68a6a8p+0, -0x1.8cde5cp-2, -0x1.0310e4p-1, 0x1.e4205p-2, -0x1.a26dp-2, -0x1.90e808p-3, 0x1.9b233cp-2, 0x1.e2e048p-4, 0x1.27ebfp+0, -0x1.f70e64p-3, 0x1.0187e4p-3, -0x1.297p-6, 0x1.17d7a2p-3, -0x1.6c2614p-3, 0x1.c5ec3cp-3, 0x1.63aea4p-1, 0x1.b55b24p-3, -0x1.e7388ep-2, 0x1.60e402p+1, -0x1.fe867cp-1, -0x1.e2e95ep-3, -0x1.850dp-2, -0x1.9f890ap-3, 0x1.31c0bap-1, 0x1.6f0428p-2, 0x1.22f04ap-1, -0x1.3e1824p-3, 0x1.618eb6p-3, -0x1.6efa0cp-4, -0x1.c2e7dp-4, 0x1.08ac8p+0, 0x1.cc392p-2, 0x1.3c33eep-1, -0x1.eab2fcp-4, 0x1.3c050cp-1, 0x1.7dec28p-2, -0x1.087db8p+0, -0x1.c2203cp-3, -0x1.740466p-2, 0x1.77f58p-3, 0x1.5fdb48p-1, 0x1.3813fcp+0, -0x1.1fc26cp+0, 0x1.a5c114p-1, -0x1.4e08a8p-1),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# {OUT} Y_N2 = [f1:(0x1.511208p+2, -0x1.87e798p+2, -0x1.2fd0ap-3, 0x1.7a5e3p-1, 0x1.d6517p-2, 0x1.290672p+1, 0x1.ca5bap-4, -0x1.cf2b18p-2, 0x1.1c9d5ep+2, -0x1.76f09ap+1, -0x1.c823bp-1, -0x1.4e8288p-1),
#               f2:(-0x1.07186p-1, 0x1.11fa0cp+1, 0x1.5aea1cp+1, 0x1.3d366p-2, 0x1.c50a3ap+2, -0x1.38d74p+2, 0x1.2f5168p+0, 0x1.eeb26p-1, 0x1.954244p+2, -0x1.3ebc2p-1, -0x1.51abbep+1, 0x1.2e74f8p+1),
#               f3:(0x1.10607cp+0, 0x1.e9694p-2, -0x1.c39df4p+1, 0x1.3308fp+3, 0x1.3b3f3p-2, 0x1.dd66e2p+0, 0x1.55baecp-1, -0x1.960f84p-1, -0x1.c884fp+0, -0x1.44bddp-1, -0x1.1ffab4p+0, -0x1.06f57ap+2),
#               f4:(-0x1.1db96cp+0, -0x1.6eb724p+1, -0x1.25f56p-2, 0x1.5953ap-3, -0x1.4158f8p+3, -0x1.61f764p+1, 0x1.3a78e8p-2, 0x1.8a20cp-4, 0x1.6e7698p-1, -0x1.d2d52cp+0, -0x1.0e62acp+3, -0x1.0e764p+1),
#               f5:(-0x1.fb1cacp+0, 0x1.3012p-4, 0x1.164c9p-2, -0x1.4e5908p+0, -0x1.8bcf1p+1, -0x1.cbf3d8p+1, -0x1.008cf8p-1, 0x1.cc1acp-2, -0x1.550a1p+2, -0x1.50b63p+2, 0x1.b6b9fp-1, 0x1.a32d7cp+0),
#               f6:(0x1.0006p-2, -0x1.d477cp-3, -0x1.a94d6ap+1, 0x1.6c871p-1, -0x1.1571bp+2, -0x1.662c3cp+3, -0x1.77734p-2, 0x1.2f1c5p+2, -0x1.d06f4p-4, 0x1.a7c38p-4, -0x1.673a6p-2, 0x1.e9fb8p-4)]
# Returned status: 0
#
# Quantizer_standard::process(const float32 Y_N1[6x12], int8 Y_N2[6x12])
# {IN}  Y_N1 = [f1:(0x1.511208p+2, -0x1.87e798p+2, -0x1.2fd0ap-3, 0x1.7a5e3p-1, 0x1.d6517p-2, 0x1.290672p+1, 0x1.ca5bap-4, -0x1.cf2b18p-2, 0x1.1c9d5ep+2, -0x1.76f09ap+1, -0x1.c823bp-1, -0x1.4e8288p-1),
#               f2:(-0x1.07186p-1, 0x1.11fa0cp+1, 0x1.5aea1cp+1, 0x1.3d366p-2, 0x1.c50a3ap+2, -0x1.38d74p+2, 0x1.2f5168p+0, 0x1.eeb26p-1, 0x1.954244p+2, -0x1.3ebc2p-1, -0x1.51abbep+1, 0x1.2e74f8p+1),
#               f3:(0x1.10607cp+0, 0x1.e9694p-2, -0x1.c39df4p+1, 0x1.3308fp+3, 0x1.3b3f3p-2, 0x1.dd66e2p+0, 0x1.55baecp-1, -0x1.960f84p-1, -0x1.c884fp+0, -0x1.44bddp-1, -0x1.1ffab4p+0, -0x1.06f57ap+2),
#               f4:(-0x1.1db96cp+0, -0x1.6eb724p+1, -0x1.25f56p-2, 0x1.5953ap-3, -0x1.4158f8p+3, -0x1.61f764p+1, 0x1.3a78e8p-2, 0x1.8a20cp-4, 0x1.6e7698p-1, -0x1.d2d52cp+0, -0x1.0e62acp+3, -0x1.0e764p+1),
#               f5:(-0x1.fb1cacp+0, 0x1.3012p-4, 0x1.164c9p-2, -0x1.4e5908p+0, -0x1.8bcf1p+1, -0x1.cbf3d8p+1, -0x1.008cf8p-1, 0x1.cc1acp-2, -0x1.550a1p+2, -0x1.50b63p+2, 0x1.b6b9fp-1, 0x1.a32d7cp+0),
#               f6:(0x1.0006p-2, -0x1.d477cp-3, -0x1.a94d6ap+1, 0x1.6c871p-1, -0x1.1571bp+2, -0x1.662c3cp+3, -0x1.77734p-2, 0x1.2f1c5p+2, -0x1.d06f4p-4, 0x1.a7c38p-4, -0x1.673a6p-2, 0x1.e9fb8p-4)]
# {OUT} Y_N2 = [f1:(0x2a, 0xffffffcf, 0xffffffff, 0x6, 0x4, 0x13, 0x1, 0xfffffffc, 0x24, 0xffffffe9, 0xfffffff9, 0xfffffffb),
#               f2:(0xfffffffc, 0x11, 0x16, 0x2, 0x39, 0xffffffd9, 0x9, 0x8, 0x33, 0xfffffffb, 0xffffffeb, 0x13),
#               f3:(0x9, 0x4, 0xffffffe4, 0x4d, 0x2, 0xf, 0x5, 0xfffffffa, 0xfffffff2, 0xfffffffb, 0xfffffff7, 0xffffffdf),
#               f4:(0xfffffff7, 0xffffffe9, 0xfffffffe, 0x1, 0xffffffb0, 0xffffffea, 0x2, 0x1, 0x6, 0xfffffff1, 0xffffffbc, 0xffffffef),
#               f5:(0xfffffff0, 0x1, 0x2, 0xfffffff6, 0xffffffe7, 0xffffffe3, 0xfffffffc, 0x4, 0xffffffd5, 0xffffffd6, 0x7, 0xd),
#               f6:(0x2, 0xfffffffe, 0xffffffe5, 0x6, 0xffffffdd, 0xffffffa6, 0xfffffffd, 0x26, 0xffffffff, 0x1, 0xfffffffd, 0x1)]
# Returned status: 0
#
# Puncturer_NO::depuncture(const int8 Y_N1[6x12], int8 Y_N2[6x12])
# {IN}  Y_N1 = [f1:(0x2a, 0xffffffcf, 0xffffffff, 0x6, 0x4, 0x13, 0x1, 0xfffffffc, 0x24, 0xffffffe9, 0xfffffff9, 0xfffffffb),
#               f2:(0xfffffffc, 0x11, 0x16, 0x2, 0x39, 0xffffffd9, 0x9, 0x8, 0x33, 0xfffffffb, 0xffffffeb, 0x13),
#               f3:(0x9, 0x4, 0xffffffe4, 0x4d, 0x2, 0xf, 0x5, 0xfffffffa, 0xfffffff2, 0xfffffffb, 0xfffffff7, 0xffffffdf),
#               f4:(0xfffffff7, 0xffffffe9, 0xfffffffe, 0x1, 0xffffffb0, 0xffffffea, 0x2, 0x1, 0x6, 0xfffffff1, 0xffffffbc, 0xffffffef),
#               f5:(0xfffffff0, 0x1, 0x2, 0xfffffff6, 0xffffffe7, 0xffffffe3, 0xfffffffc, 0x4, 0xffffffd5, 0xffffffd6, 0x7, 0xd),
#               f6:(0x2, 0xfffffffe, 0xffffffe5, 0x6, 0xffffffdd, 0xffffffa6, 0xfffffffd, 0x26, 0xffffffff, 0x1, 0xfffffffd, 0x1)]
# {OUT} Y_N2 = [f1:(0x2a, 0xffffffcf, 0xffffffff, 0x6, 0x4, 0x13, 0x1, 0xfffffffc, 0x24, 0xffffffe9, 0xfffffff9, 0xfffffffb),
#               f2:(0xfffffffc, 0x11, 0x16, 0x2, 0x39, 0xffffffd9, 0x9, 0x8, 0x33, 0xfffffffb, 0xffffffeb, 0x13),
#               f3:(0x9, 0x4, 0xffffffe4, 0x4d, 0x2, 0xf, 0x5, 0xfffffffa, 0xfffffff2, 0xfffffffb, 0xfffffff7, 0xffffffdf),
#               f4:(0xfffffff7, 0xffffffe9, 0xfffffffe, 0x1, 0xffffffb0, 0xffffffea, 0x2, 0x1, 0x6, 0xfffffff1, 0xffffffbc, 0xffffffef),
#               f5:(0xfffffff0, 0x1, 0x2, 0xfffffff6, 0xffffffe7, 0xffffffe3, 0xfffffffc, 0x4, 0xffffffd5, 0xffffffd6, 0x7, 0xd),
#               f6:(0x2, 0xfffffffe, 0xffffffe5, 0x6, 0xffffffdd, 0xffffffa6, 0xfffffffd, 0x26, 0xffffffff, 0x1, 0xfffffffd, 0x1)]
# Returned status: 0
#
# Decoder_NO::decode_siho(const int8 Y_N[6x12], int8 V_K[6x12])
# {IN}  Y_N = [f1:(0x2a, 0xffffffcf, 0xffffffff, 0x6, 0x4, 0x13, 0x1, 0xfffffffc, 0x24, 0xffffffe9, 0xfffffff9, 0xfffffffb),
#              f2:(0xfffffffc, 0x11, 0x16, 0x2, 0x39, 0xffffffd9, 0x9, 0x8, 0x33, 0xfffffffb, 0xffffffeb, 0x13),
#              f3:(0x9, 0x4, 0xffffffe4, 0x4d, 0x2, 0xf, 0x5, 0xfffffffa, 0xfffffff2, 0xfffffffb, 0xfffffff7, 0xffffffdf),
#              f4:(0xfffffff7, 0xffffffe9, 0xfffffffe, 0x1, 0xffffffb0, 0xffffffea, 0x2, 0x1, 0x6, 0xfffffff1, 0xffffffbc, 0xffffffef),
#              f5:(0xfffffff0, 0x1, 0x2, 0xfffffff6, 0xffffffe7, 0xffffffe3, 0xfffffffc, 0x4, 0xffffffd5, 0xffffffd6, 0x7, 0xd),
#              f6:(0x2, 0xfffffffe, 0xffffffe5, 0x6, 0xffffffdd, 0xffffffa6, 0xfffffffd, 0x26, 0xffffffff, 0x1, 0xfffffffd, 0x1)]
# {OUT} V_K = [f1:(0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1),
#              f2:(0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0),
#              f3:(0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1),
#              f4:(0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1),
#              f5:(0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0),
#              f6:(0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0)]
# Returned status: 0
#
# CRC_NO::extract(const int8 V_K1[6x12], int8 V_K2[6x12])
# {IN}  V_K1 = [f1:(0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1),
#               f2:(0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0),
#               f3:(0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1),
#               f4:(0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1),
#               f5:(0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0),
#               f6:(0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0)]
# {OUT} V_K2 = [f1:(0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1),
#               f2:(0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0),
#               f3:(0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1),
#               f4:(0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1),
#               f5:(0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0),
#               f6:(0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0)]
# Returned status: 0
#
# Monitor_BFER::check_errors(const int8 U[6x12], const int8 V[6x12])
# {IN}  U = [f1:(0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1),
#            f2:(0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0),
#            f3:(0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1),
#            f4:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1),
#            f5:(0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0),
#            f6:(0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1)]
# {IN}  V = [f1:(0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1),
#            f2:(0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0),
#            f3:(0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1),
#            f4:(0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1),
#            f5:(0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0),
#            f6:(0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0)]
# Returned status: 16
#
# -------------------------------
# New communication (nÂ°21)
# -------------------------------
#
# Source_random::generate(int8 U_K[6x12])
# {OUT} U_K = [f1:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1),
#              f2:(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0),
#              f3:(0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#              f4:(0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1),
#              f5:(0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1),
#              f6:(0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0)]
# Returned status: 0
#
# CRC_NO::build(const int8 U_K1[6x12], int8 U_K2[6x12])
# {IN}  U_K1 = [f1:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1),
#               f2:(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0),
#               f3:(0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#               f4:(0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1),
#               f5:(0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1),
#               f6:(0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0)]
# {OUT} U_K2 = [f1:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1),
#               f2:(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0),
#               f3:(0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#               f4:(0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1),
#               f5:(0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1),
#               f6:(0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0)]
# Returned status: 0
#
# Encoder_NO::encode(const int8 U_K[6x12], int8 X_N[6x12])
# {IN}  U_K = [f1:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1),
#              f2:(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0),
#              f3:(0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#              f4:(0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1),
#              f5:(0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1),
#              f6:(0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0)]
# {OUT} X_N = [f1:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1),
#              f2:(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0),
#              f3:(0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#              f4:(0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1),
#              f5:(0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1),
#              f6:(0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0)]
# Returned status: 0
#
# Puncturer_NO::puncture(const int8 X_N1[6x12], int8 X_N2[6x12])
# {IN}  X_N1 = [f1:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1),
#               f2:(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0),
#               f3:(0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#               f4:(0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1),
#               f5:(0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1),
#               f6:(0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0)]
# {OUT} X_N2 = [f1:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1),
#               f2:(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0),
#               f3:(0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#               f4:(0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1),
#               f5:(0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1),
#               f6:(0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0)]
# Returned status: 0
#
# Modem_SCMA::modulate(const int8 X_N1[6x12], float32 X_N2[6x48])
# {IN}  X_N1 = [f1:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1),
#               f2:(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0),
#               f3:(0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#               f4:(0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1),
#               f5:(0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1),
#               f6:(0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0)]
# {OUT} X_N2 = [f1:(0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0),
#               f2:(0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0),
#               f3:(-0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1),
#               f5:(0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2),
#               f6:(0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Channel_Rayleigh_LLR::add_noise_wg(const float32 X_N[6x48], float32 H_N[6x48], float32 Y_N[6x48])
# {IN}  X_N = [f1:(0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0),
#              f2:(0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0),
#              f3:(-0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1),
#              f5:(0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2),
#              f6:(0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0)]
# {OUT} H_N = [f1:(0x1.36bd1ap+0, 0x1.5b640ap-1, 0x1.e49db2p-7, 0x1.3b0b7ep-6, -0x1.ba01b4p-1, 0x1.8e71ecp+0, 0x1.0888d4p+0, -0x1.de000ap-3, 0x1.6b498cp-1, -0x1.4a56dep-1, 0x1.48d8f4p+0, 0x1.1acdd6p-1, 0x1.f9ca5ep-4, 0x1.3ca0a4p-5, -0x1.20dbbp-1, -0x1.298c3ap-2, 0x1.94b338p+0, 0x1.cf5356p-3, -0x1.bb5e5cp-1, 0x1.d248b2p-4, -0x1.b724dcp-8, 0x1.952eaap-4, 0x1.e9e1dcp-3, 0x1.c5b45ep-6, -0x1.bf732cp-3, 0x1.57b43ep+0, 0x1.fdc7d6p-1, -0x1.2d781ap-2, -0x1.1bf072p+0, 0x1.af6666p-1, 0x1.d3905cp-3, -0x1.ba23f8p+0, -0x1.7861ccp-2, 0x1.782084p+0, 0x1.606dcep-2, 0x1.a697dap-1, -0x1.2cb772p-3, -0x1.20bc82p-3, 0x1.016166p-1, -0x1.edc558p-2, 0x1.988b86p-2, 0x1.604cf4p-1, 0x1.1072c2p-1, 0x1.f929d2p-3, 0x1.88fd08p-2, 0x1.67f44ap-1, 0x1.d5acdp-1, 0x1.c5451ep-1),
#              f2:(-0x1.8d118ap-1, -0x1.1278d8p-5, 0x1.0c1b12p-2, -0x1.2827bap-3, -0x1.10a214p-1, -0x1.de1a6cp-2, -0x1.7c8d1p-2, -0x1.7f157ap-2, -0x1.8d971ep+0, -0x1.422c96p+0, 0x1.f37a6ep-3, -0x1.7f638ap-2, 0x1.09c762p-1, 0x1.4d8eeep-1, 0x1.af4daap-1, 0x1.8c8a0ap-2, -0x1.6154a2p-4, -0x1.58218ep-2, 0x1.f8e54cp-1, -0x1.d871dcp-2, 0x1.699c2ep-1, -0x1.2a088ap+0, -0x1.0704a2p-3, -0x1.01a46ep+0, 0x1.acd5a2p-2, 0x1.92febcp-4, 0x1.38db6p-2, -0x1.c9c9p-2, 0x1.19777ep-1, 0x1.7fa0aap-2, 0x1.9056f6p-1, 0x1.1fe248p-3, 0x1.67b3c4p-1, -0x1.4b33p-3, -0x1.cf07f4p-2, 0x1.0b0a54p-1, 0x1.6aaebp-2, 0x1.9e04bp-3, -0x1.001f08p-6, -0x1.1f6426p+0, 0x1.5eeff2p-1, -0x1.bb2efcp-1, 0x1.6f8cfcp-2, -0x1.881c26p-4, 0x1.9540eap-3, -0x1.096598p+0, 0x1.22a6e6p-3, 0x1.402292p-1),
#              f3:(-0x1.be57f8p-1, 0x1.a39f0ap-1, -0x1.427726p-1, -0x1.390cacp-2, -0x1.d7e6fep-3, 0x1.1583d4p-2, 0x1.0d0cfap+0, 0x1.200f22p+0, -0x1.a2e7f8p-6, -0x1.ba974cp-1, 0x1.54921ep-2, -0x1.89eabep+0, 0x1.f56b44p-3, -0x1.de8198p-2, 0x1.72982p-2, 0x1.e177fep-4, 0x1.606d28p-8, 0x1.96058cp+0, -0x1.b3600ap-5, -0x1.1e5e82p+0, 0x1.6040a4p-1, -0x1.457eap-3, -0x1.4a6106p-2, -0x1.a0d4a4p-1, -0x1.546df6p-1, -0x1.44964cp-1, 0x1.2264fcp+0, 0x1.6221f8p+0, 0x1.89f714p-5, -0x1.6f3c76p+0, -0x1.527312p-3, 0x1.9b2168p-3, 0x1.22e22ap-2, 0x1.c92e74p-2, -0x1.13bc0ep-1, 0x1.03a88cp+0, 0x1.db3022p-1, -0x1.c3d7cp-2, 0x1.7b72ap+0, 0x1.55ef06p+0, -0x1.ccc0f4p-2, -0x1.9b1c4ap-3, -0x1.3e9e2p-1, 0x1.3fee66p-3, -0x1.28b072p-1, 0x1.a7eaaep-2, -0x1.78255p+0, -0x1.cf5d56p-5),
#              f4:(0x1.d89bbap-1, 0x1.c89696p-2, -0x1.b79a84p-2, -0x1.627614p+0, 0x1.c2a84ap-2, -0x1.efe98p-2, 0x1.f117bap-1, -0x1.089a5ep+0, 0x1.57c3e8p-4, -0x1.dad664p-1, -0x1.e7ea1ap-1, -0x1.575f8p-4, 0x1.3cdacp+0, 0x1.f8e866p-4, 0x1.10902cp-1, -0x1.7c20cp-2, -0x1.0a426cp-1, -0x1.3e8ef8p+0, 0x1.2f62f8p+0, 0x1.700732p-3, 0x1.254cb8p-2, 0x1.cd410ep-4, -0x1.d89f7cp-2, 0x1.0b862cp-1, -0x1.f15e7cp-3, -0x1.244ea2p-5, 0x1.0d14d2p-3, 0x1.8b254ep+0, -0x1.39d022p-2, 0x1.ccd3f2p-1, 0x1.bde09ap-6, -0x1.b0b27ap-4, -0x1.437af6p-2, 0x1.54e5acp-2, 0x1.b7dc3cp+0, 0x1.a6d3b8p-3, 0x1.e2ff4ep-3, 0x1.585124p+0, 0x1.72fa56p-1, -0x1.353e2p-2, 0x1.9bd464p-2, 0x1.645d78p-4, 0x1.8146eep-2, 0x1.36574p-1, -0x1.1a9a7p-1, -0x1.9f1f82p-1, 0x1.a51a7p-2, 0x1.28e72p-1),
#              f5:(0x1.1a1ad2p-1, -0x1.dc334p-1, -0x1.42954ap-5, -0x1.bb0d5cp-5, -0x1.f62598p-1, -0x1.336ecep-1, 0x1.0405e4p+0, 0x1.92b0aep-1, 0x1.6fffa2p-2, 0x1.4acdd2p-1, 0x1.4dff78p-1, -0x1.d86cfap-2, -0x1.ef0c78p-3, 0x1.33288ep-3, -0x1.1b5b9ep+0, 0x1.beeb1ap+0, -0x1.d29faap-1, 0x1.bf445cp-2, 0x1.747abp-1, -0x1.61a2fep-3, -0x1.14bf7ap+0, 0x1.ef577ap-1, -0x1.2c8a28p-1, 0x1.5cd1cp+0, 0x1.32aa8ap-2, -0x1.eaa7aap-1, -0x1.76f394p-5, 0x1.6e1c8cp-1, -0x1.e6ba2ap-3, 0x1.9f108p-1, 0x1.7e62b4p-5, 0x1.75fa42p-1, -0x1.564d16p+0, 0x1.e23adp-2, -0x1.01642ap-2, 0x1.688074p-3, 0x1.66f3aep-4, -0x1.526698p-4, -0x1.1c0cfcp+0, -0x1.f14214p-1, -0x1.a5f2a8p-2, -0x1.0c0a4cp+0, 0x1.531bbp-2, -0x1.932fb6p-2, 0x1.475b24p+0, -0x1.e941b4p-2, 0x1.38cca8p-1, 0x1.73c846p-1),
#              f6:(-0x1.eea16cp-3, -0x1.2dcd9cp-3, -0x1.e7b36cp-2, -0x1.97776p-3, -0x1.4daea8p+0, 0x1.08e116p-1, -0x1.1a9298p+0, -0x1.d965fep-1, -0x1.ddac1cp-6, 0x1.c5af38p-3, -0x1.274da2p-2, 0x1.96dc62p-1, -0x1.24b196p-1, 0x1.960c0ap-1, 0x1.132b5cp+0, 0x1.0f9244p-3, -0x1.4894c4p+0, 0x1.f8ac6ep-1, 0x1.89b05p-1, 0x1.534ce8p-1, 0x1.bdc90cp-4, -0x1.1dc56p+0, -0x1.5e085ep-2, 0x1.3ec72cp-2, -0x1.096134p-1, -0x1.009f4ep-2, 0x1.747e74p-4, -0x1.f7b7c2p-10, 0x1.055e6cp-1, 0x1.3eef5ep+0, 0x1.10727p-1, 0x1.22e6a8p+0, -0x1.afb738p-2, 0x1.0fff4cp+0, 0x1.a074c4p-2, -0x1.68baf8p-2, 0x1.fa5fcp-1, -0x1.47bffep+0, -0x1.27a9dcp+0, -0x1.f1983cp-2, -0x1.bb88d8p-3, -0x1.1bd59p-2, 0x1.e31006p-3, 0x1.a577ecp-3, 0x1.7ef9d2p-4, 0x1.24419cp-8, 0x1.1bafc4p-1, 0x1.33c39ep-3)]
# {OUT} Y_N = [f1:(-0x1.4267ep-4, 0x1.6ce7fp-2, 0x1.90c282p-1, 0x1.422d5p-2, -0x1.3e9a32p-6, 0x1.8e6b76p-3, -0x1.bd3dep-4, -0x1.26c6ap-1, -0x1.1999bp+1, -0x1.617d2ap+0, 0x1.248d14p-4, 0x1.d09e3ep-1, -0x1.d57f3p-1, -0x1.ad413ep-3, 0x1.013ad4p-1, 0x1.f28a8ep+0, -0x1.d4f1ap-5, -0x1.670ef4p-2, -0x1.b7d41p-6, 0x1.ea44f8p-2, -0x1.0d108ap+0, -0x1.087be8p-1, 0x1.062e38p-4, -0x1.b49d7ep-2, 0x1.f596a8p-2, 0x1.f1d10ep-3, 0x1.fa7748p-1, -0x1.50cdp-2, -0x1.ffdd04p-4, 0x1.967ba4p+0, 0x1.4f741p-4, -0x1.6ec7f8p+0, 0x1.206938p-1, 0x1.4dbb3p+0, -0x1.718248p-1, 0x1.57e3bp-6, 0x1.5c9fe2p-2, 0x1.900e2ap+0, -0x1.94da04p-1, -0x1.a0634ap-1, 0x1.ac85eap-1, -0x1.d97f9ep-1, 0x1.082518p-1, -0x1.220ed8p-1, -0x1.089a6cp-1, -0x1.58c00cp-4, -0x1.2c4de8p-1, 0x1.35dccp-6),
#              f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Modem_SCMA::filter(const float32 Y_N1[6x48], float32 Y_N2[6x48])
# {IN}  Y_N1 = [f1:(-0x1.4267ep-4, 0x1.6ce7fp-2, 0x1.90c282p-1, 0x1.422d5p-2, -0x1.3e9a32p-6, 0x1.8e6b76p-3, -0x1.bd3dep-4, -0x1.26c6ap-1, -0x1.1999bp+1, -0x1.617d2ap+0, 0x1.248d14p-4, 0x1.d09e3ep-1, -0x1.d57f3p-1, -0x1.ad413ep-3, 0x1.013ad4p-1, 0x1.f28a8ep+0, -0x1.d4f1ap-5, -0x1.670ef4p-2, -0x1.b7d41p-6, 0x1.ea44f8p-2, -0x1.0d108ap+0, -0x1.087be8p-1, 0x1.062e38p-4, -0x1.b49d7ep-2, 0x1.f596a8p-2, 0x1.f1d10ep-3, 0x1.fa7748p-1, -0x1.50cdp-2, -0x1.ffdd04p-4, 0x1.967ba4p+0, 0x1.4f741p-4, -0x1.6ec7f8p+0, 0x1.206938p-1, 0x1.4dbb3p+0, -0x1.718248p-1, 0x1.57e3bp-6, 0x1.5c9fe2p-2, 0x1.900e2ap+0, -0x1.94da04p-1, -0x1.a0634ap-1, 0x1.ac85eap-1, -0x1.d97f9ep-1, 0x1.082518p-1, -0x1.220ed8p-1, -0x1.089a6cp-1, -0x1.58c00cp-4, -0x1.2c4de8p-1, 0x1.35dccp-6),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# {OUT} Y_N2 = [f1:(-0x1.4267ep-4, 0x1.6ce7fp-2, 0x1.90c282p-1, 0x1.422d5p-2, -0x1.3e9a32p-6, 0x1.8e6b76p-3, -0x1.bd3dep-4, -0x1.26c6ap-1, -0x1.1999bp+1, -0x1.617d2ap+0, 0x1.248d14p-4, 0x1.d09e3ep-1, -0x1.d57f3p-1, -0x1.ad413ep-3, 0x1.013ad4p-1, 0x1.f28a8ep+0, -0x1.d4f1ap-5, -0x1.670ef4p-2, -0x1.b7d41p-6, 0x1.ea44f8p-2, -0x1.0d108ap+0, -0x1.087be8p-1, 0x1.062e38p-4, -0x1.b49d7ep-2, 0x1.f596a8p-2, 0x1.f1d10ep-3, 0x1.fa7748p-1, -0x1.50cdp-2, -0x1.ffdd04p-4, 0x1.967ba4p+0, 0x1.4f741p-4, -0x1.6ec7f8p+0, 0x1.206938p-1, 0x1.4dbb3p+0, -0x1.718248p-1, 0x1.57e3bp-6, 0x1.5c9fe2p-2, 0x1.900e2ap+0, -0x1.94da04p-1, -0x1.a0634ap-1, 0x1.ac85eap-1, -0x1.d97f9ep-1, 0x1.082518p-1, -0x1.220ed8p-1, -0x1.089a6cp-1, -0x1.58c00cp-4, -0x1.2c4de8p-1, 0x1.35dccp-6),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Modem_SCMA::demodulate_wg(const float32 H_N[6x48], const float32 Y_N1[6x48], float32 Y_N2[6x12])
# {IN}  H_N  = [f1:(0x1.36bd1ap+0, 0x1.5b640ap-1, 0x1.e49db2p-7, 0x1.3b0b7ep-6, -0x1.ba01b4p-1, 0x1.8e71ecp+0, 0x1.0888d4p+0, -0x1.de000ap-3, 0x1.6b498cp-1, -0x1.4a56dep-1, 0x1.48d8f4p+0, 0x1.1acdd6p-1, 0x1.f9ca5ep-4, 0x1.3ca0a4p-5, -0x1.20dbbp-1, -0x1.298c3ap-2, 0x1.94b338p+0, 0x1.cf5356p-3, -0x1.bb5e5cp-1, 0x1.d248b2p-4, -0x1.b724dcp-8, 0x1.952eaap-4, 0x1.e9e1dcp-3, 0x1.c5b45ep-6, -0x1.bf732cp-3, 0x1.57b43ep+0, 0x1.fdc7d6p-1, -0x1.2d781ap-2, -0x1.1bf072p+0, 0x1.af6666p-1, 0x1.d3905cp-3, -0x1.ba23f8p+0, -0x1.7861ccp-2, 0x1.782084p+0, 0x1.606dcep-2, 0x1.a697dap-1, -0x1.2cb772p-3, -0x1.20bc82p-3, 0x1.016166p-1, -0x1.edc558p-2, 0x1.988b86p-2, 0x1.604cf4p-1, 0x1.1072c2p-1, 0x1.f929d2p-3, 0x1.88fd08p-2, 0x1.67f44ap-1, 0x1.d5acdp-1, 0x1.c5451ep-1),
#               f2:(-0x1.8d118ap-1, -0x1.1278d8p-5, 0x1.0c1b12p-2, -0x1.2827bap-3, -0x1.10a214p-1, -0x1.de1a6cp-2, -0x1.7c8d1p-2, -0x1.7f157ap-2, -0x1.8d971ep+0, -0x1.422c96p+0, 0x1.f37a6ep-3, -0x1.7f638ap-2, 0x1.09c762p-1, 0x1.4d8eeep-1, 0x1.af4daap-1, 0x1.8c8a0ap-2, -0x1.6154a2p-4, -0x1.58218ep-2, 0x1.f8e54cp-1, -0x1.d871dcp-2, 0x1.699c2ep-1, -0x1.2a088ap+0, -0x1.0704a2p-3, -0x1.01a46ep+0, 0x1.acd5a2p-2, 0x1.92febcp-4, 0x1.38db6p-2, -0x1.c9c9p-2, 0x1.19777ep-1, 0x1.7fa0aap-2, 0x1.9056f6p-1, 0x1.1fe248p-3, 0x1.67b3c4p-1, -0x1.4b33p-3, -0x1.cf07f4p-2, 0x1.0b0a54p-1, 0x1.6aaebp-2, 0x1.9e04bp-3, -0x1.001f08p-6, -0x1.1f6426p+0, 0x1.5eeff2p-1, -0x1.bb2efcp-1, 0x1.6f8cfcp-2, -0x1.881c26p-4, 0x1.9540eap-3, -0x1.096598p+0, 0x1.22a6e6p-3, 0x1.402292p-1),
#               f3:(-0x1.be57f8p-1, 0x1.a39f0ap-1, -0x1.427726p-1, -0x1.390cacp-2, -0x1.d7e6fep-3, 0x1.1583d4p-2, 0x1.0d0cfap+0, 0x1.200f22p+0, -0x1.a2e7f8p-6, -0x1.ba974cp-1, 0x1.54921ep-2, -0x1.89eabep+0, 0x1.f56b44p-3, -0x1.de8198p-2, 0x1.72982p-2, 0x1.e177fep-4, 0x1.606d28p-8, 0x1.96058cp+0, -0x1.b3600ap-5, -0x1.1e5e82p+0, 0x1.6040a4p-1, -0x1.457eap-3, -0x1.4a6106p-2, -0x1.a0d4a4p-1, -0x1.546df6p-1, -0x1.44964cp-1, 0x1.2264fcp+0, 0x1.6221f8p+0, 0x1.89f714p-5, -0x1.6f3c76p+0, -0x1.527312p-3, 0x1.9b2168p-3, 0x1.22e22ap-2, 0x1.c92e74p-2, -0x1.13bc0ep-1, 0x1.03a88cp+0, 0x1.db3022p-1, -0x1.c3d7cp-2, 0x1.7b72ap+0, 0x1.55ef06p+0, -0x1.ccc0f4p-2, -0x1.9b1c4ap-3, -0x1.3e9e2p-1, 0x1.3fee66p-3, -0x1.28b072p-1, 0x1.a7eaaep-2, -0x1.78255p+0, -0x1.cf5d56p-5),
#               f4:(0x1.d89bbap-1, 0x1.c89696p-2, -0x1.b79a84p-2, -0x1.627614p+0, 0x1.c2a84ap-2, -0x1.efe98p-2, 0x1.f117bap-1, -0x1.089a5ep+0, 0x1.57c3e8p-4, -0x1.dad664p-1, -0x1.e7ea1ap-1, -0x1.575f8p-4, 0x1.3cdacp+0, 0x1.f8e866p-4, 0x1.10902cp-1, -0x1.7c20cp-2, -0x1.0a426cp-1, -0x1.3e8ef8p+0, 0x1.2f62f8p+0, 0x1.700732p-3, 0x1.254cb8p-2, 0x1.cd410ep-4, -0x1.d89f7cp-2, 0x1.0b862cp-1, -0x1.f15e7cp-3, -0x1.244ea2p-5, 0x1.0d14d2p-3, 0x1.8b254ep+0, -0x1.39d022p-2, 0x1.ccd3f2p-1, 0x1.bde09ap-6, -0x1.b0b27ap-4, -0x1.437af6p-2, 0x1.54e5acp-2, 0x1.b7dc3cp+0, 0x1.a6d3b8p-3, 0x1.e2ff4ep-3, 0x1.585124p+0, 0x1.72fa56p-1, -0x1.353e2p-2, 0x1.9bd464p-2, 0x1.645d78p-4, 0x1.8146eep-2, 0x1.36574p-1, -0x1.1a9a7p-1, -0x1.9f1f82p-1, 0x1.a51a7p-2, 0x1.28e72p-1),
#               f5:(0x1.1a1ad2p-1, -0x1.dc334p-1, -0x1.42954ap-5, -0x1.bb0d5cp-5, -0x1.f62598p-1, -0x1.336ecep-1, 0x1.0405e4p+0, 0x1.92b0aep-1, 0x1.6fffa2p-2, 0x1.4acdd2p-1, 0x1.4dff78p-1, -0x1.d86cfap-2, -0x1.ef0c78p-3, 0x1.33288ep-3, -0x1.1b5b9ep+0, 0x1.beeb1ap+0, -0x1.d29faap-1, 0x1.bf445cp-2, 0x1.747abp-1, -0x1.61a2fep-3, -0x1.14bf7ap+0, 0x1.ef577ap-1, -0x1.2c8a28p-1, 0x1.5cd1cp+0, 0x1.32aa8ap-2, -0x1.eaa7aap-1, -0x1.76f394p-5, 0x1.6e1c8cp-1, -0x1.e6ba2ap-3, 0x1.9f108p-1, 0x1.7e62b4p-5, 0x1.75fa42p-1, -0x1.564d16p+0, 0x1.e23adp-2, -0x1.01642ap-2, 0x1.688074p-3, 0x1.66f3aep-4, -0x1.526698p-4, -0x1.1c0cfcp+0, -0x1.f14214p-1, -0x1.a5f2a8p-2, -0x1.0c0a4cp+0, 0x1.531bbp-2, -0x1.932fb6p-2, 0x1.475b24p+0, -0x1.e941b4p-2, 0x1.38cca8p-1, 0x1.73c846p-1),
#               f6:(-0x1.eea16cp-3, -0x1.2dcd9cp-3, -0x1.e7b36cp-2, -0x1.97776p-3, -0x1.4daea8p+0, 0x1.08e116p-1, -0x1.1a9298p+0, -0x1.d965fep-1, -0x1.ddac1cp-6, 0x1.c5af38p-3, -0x1.274da2p-2, 0x1.96dc62p-1, -0x1.24b196p-1, 0x1.960c0ap-1, 0x1.132b5cp+0, 0x1.0f9244p-3, -0x1.4894c4p+0, 0x1.f8ac6ep-1, 0x1.89b05p-1, 0x1.534ce8p-1, 0x1.bdc90cp-4, -0x1.1dc56p+0, -0x1.5e085ep-2, 0x1.3ec72cp-2, -0x1.096134p-1, -0x1.009f4ep-2, 0x1.747e74p-4, -0x1.f7b7c2p-10, 0x1.055e6cp-1, 0x1.3eef5ep+0, 0x1.10727p-1, 0x1.22e6a8p+0, -0x1.afb738p-2, 0x1.0fff4cp+0, 0x1.a074c4p-2, -0x1.68baf8p-2, 0x1.fa5fcp-1, -0x1.47bffep+0, -0x1.27a9dcp+0, -0x1.f1983cp-2, -0x1.bb88d8p-3, -0x1.1bd59p-2, 0x1.e31006p-3, 0x1.a577ecp-3, 0x1.7ef9d2p-4, 0x1.24419cp-8, 0x1.1bafc4p-1, 0x1.33c39ep-3)]
# {IN}  Y_N1 = [f1:(-0x1.4267ep-4, 0x1.6ce7fp-2, 0x1.90c282p-1, 0x1.422d5p-2, -0x1.3e9a32p-6, 0x1.8e6b76p-3, -0x1.bd3dep-4, -0x1.26c6ap-1, -0x1.1999bp+1, -0x1.617d2ap+0, 0x1.248d14p-4, 0x1.d09e3ep-1, -0x1.d57f3p-1, -0x1.ad413ep-3, 0x1.013ad4p-1, 0x1.f28a8ep+0, -0x1.d4f1ap-5, -0x1.670ef4p-2, -0x1.b7d41p-6, 0x1.ea44f8p-2, -0x1.0d108ap+0, -0x1.087be8p-1, 0x1.062e38p-4, -0x1.b49d7ep-2, 0x1.f596a8p-2, 0x1.f1d10ep-3, 0x1.fa7748p-1, -0x1.50cdp-2, -0x1.ffdd04p-4, 0x1.967ba4p+0, 0x1.4f741p-4, -0x1.6ec7f8p+0, 0x1.206938p-1, 0x1.4dbb3p+0, -0x1.718248p-1, 0x1.57e3bp-6, 0x1.5c9fe2p-2, 0x1.900e2ap+0, -0x1.94da04p-1, -0x1.a0634ap-1, 0x1.ac85eap-1, -0x1.d97f9ep-1, 0x1.082518p-1, -0x1.220ed8p-1, -0x1.089a6cp-1, -0x1.58c00cp-4, -0x1.2c4de8p-1, 0x1.35dccp-6),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# {OUT} Y_N2 = [f1:(0x1.22e1cp-1, 0x1.940f5p-2, -0x1.a535bcp+1, -0x1.d47962p+1, 0x1.53b6dp-2, -0x1.a3cacp-3, 0x1.8f9ff6p+3, 0x1.686e44p+2, 0x1.04d0d4p+1, -0x1.ee67bp+0, -0x1.a62e1cp+0, -0x1.008a1cp+0),
#               f2:(0x1.0bccp-8, 0x1.192418p-1, 0x1.924dfap+4, 0x1.2a4abcp+3, 0x1.520864p+0, 0x1.575b24p+1, 0x1.039c6cp+1, -0x1.051688p+2, 0x1.0dcd3p+0, -0x1.3e4458p+0, 0x1.02d9bap+2, 0x1.dd35b4p+2),
#               f3:(-0x1.da48p-5, -0x1.7c58d8p+1, -0x1.69deaep+2, -0x1.2ee572p+2, 0x1.5ed14p-3, -0x1.d6284p-1, -0x1.967c46p+1, 0x1.c0a992p+2, 0x1.4d063p-1, -0x1.e8e214p+1, 0x1.7e8724p+0, -0x1.afed28p+1),
#               f4:(-0x1.15da58p+0, 0x1.1f19dep+1, -0x1.c0f5f4p+2, -0x1.d2e97p+1, -0x1.d65a2p-1, 0x1.0a28ap-2, 0x1.030cccp+3, 0x1.ba1f7cp+1, -0x1.d516p-6, 0x1.21373ep+3, 0x1.354694p+2, -0x1.bf3678p+0),
#               f5:(-0x1.fa432p-2, -0x1.8ea1ap-2, -0x1.33e3b2p+4, -0x1.72a082p+3, 0x1.ec72acp+0, 0x1.057dp-5, 0x1.5d90c6p+1, -0x1.8487p+1, -0x1.ee7ae8p+3, 0x1.3b0f8p+3, -0x1.cdc07p-2, -0x1.e46dbcp+0),
#               f6:(-0x1.f028ap+1, -0x1.27eb58p+0, 0x1.cd345ap+1, 0x1.998c86p+1, -0x1.2ed878p+0, 0x1.8e0a38p+2, 0x1.6edd8p-3, 0x1.d2008p-3, 0x1.05816p-2, -0x1.48702p+2, 0x1.3f06ep-2, 0x1.8e5ap-5)]
# Returned status: 0
#
# Quantizer_standard::process(const float32 Y_N1[6x12], int8 Y_N2[6x12])
# {IN}  Y_N1 = [f1:(0x1.22e1cp-1, 0x1.940f5p-2, -0x1.a535bcp+1, -0x1.d47962p+1, 0x1.53b6dp-2, -0x1.a3cacp-3, 0x1.8f9ff6p+3, 0x1.686e44p+2, 0x1.04d0d4p+1, -0x1.ee67bp+0, -0x1.a62e1cp+0, -0x1.008a1cp+0),
#               f2:(0x1.0bccp-8, 0x1.192418p-1, 0x1.924dfap+4, 0x1.2a4abcp+3, 0x1.520864p+0, 0x1.575b24p+1, 0x1.039c6cp+1, -0x1.051688p+2, 0x1.0dcd3p+0, -0x1.3e4458p+0, 0x1.02d9bap+2, 0x1.dd35b4p+2),
#               f3:(-0x1.da48p-5, -0x1.7c58d8p+1, -0x1.69deaep+2, -0x1.2ee572p+2, 0x1.5ed14p-3, -0x1.d6284p-1, -0x1.967c46p+1, 0x1.c0a992p+2, 0x1.4d063p-1, -0x1.e8e214p+1, 0x1.7e8724p+0, -0x1.afed28p+1),
#               f4:(-0x1.15da58p+0, 0x1.1f19dep+1, -0x1.c0f5f4p+2, -0x1.d2e97p+1, -0x1.d65a2p-1, 0x1.0a28ap-2, 0x1.030cccp+3, 0x1.ba1f7cp+1, -0x1.d516p-6, 0x1.21373ep+3, 0x1.354694p+2, -0x1.bf3678p+0),
#               f5:(-0x1.fa432p-2, -0x1.8ea1ap-2, -0x1.33e3b2p+4, -0x1.72a082p+3, 0x1.ec72acp+0, 0x1.057dp-5, 0x1.5d90c6p+1, -0x1.8487p+1, -0x1.ee7ae8p+3, 0x1.3b0f8p+3, -0x1.cdc07p-2, -0x1.e46dbcp+0),
#               f6:(-0x1.f028ap+1, -0x1.27eb58p+0, 0x1.cd345ap+1, 0x1.998c86p+1, -0x1.2ed878p+0, 0x1.8e0a38p+2, 0x1.6edd8p-3, 0x1.d2008p-3, 0x1.05816p-2, -0x1.48702p+2, 0x1.3f06ep-2, 0x1.8e5ap-5)]
# {OUT} Y_N2 = [f1:(0x5, 0x3, 0xffffffe6, 0xffffffe3, 0x3, 0xfffffffe, 0x64, 0x2d, 0x10, 0xfffffff1, 0xfffffff3, 0xfffffff8),
#               f2:(0x0, 0x4, 0x7f, 0x4b, 0xb, 0x15, 0x10, 0xffffffdf, 0x8, 0xfffffff6, 0x20, 0x3c),
#               f3:(0x0, 0xffffffe8, 0xffffffd3, 0xffffffda, 0x1, 0xfffffff9, 0xffffffe7, 0x38, 0x5, 0xffffffe1, 0xc, 0xffffffe5),
#               f4:(0xfffffff7, 0x12, 0xffffffc8, 0xffffffe3, 0xfffffff9, 0x2, 0x41, 0x1c, 0x0, 0x48, 0x27, 0xfffffff2),
#               f5:(0xfffffffc, 0xfffffffd, 0xffffff81, 0xffffffa3, 0xf, 0x0, 0x16, 0xffffffe8, 0xffffff84, 0x4f, 0xfffffffc, 0xfffffff1),
#               f6:(0xffffffe1, 0xfffffff7, 0x1d, 0x1a, 0xfffffff7, 0x32, 0x1, 0x2, 0x2, 0xffffffd7, 0x2, 0x0)]
# Returned status: 0
#
# Puncturer_NO::depuncture(const int8 Y_N1[6x12], int8 Y_N2[6x12])
# {IN}  Y_N1 = [f1:(0x5, 0x3, 0xffffffe6, 0xffffffe3, 0x3, 0xfffffffe, 0x64, 0x2d, 0x10, 0xfffffff1, 0xfffffff3, 0xfffffff8),
#               f2:(0x0, 0x4, 0x7f, 0x4b, 0xb, 0x15, 0x10, 0xffffffdf, 0x8, 0xfffffff6, 0x20, 0x3c),
#               f3:(0x0, 0xffffffe8, 0xffffffd3, 0xffffffda, 0x1, 0xfffffff9, 0xffffffe7, 0x38, 0x5, 0xffffffe1, 0xc, 0xffffffe5),
#               f4:(0xfffffff7, 0x12, 0xffffffc8, 0xffffffe3, 0xfffffff9, 0x2, 0x41, 0x1c, 0x0, 0x48, 0x27, 0xfffffff2),
#               f5:(0xfffffffc, 0xfffffffd, 0xffffff81, 0xffffffa3, 0xf, 0x0, 0x16, 0xffffffe8, 0xffffff84, 0x4f, 0xfffffffc, 0xfffffff1),
#               f6:(0xffffffe1, 0xfffffff7, 0x1d, 0x1a, 0xfffffff7, 0x32, 0x1, 0x2, 0x2, 0xffffffd7, 0x2, 0x0)]
# {OUT} Y_N2 = [f1:(0x5, 0x3, 0xffffffe6, 0xffffffe3, 0x3, 0xfffffffe, 0x64, 0x2d, 0x10, 0xfffffff1, 0xfffffff3, 0xfffffff8),
#               f2:(0x0, 0x4, 0x7f, 0x4b, 0xb, 0x15, 0x10, 0xffffffdf, 0x8, 0xfffffff6, 0x20, 0x3c),
#               f3:(0x0, 0xffffffe8, 0xffffffd3, 0xffffffda, 0x1, 0xfffffff9, 0xffffffe7, 0x38, 0x5, 0xffffffe1, 0xc, 0xffffffe5),
#               f4:(0xfffffff7, 0x12, 0xffffffc8, 0xffffffe3, 0xfffffff9, 0x2, 0x41, 0x1c, 0x0, 0x48, 0x27, 0xfffffff2),
#               f5:(0xfffffffc, 0xfffffffd, 0xffffff81, 0xffffffa3, 0xf, 0x0, 0x16, 0xffffffe8, 0xffffff84, 0x4f, 0xfffffffc, 0xfffffff1),
#               f6:(0xffffffe1, 0xfffffff7, 0x1d, 0x1a, 0xfffffff7, 0x32, 0x1, 0x2, 0x2, 0xffffffd7, 0x2, 0x0)]
# Returned status: 0
#
# Decoder_NO::decode_siho(const int8 Y_N[6x12], int8 V_K[6x12])
# {IN}  Y_N = [f1:(0x5, 0x3, 0xffffffe6, 0xffffffe3, 0x3, 0xfffffffe, 0x64, 0x2d, 0x10, 0xfffffff1, 0xfffffff3, 0xfffffff8),
#              f2:(0x0, 0x4, 0x7f, 0x4b, 0xb, 0x15, 0x10, 0xffffffdf, 0x8, 0xfffffff6, 0x20, 0x3c),
#              f3:(0x0, 0xffffffe8, 0xffffffd3, 0xffffffda, 0x1, 0xfffffff9, 0xffffffe7, 0x38, 0x5, 0xffffffe1, 0xc, 0xffffffe5),
#              f4:(0xfffffff7, 0x12, 0xffffffc8, 0xffffffe3, 0xfffffff9, 0x2, 0x41, 0x1c, 0x0, 0x48, 0x27, 0xfffffff2),
#              f5:(0xfffffffc, 0xfffffffd, 0xffffff81, 0xffffffa3, 0xf, 0x0, 0x16, 0xffffffe8, 0xffffff84, 0x4f, 0xfffffffc, 0xfffffff1),
#              f6:(0xffffffe1, 0xfffffff7, 0x1d, 0x1a, 0xfffffff7, 0x32, 0x1, 0x2, 0x2, 0xffffffd7, 0x2, 0x0)]
# {OUT} V_K = [f1:(0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1),
#              f2:(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0),
#              f3:(0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#              f4:(0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1),
#              f5:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1),
#              f6:(0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0)]
# Returned status: 0
#
# CRC_NO::extract(const int8 V_K1[6x12], int8 V_K2[6x12])
# {IN}  V_K1 = [f1:(0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1),
#               f2:(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0),
#               f3:(0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#               f4:(0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1),
#               f5:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1),
#               f6:(0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0)]
# {OUT} V_K2 = [f1:(0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1),
#               f2:(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0),
#               f3:(0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#               f4:(0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1),
#               f5:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1),
#               f6:(0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0)]
# Returned status: 0
#
# Monitor_BFER::check_errors(const int8 U[6x12], const int8 V[6x12])
# {IN}  U = [f1:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1),
#            f2:(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0),
#            f3:(0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#            f4:(0x1, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1),
#            f5:(0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1),
#            f6:(0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0)]
# {IN}  V = [f1:(0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1),
#            f2:(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0),
#            f3:(0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#            f4:(0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1),
#            f5:(0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1),
#            f6:(0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0)]
# Returned status: 6
#
# -------------------------------
# New communication (nÂ°22)
# -------------------------------
#
# Source_random::generate(int8 U_K[6x12])
# {OUT} U_K = [f1:(0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0),
#              f2:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1),
#              f3:(0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0),
#              f4:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0),
#              f5:(0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1),
#              f6:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0)]
# Returned status: 0
#
# CRC_NO::build(const int8 U_K1[6x12], int8 U_K2[6x12])
# {IN}  U_K1 = [f1:(0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0),
#               f2:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1),
#               f3:(0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0),
#               f4:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0),
#               f5:(0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1),
#               f6:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0)]
# {OUT} U_K2 = [f1:(0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0),
#               f2:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1),
#               f3:(0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0),
#               f4:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0),
#               f5:(0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1),
#               f6:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0)]
# Returned status: 0
#
# Encoder_NO::encode(const int8 U_K[6x12], int8 X_N[6x12])
# {IN}  U_K = [f1:(0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0),
#              f2:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1),
#              f3:(0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0),
#              f4:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0),
#              f5:(0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1),
#              f6:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0)]
# {OUT} X_N = [f1:(0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0),
#              f2:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1),
#              f3:(0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0),
#              f4:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0),
#              f5:(0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1),
#              f6:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0)]
# Returned status: 0
#
# Puncturer_NO::puncture(const int8 X_N1[6x12], int8 X_N2[6x12])
# {IN}  X_N1 = [f1:(0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0),
#               f2:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1),
#               f3:(0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0),
#               f4:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0),
#               f5:(0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1),
#               f6:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0)]
# {OUT} X_N2 = [f1:(0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0),
#               f2:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1),
#               f3:(0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0),
#               f4:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0),
#               f5:(0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1),
#               f6:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0)]
# Returned status: 0
#
# Modem_SCMA::modulate(const int8 X_N1[6x12], float32 X_N2[6x48])
# {IN}  X_N1 = [f1:(0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0),
#               f2:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1),
#               f3:(0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0),
#               f4:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0),
#               f5:(0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1),
#               f6:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0)]
# {OUT} X_N2 = [f1:(0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0),
#               f2:(-0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0),
#               f3:(0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1),
#               f5:(0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2),
#               f6:(0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Channel_Rayleigh_LLR::add_noise_wg(const float32 X_N[6x48], float32 H_N[6x48], float32 Y_N[6x48])
# {IN}  X_N = [f1:(0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0),
#              f2:(-0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0),
#              f3:(0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1),
#              f5:(0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2),
#              f6:(0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0)]
# {OUT} H_N = [f1:(0x1.22285ap-10, 0x1.0602d4p-4, -0x1.b2e552p-3, 0x1.0883fap+0, -0x1.bc66fcp-4, -0x1.834cb6p-2, 0x1.044b3ep-3, -0x1.be36c4p-5, -0x1.3e1af4p-1, 0x1.a2bf9p-2, 0x1.405bf8p-2, -0x1.31f8p+0, -0x1.d9145ep-4, -0x1.9bd8cep-2, 0x1.d6b26p+0, -0x1.f1c1bep-1, 0x1.4892cep-2, 0x1.d482e8p-2, 0x1.0f0bdp-2, 0x1.7410a2p-2, 0x1.cc28f8p-2, -0x1.16ddccp-7, 0x1.901f0cp-2, 0x1.14c858p-4, 0x1.24c546p-2, -0x1.4f349ep-1, -0x1.0e6558p+0, -0x1.ad8014p-3, 0x1.1fbb48p-5, 0x1.625d2cp-2, 0x1.7d266ap+0, 0x1.1592b6p-2, 0x1.afe2d4p-3, -0x1.8c322p-2, 0x1.41958p+0, -0x1.af746cp-2, -0x1.575bcep-3, -0x1.3b8c3ap-1, -0x1.b53cbcp-3, 0x1.2c7adep-2, 0x1.86d528p-3, -0x1.655332p-5, -0x1.b407a8p-2, -0x1.839b9cp-1, 0x1.347446p-5, 0x1.2b78fp+0, 0x1.02a59p-1, 0x1.200a14p-2),
#              f2:(-0x1.01a99ap-4, -0x1.f9218ap-3, -0x1.564a06p-3, -0x1.e1ea4ap-3, 0x1.edfebp-4, -0x1.5ec8acp-1, 0x1.ab12cp-1, -0x1.78803cp-3, -0x1.7c0d46p-1, 0x1.67af6ep-5, 0x1.f206bcp+0, -0x1.dc1322p-1, -0x1.8d79d6p-1, -0x1.9cee5ap-3, 0x1.0e009ap+0, 0x1.47775ep-1, -0x1.c29944p-1, -0x1.96dff8p-3, -0x1.2f2664p-2, 0x1.b01f36p-1, -0x1.ac2704p-2, -0x1.2eb078p-1, 0x1.8b5614p-1, -0x1.f4f342p-2, 0x1.0563ccp-1, 0x1.fc2aa4p-2, 0x1.85018cp-2, 0x1.76f4ccp-5, 0x1.876c24p-2, -0x1.6dfb8ap-3, 0x1.e44f1cp-1, 0x1.ac2228p-1, -0x1.cb11dap-3, -0x1.004242p-1, -0x1.99341cp-1, 0x1.4ea31ap-1, -0x1.3b0076p-2, 0x1.6806d4p+0, -0x1.b6b90ap-1, -0x1.ba5b2ep-1, -0x1.676d24p-3, 0x1.2a5422p-1, -0x1.5cc48cp-4, 0x1.a95b8ap-3, 0x1.3374f2p-5, 0x1.3ce2dep-1, -0x1.cf252ap-2, 0x1.a03698p+0),
#              f3:(0x1.ec8bc6p-2, -0x1.2a309ap+0, -0x1.0470fcp-2, -0x1.c2964p-5, -0x1.246886p-1, -0x1.5494c4p+0, 0x1.3e5e74p+0, 0x1.0ed6c4p-2, -0x1.85e002p-2, 0x1.61f7dp-1, 0x1.076a1p-2, 0x1.cb87d2p-1, -0x1.2f4e0ep-1, -0x1.2ebb3ep-1, -0x1.17e194p-3, -0x1.541e2cp+0, 0x1.504874p-1, 0x1.4ea39ap+0, -0x1.d2183ap-4, 0x1.73eaa6p-1, 0x1.2aed74p-2, 0x1.0fa866p-2, -0x1.8a403ep-2, 0x1.0c582cp-5, -0x1.742e54p-1, -0x1.6f628ap+0, 0x1.75a9fap-5, 0x1.1d81bcp-1, 0x1.6e9116p-5, 0x1.53eacep-1, -0x1.f476bcp-7, 0x1.6771a8p+0, 0x1.1a6016p+0, -0x1.09e3b4p-1, 0x1.9ed852p-1, 0x1.bcdee4p-2, -0x1.2c2b84p+0, -0x1.9c7112p-2, -0x1.f8243ep-2, 0x1.ca2ce4p-5, -0x1.fa8d4p-2, 0x1.52371ap-1, -0x1.ee8f06p-4, 0x1.4866c4p-2, -0x1.1c793ep-3, -0x1.21426cp-4, 0x1.aa8c0cp-1, 0x1.c7cfcap-3),
#              f4:(-0x1.cc08a4p-1, -0x1.bc7b36p-2, 0x1.d2ff4ep-3, -0x1.1375f6p-2, -0x1.d3f692p-1, -0x1.6cb94cp-1, 0x1.18e8cap-1, 0x1.c2d0bap-4, -0x1.ba3716p-1, -0x1.cb68ap+0, 0x1.dad05cp-2, 0x1.a31d8p-1, -0x1.49a73ap-1, 0x1.c1e3f2p-4, 0x1.0cb7b6p-2, 0x1.f0b4bp-1, -0x1.0c3002p-3, -0x1.076eep-3, 0x1.88478ep-2, -0x1.4a272ep-3, 0x1.0b80eep-2, -0x1.c11866p-3, -0x1.18d46p-1, -0x1.48081ap+0, 0x1.83bda6p+0, 0x1.ce7fbap-5, -0x1.81bc18p-2, -0x1.319fdp-1, 0x1.981eacp+0, -0x1.e65e6cp-4, 0x1.001c12p-1, 0x1.509b3ap-1, 0x1.391044p-7, -0x1.54c6e8p-2, 0x1.8cc1f8p-1, 0x1.38e848p-1, 0x1.77b42p-1, 0x1.bf0d88p-3, -0x1.90098ep-1, 0x1.4d3708p-1, -0x1.f75708p-8, 0x1.6bbfbep-1, -0x1.615cb4p-1, 0x1.f92d32p+0, -0x1.0a26p-2, -0x1.1a76ccp+0, 0x1.070904p-1, 0x1.aca606p-1),
#              f5:(0x1.f13a86p-1, -0x1.3387cap-3, 0x1.1adc92p-2, 0x1.284b34p-2, -0x1.813208p-1, -0x1.7c2fbp+0, -0x1.90e048p-2, 0x1.4a852cp-9, 0x1.565fdep-1, -0x1.99a882p-2, -0x1.e80eaap-1, -0x1.1a6b4ap+0, -0x1.a6d562p-2, -0x1.5abecep-1, -0x1.d9f334p-1, 0x1.ae30acp+0, 0x1.00e536p-4, 0x1.280d04p-4, -0x1.758df6p+0, -0x1.578926p-1, 0x1.f730d8p-2, -0x1.deb87cp+0, 0x1.9d1256p-1, -0x1.7c567p+0, -0x1.eb6d66p-1, 0x1.fd4856p-6, 0x1.c6e134p-2, 0x1.7bf038p-5, 0x1.098e36p+0, 0x1.249adp-2, -0x1.4b192cp-1, -0x1.1096a4p-5, -0x1.c0f58cp-1, -0x1.b9911ep-2, 0x1.0d5d86p-4, -0x1.5d4bf4p-2, 0x1.f86e3ap-3, -0x1.8ec446p-4, -0x1.b6b3d8p-1, -0x1.58dcb8p+0, 0x1.ec0556p-3, -0x1.14fbe4p+0, 0x1.06c274p+0, 0x1.37de54p-6, -0x1.658a8ep-1, 0x1.54e32ep+0, 0x1.234eb4p-1, -0x1.b48dfp-2),
#              f6:(-0x1.50dda2p-1, 0x1.d1c986p-2, -0x1.51eb2ep-3, -0x1.c33064p-1, 0x1.0307ccp-1, 0x1.13a034p+0, 0x1.f66d4p-1, 0x1.91d0c6p-4, 0x1.1c7bb8p-1, -0x1.d94b4cp-2, 0x1.b518e2p-1, -0x1.7be686p-2, -0x1.c0e2eap-3, 0x1.53cfdap-2, -0x1.02ff48p+0, 0x1.b018fcp-2, -0x1.7db4ecp-2, 0x1.0bdfecp-1, 0x1.65d2b8p-1, -0x1.7b1958p-1, -0x1.a1bd7ap-2, 0x1.9241dcp-1, 0x1.bc19aep-4, -0x1.ceccd2p-2, -0x1.bce486p-2, 0x1.cb998ap-3, -0x1.4dc308p+0, 0x1.31baeep+1, 0x1.50b9e8p-3, -0x1.9dbccp-5, 0x1.d5423cp-2, 0x1.6e1b4ep-1, -0x1.1cf5cp-2, 0x1.ad823ap-2, 0x1.012f7p-1, -0x1.14d5e4p-2, -0x1.7cddcep-4, 0x1.41153cp-5, -0x1.484a0ap-2, -0x1.e901bp-1, -0x1.d60a1ap-2, -0x1.1d8p-1, 0x1.817a2ap-1, -0x1.3dd95p-3, 0x1.ca6c36p-2, 0x1.8f4ccp-2, -0x1.c8c5c6p-1, 0x1.8303c4p-6)]
# {OUT} Y_N = [f1:(0x1.06242ep-2, -0x1.08799p-6, 0x1.08eb4ap-1, -0x1.f1bfp-4, 0x1.421c5p-1, 0x1.97cdp-1, 0x1.c6c5ecp-4, 0x1.4e7d9cp-5, -0x1.76ae8p-3, -0x1.8653d8p-2, 0x1.1485e8p-1, -0x1.f027dep-1, 0x1.f3131p-7, 0x1.3cf40ep-1, 0x1.1e8634p-1, -0x1.b5969cp+0, 0x1.540266p+0, 0x1.9ae1b2p-2, -0x1.161b7cp-1, 0x1.5a7p-1, 0x1.abe07p-5, -0x1.02653ap-1, 0x1.c5b37p-3, 0x1.39e23p+0, 0x1.7fb902p+0, 0x1.c5dbcap+0, 0x1.61004ep+0, -0x1.dcce46p+0, 0x1.7ad054p-1, -0x1.a83fccp-3, 0x1.48dda6p+0, 0x1.08f1e8p-1, 0x1.b3e512p-1, -0x1.7f415p+0, -0x1.e276bp-1, 0x1.be4534p-4, 0x1.8dc98ep+0, -0x1.fb9f4ep-2, 0x1.cae44ap-3, 0x1.8cd7a2p-1, 0x1.582618p-4, -0x1.0e20e6p+0, 0x1.9e4edp-1, 0x1.13720cp+0, -0x1.43ef4ep-3, 0x1.d2a8d2p-3, 0x1.623766p-1, -0x1.762ca8p-1),
#              f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Modem_SCMA::filter(const float32 Y_N1[6x48], float32 Y_N2[6x48])
# {IN}  Y_N1 = [f1:(0x1.06242ep-2, -0x1.08799p-6, 0x1.08eb4ap-1, -0x1.f1bfp-4, 0x1.421c5p-1, 0x1.97cdp-1, 0x1.c6c5ecp-4, 0x1.4e7d9cp-5, -0x1.76ae8p-3, -0x1.8653d8p-2, 0x1.1485e8p-1, -0x1.f027dep-1, 0x1.f3131p-7, 0x1.3cf40ep-1, 0x1.1e8634p-1, -0x1.b5969cp+0, 0x1.540266p+0, 0x1.9ae1b2p-2, -0x1.161b7cp-1, 0x1.5a7p-1, 0x1.abe07p-5, -0x1.02653ap-1, 0x1.c5b37p-3, 0x1.39e23p+0, 0x1.7fb902p+0, 0x1.c5dbcap+0, 0x1.61004ep+0, -0x1.dcce46p+0, 0x1.7ad054p-1, -0x1.a83fccp-3, 0x1.48dda6p+0, 0x1.08f1e8p-1, 0x1.b3e512p-1, -0x1.7f415p+0, -0x1.e276bp-1, 0x1.be4534p-4, 0x1.8dc98ep+0, -0x1.fb9f4ep-2, 0x1.cae44ap-3, 0x1.8cd7a2p-1, 0x1.582618p-4, -0x1.0e20e6p+0, 0x1.9e4edp-1, 0x1.13720cp+0, -0x1.43ef4ep-3, 0x1.d2a8d2p-3, 0x1.623766p-1, -0x1.762ca8p-1),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# {OUT} Y_N2 = [f1:(0x1.06242ep-2, -0x1.08799p-6, 0x1.08eb4ap-1, -0x1.f1bfp-4, 0x1.421c5p-1, 0x1.97cdp-1, 0x1.c6c5ecp-4, 0x1.4e7d9cp-5, -0x1.76ae8p-3, -0x1.8653d8p-2, 0x1.1485e8p-1, -0x1.f027dep-1, 0x1.f3131p-7, 0x1.3cf40ep-1, 0x1.1e8634p-1, -0x1.b5969cp+0, 0x1.540266p+0, 0x1.9ae1b2p-2, -0x1.161b7cp-1, 0x1.5a7p-1, 0x1.abe07p-5, -0x1.02653ap-1, 0x1.c5b37p-3, 0x1.39e23p+0, 0x1.7fb902p+0, 0x1.c5dbcap+0, 0x1.61004ep+0, -0x1.dcce46p+0, 0x1.7ad054p-1, -0x1.a83fccp-3, 0x1.48dda6p+0, 0x1.08f1e8p-1, 0x1.b3e512p-1, -0x1.7f415p+0, -0x1.e276bp-1, 0x1.be4534p-4, 0x1.8dc98ep+0, -0x1.fb9f4ep-2, 0x1.cae44ap-3, 0x1.8cd7a2p-1, 0x1.582618p-4, -0x1.0e20e6p+0, 0x1.9e4edp-1, 0x1.13720cp+0, -0x1.43ef4ep-3, 0x1.d2a8d2p-3, 0x1.623766p-1, -0x1.762ca8p-1),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Modem_SCMA::demodulate_wg(const float32 H_N[6x48], const float32 Y_N1[6x48], float32 Y_N2[6x12])
# {IN}  H_N  = [f1:(0x1.22285ap-10, 0x1.0602d4p-4, -0x1.b2e552p-3, 0x1.0883fap+0, -0x1.bc66fcp-4, -0x1.834cb6p-2, 0x1.044b3ep-3, -0x1.be36c4p-5, -0x1.3e1af4p-1, 0x1.a2bf9p-2, 0x1.405bf8p-2, -0x1.31f8p+0, -0x1.d9145ep-4, -0x1.9bd8cep-2, 0x1.d6b26p+0, -0x1.f1c1bep-1, 0x1.4892cep-2, 0x1.d482e8p-2, 0x1.0f0bdp-2, 0x1.7410a2p-2, 0x1.cc28f8p-2, -0x1.16ddccp-7, 0x1.901f0cp-2, 0x1.14c858p-4, 0x1.24c546p-2, -0x1.4f349ep-1, -0x1.0e6558p+0, -0x1.ad8014p-3, 0x1.1fbb48p-5, 0x1.625d2cp-2, 0x1.7d266ap+0, 0x1.1592b6p-2, 0x1.afe2d4p-3, -0x1.8c322p-2, 0x1.41958p+0, -0x1.af746cp-2, -0x1.575bcep-3, -0x1.3b8c3ap-1, -0x1.b53cbcp-3, 0x1.2c7adep-2, 0x1.86d528p-3, -0x1.655332p-5, -0x1.b407a8p-2, -0x1.839b9cp-1, 0x1.347446p-5, 0x1.2b78fp+0, 0x1.02a59p-1, 0x1.200a14p-2),
#               f2:(-0x1.01a99ap-4, -0x1.f9218ap-3, -0x1.564a06p-3, -0x1.e1ea4ap-3, 0x1.edfebp-4, -0x1.5ec8acp-1, 0x1.ab12cp-1, -0x1.78803cp-3, -0x1.7c0d46p-1, 0x1.67af6ep-5, 0x1.f206bcp+0, -0x1.dc1322p-1, -0x1.8d79d6p-1, -0x1.9cee5ap-3, 0x1.0e009ap+0, 0x1.47775ep-1, -0x1.c29944p-1, -0x1.96dff8p-3, -0x1.2f2664p-2, 0x1.b01f36p-1, -0x1.ac2704p-2, -0x1.2eb078p-1, 0x1.8b5614p-1, -0x1.f4f342p-2, 0x1.0563ccp-1, 0x1.fc2aa4p-2, 0x1.85018cp-2, 0x1.76f4ccp-5, 0x1.876c24p-2, -0x1.6dfb8ap-3, 0x1.e44f1cp-1, 0x1.ac2228p-1, -0x1.cb11dap-3, -0x1.004242p-1, -0x1.99341cp-1, 0x1.4ea31ap-1, -0x1.3b0076p-2, 0x1.6806d4p+0, -0x1.b6b90ap-1, -0x1.ba5b2ep-1, -0x1.676d24p-3, 0x1.2a5422p-1, -0x1.5cc48cp-4, 0x1.a95b8ap-3, 0x1.3374f2p-5, 0x1.3ce2dep-1, -0x1.cf252ap-2, 0x1.a03698p+0),
#               f3:(0x1.ec8bc6p-2, -0x1.2a309ap+0, -0x1.0470fcp-2, -0x1.c2964p-5, -0x1.246886p-1, -0x1.5494c4p+0, 0x1.3e5e74p+0, 0x1.0ed6c4p-2, -0x1.85e002p-2, 0x1.61f7dp-1, 0x1.076a1p-2, 0x1.cb87d2p-1, -0x1.2f4e0ep-1, -0x1.2ebb3ep-1, -0x1.17e194p-3, -0x1.541e2cp+0, 0x1.504874p-1, 0x1.4ea39ap+0, -0x1.d2183ap-4, 0x1.73eaa6p-1, 0x1.2aed74p-2, 0x1.0fa866p-2, -0x1.8a403ep-2, 0x1.0c582cp-5, -0x1.742e54p-1, -0x1.6f628ap+0, 0x1.75a9fap-5, 0x1.1d81bcp-1, 0x1.6e9116p-5, 0x1.53eacep-1, -0x1.f476bcp-7, 0x1.6771a8p+0, 0x1.1a6016p+0, -0x1.09e3b4p-1, 0x1.9ed852p-1, 0x1.bcdee4p-2, -0x1.2c2b84p+0, -0x1.9c7112p-2, -0x1.f8243ep-2, 0x1.ca2ce4p-5, -0x1.fa8d4p-2, 0x1.52371ap-1, -0x1.ee8f06p-4, 0x1.4866c4p-2, -0x1.1c793ep-3, -0x1.21426cp-4, 0x1.aa8c0cp-1, 0x1.c7cfcap-3),
#               f4:(-0x1.cc08a4p-1, -0x1.bc7b36p-2, 0x1.d2ff4ep-3, -0x1.1375f6p-2, -0x1.d3f692p-1, -0x1.6cb94cp-1, 0x1.18e8cap-1, 0x1.c2d0bap-4, -0x1.ba3716p-1, -0x1.cb68ap+0, 0x1.dad05cp-2, 0x1.a31d8p-1, -0x1.49a73ap-1, 0x1.c1e3f2p-4, 0x1.0cb7b6p-2, 0x1.f0b4bp-1, -0x1.0c3002p-3, -0x1.076eep-3, 0x1.88478ep-2, -0x1.4a272ep-3, 0x1.0b80eep-2, -0x1.c11866p-3, -0x1.18d46p-1, -0x1.48081ap+0, 0x1.83bda6p+0, 0x1.ce7fbap-5, -0x1.81bc18p-2, -0x1.319fdp-1, 0x1.981eacp+0, -0x1.e65e6cp-4, 0x1.001c12p-1, 0x1.509b3ap-1, 0x1.391044p-7, -0x1.54c6e8p-2, 0x1.8cc1f8p-1, 0x1.38e848p-1, 0x1.77b42p-1, 0x1.bf0d88p-3, -0x1.90098ep-1, 0x1.4d3708p-1, -0x1.f75708p-8, 0x1.6bbfbep-1, -0x1.615cb4p-1, 0x1.f92d32p+0, -0x1.0a26p-2, -0x1.1a76ccp+0, 0x1.070904p-1, 0x1.aca606p-1),
#               f5:(0x1.f13a86p-1, -0x1.3387cap-3, 0x1.1adc92p-2, 0x1.284b34p-2, -0x1.813208p-1, -0x1.7c2fbp+0, -0x1.90e048p-2, 0x1.4a852cp-9, 0x1.565fdep-1, -0x1.99a882p-2, -0x1.e80eaap-1, -0x1.1a6b4ap+0, -0x1.a6d562p-2, -0x1.5abecep-1, -0x1.d9f334p-1, 0x1.ae30acp+0, 0x1.00e536p-4, 0x1.280d04p-4, -0x1.758df6p+0, -0x1.578926p-1, 0x1.f730d8p-2, -0x1.deb87cp+0, 0x1.9d1256p-1, -0x1.7c567p+0, -0x1.eb6d66p-1, 0x1.fd4856p-6, 0x1.c6e134p-2, 0x1.7bf038p-5, 0x1.098e36p+0, 0x1.249adp-2, -0x1.4b192cp-1, -0x1.1096a4p-5, -0x1.c0f58cp-1, -0x1.b9911ep-2, 0x1.0d5d86p-4, -0x1.5d4bf4p-2, 0x1.f86e3ap-3, -0x1.8ec446p-4, -0x1.b6b3d8p-1, -0x1.58dcb8p+0, 0x1.ec0556p-3, -0x1.14fbe4p+0, 0x1.06c274p+0, 0x1.37de54p-6, -0x1.658a8ep-1, 0x1.54e32ep+0, 0x1.234eb4p-1, -0x1.b48dfp-2),
#               f6:(-0x1.50dda2p-1, 0x1.d1c986p-2, -0x1.51eb2ep-3, -0x1.c33064p-1, 0x1.0307ccp-1, 0x1.13a034p+0, 0x1.f66d4p-1, 0x1.91d0c6p-4, 0x1.1c7bb8p-1, -0x1.d94b4cp-2, 0x1.b518e2p-1, -0x1.7be686p-2, -0x1.c0e2eap-3, 0x1.53cfdap-2, -0x1.02ff48p+0, 0x1.b018fcp-2, -0x1.7db4ecp-2, 0x1.0bdfecp-1, 0x1.65d2b8p-1, -0x1.7b1958p-1, -0x1.a1bd7ap-2, 0x1.9241dcp-1, 0x1.bc19aep-4, -0x1.ceccd2p-2, -0x1.bce486p-2, 0x1.cb998ap-3, -0x1.4dc308p+0, 0x1.31baeep+1, 0x1.50b9e8p-3, -0x1.9dbccp-5, 0x1.d5423cp-2, 0x1.6e1b4ep-1, -0x1.1cf5cp-2, 0x1.ad823ap-2, 0x1.012f7p-1, -0x1.14d5e4p-2, -0x1.7cddcep-4, 0x1.41153cp-5, -0x1.484a0ap-2, -0x1.e901bp-1, -0x1.d60a1ap-2, -0x1.1d8p-1, 0x1.817a2ap-1, -0x1.3dd95p-3, 0x1.ca6c36p-2, 0x1.8f4ccp-2, -0x1.c8c5c6p-1, 0x1.8303c4p-6)]
# {IN}  Y_N1 = [f1:(0x1.06242ep-2, -0x1.08799p-6, 0x1.08eb4ap-1, -0x1.f1bfp-4, 0x1.421c5p-1, 0x1.97cdp-1, 0x1.c6c5ecp-4, 0x1.4e7d9cp-5, -0x1.76ae8p-3, -0x1.8653d8p-2, 0x1.1485e8p-1, -0x1.f027dep-1, 0x1.f3131p-7, 0x1.3cf40ep-1, 0x1.1e8634p-1, -0x1.b5969cp+0, 0x1.540266p+0, 0x1.9ae1b2p-2, -0x1.161b7cp-1, 0x1.5a7p-1, 0x1.abe07p-5, -0x1.02653ap-1, 0x1.c5b37p-3, 0x1.39e23p+0, 0x1.7fb902p+0, 0x1.c5dbcap+0, 0x1.61004ep+0, -0x1.dcce46p+0, 0x1.7ad054p-1, -0x1.a83fccp-3, 0x1.48dda6p+0, 0x1.08f1e8p-1, 0x1.b3e512p-1, -0x1.7f415p+0, -0x1.e276bp-1, 0x1.be4534p-4, 0x1.8dc98ep+0, -0x1.fb9f4ep-2, 0x1.cae44ap-3, 0x1.8cd7a2p-1, 0x1.582618p-4, -0x1.0e20e6p+0, 0x1.9e4edp-1, 0x1.13720cp+0, -0x1.43ef4ep-3, 0x1.d2a8d2p-3, 0x1.623766p-1, -0x1.762ca8p-1),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# {OUT} Y_N2 = [f1:(-0x1.0f21c8p-1, 0x1.70d2eep+1, 0x1.8a10a6p+3, -0x1.29ccc8p+2, 0x1.8481bp-2, -0x1.50806p-3, 0x1.af5f0ap+3, 0x1.1d3b88p+3, 0x1.d12968p+0, 0x1.6afd9ep+2, -0x1.d7f7ep+1, 0x1.dddb96p+2),
#               f2:(-0x1.3cc1fp-1, 0x1.65af5cp+0, -0x1.e44702p+0, 0x1.f56374p+1, -0x1.abf998p-1, -0x1.53cd6cp+1, 0x1.1b0374p+1, 0x1.cc8168p+0, -0x1.1fbae2p+2, 0x1.64230cp+3, -0x1.efaap+0, -0x1.b4ec54p+0),
#               f3:(0x1.74767p-2, -0x1.1479cp-3, 0x1.c98316p+1, -0x1.cefebcp+0, -0x1.7b14aep+2, -0x1.f87408p-1, 0x1.a3189ep+3, 0x1.4edeb4p+2, -0x1.d3a264p+2, -0x1.745144p+2, 0x1.3a6044p+1, 0x1.cf1484p+1),
#               f4:(-0x1.86dfccp+0, -0x1.7e13e8p-1, 0x1.f6c81p+0, 0x1.e7e802p+1, 0x1.9d706p-2, 0x1.4e53cp-2, 0x1.60c73p+2, 0x1.2ba17cp+0, 0x1.309b6cp+2, 0x1.daca4cp+2, -0x1.0f34ecp+2, 0x1.3aade8p+2),
#               f5:(0x1.a0c42p-4, 0x1.0d9958p-2, 0x1.ee13eep+3, 0x1.9558a8p+2, 0x1.4743d4p+3, 0x1.6c4ad2p+1, -0x1.9eb08p+0, 0x1.70b2fp+2, 0x1.516f8p+3, -0x1.064c1p+3, -0x1.53aa52p+1, -0x1.dd2a84p+0),
#               f6:(-0x1.69ceap+1, 0x1.b0a01p-2, 0x1.52b5f8p+0, 0x1.cbc928p-1, -0x1.22149p+2, -0x1.f800f6p+1, -0x1.4c7d16p+5, -0x1.d36146p+3, -0x1.99cb2p+0, -0x1.21c2e8p-1, 0x1.5695ccp+2, 0x1.5d28f4p+0)]
# Returned status: 0
#
# Quantizer_standard::process(const float32 Y_N1[6x12], int8 Y_N2[6x12])
# {IN}  Y_N1 = [f1:(-0x1.0f21c8p-1, 0x1.70d2eep+1, 0x1.8a10a6p+3, -0x1.29ccc8p+2, 0x1.8481bp-2, -0x1.50806p-3, 0x1.af5f0ap+3, 0x1.1d3b88p+3, 0x1.d12968p+0, 0x1.6afd9ep+2, -0x1.d7f7ep+1, 0x1.dddb96p+2),
#               f2:(-0x1.3cc1fp-1, 0x1.65af5cp+0, -0x1.e44702p+0, 0x1.f56374p+1, -0x1.abf998p-1, -0x1.53cd6cp+1, 0x1.1b0374p+1, 0x1.cc8168p+0, -0x1.1fbae2p+2, 0x1.64230cp+3, -0x1.efaap+0, -0x1.b4ec54p+0),
#               f3:(0x1.74767p-2, -0x1.1479cp-3, 0x1.c98316p+1, -0x1.cefebcp+0, -0x1.7b14aep+2, -0x1.f87408p-1, 0x1.a3189ep+3, 0x1.4edeb4p+2, -0x1.d3a264p+2, -0x1.745144p+2, 0x1.3a6044p+1, 0x1.cf1484p+1),
#               f4:(-0x1.86dfccp+0, -0x1.7e13e8p-1, 0x1.f6c81p+0, 0x1.e7e802p+1, 0x1.9d706p-2, 0x1.4e53cp-2, 0x1.60c73p+2, 0x1.2ba17cp+0, 0x1.309b6cp+2, 0x1.daca4cp+2, -0x1.0f34ecp+2, 0x1.3aade8p+2),
#               f5:(0x1.a0c42p-4, 0x1.0d9958p-2, 0x1.ee13eep+3, 0x1.9558a8p+2, 0x1.4743d4p+3, 0x1.6c4ad2p+1, -0x1.9eb08p+0, 0x1.70b2fp+2, 0x1.516f8p+3, -0x1.064c1p+3, -0x1.53aa52p+1, -0x1.dd2a84p+0),
#               f6:(-0x1.69ceap+1, 0x1.b0a01p-2, 0x1.52b5f8p+0, 0x1.cbc928p-1, -0x1.22149p+2, -0x1.f800f6p+1, -0x1.4c7d16p+5, -0x1.d36146p+3, -0x1.99cb2p+0, -0x1.21c2e8p-1, 0x1.5695ccp+2, 0x1.5d28f4p+0)]
# {OUT} Y_N2 = [f1:(0xfffffffc, 0x17, 0x63, 0xffffffdb, 0x3, 0xffffffff, 0x6c, 0x47, 0xf, 0x2d, 0xffffffe3, 0x3c),
#               f2:(0xfffffffb, 0xb, 0xfffffff1, 0x1f, 0xfffffff9, 0xffffffeb, 0x12, 0xe, 0xffffffdc, 0x59, 0xfffffff1, 0xfffffff2),
#               f3:(0x3, 0xffffffff, 0x1d, 0xfffffff2, 0xffffffd1, 0xfffffff8, 0x69, 0x2a, 0xffffffc6, 0xffffffd1, 0x14, 0x1d),
#               f4:(0xfffffff4, 0xfffffffa, 0x10, 0x1e, 0x3, 0x3, 0x2c, 0x9, 0x26, 0x3b, 0xffffffde, 0x27),
#               f5:(0x1, 0x2, 0x7c, 0x33, 0x52, 0x17, 0xfffffff3, 0x2e, 0x54, 0xffffffbe, 0xffffffeb, 0xfffffff1),
#               f6:(0xffffffe9, 0x3, 0xb, 0x7, 0xffffffdc, 0xffffffe0, 0xffffff81, 0xffffff8b, 0xfffffff3, 0xfffffffb, 0x2b, 0xb)]
# Returned status: 0
#
# Puncturer_NO::depuncture(const int8 Y_N1[6x12], int8 Y_N2[6x12])
# {IN}  Y_N1 = [f1:(0xfffffffc, 0x17, 0x63, 0xffffffdb, 0x3, 0xffffffff, 0x6c, 0x47, 0xf, 0x2d, 0xffffffe3, 0x3c),
#               f2:(0xfffffffb, 0xb, 0xfffffff1, 0x1f, 0xfffffff9, 0xffffffeb, 0x12, 0xe, 0xffffffdc, 0x59, 0xfffffff1, 0xfffffff2),
#               f3:(0x3, 0xffffffff, 0x1d, 0xfffffff2, 0xffffffd1, 0xfffffff8, 0x69, 0x2a, 0xffffffc6, 0xffffffd1, 0x14, 0x1d),
#               f4:(0xfffffff4, 0xfffffffa, 0x10, 0x1e, 0x3, 0x3, 0x2c, 0x9, 0x26, 0x3b, 0xffffffde, 0x27),
#               f5:(0x1, 0x2, 0x7c, 0x33, 0x52, 0x17, 0xfffffff3, 0x2e, 0x54, 0xffffffbe, 0xffffffeb, 0xfffffff1),
#               f6:(0xffffffe9, 0x3, 0xb, 0x7, 0xffffffdc, 0xffffffe0, 0xffffff81, 0xffffff8b, 0xfffffff3, 0xfffffffb, 0x2b, 0xb)]
# {OUT} Y_N2 = [f1:(0xfffffffc, 0x17, 0x63, 0xffffffdb, 0x3, 0xffffffff, 0x6c, 0x47, 0xf, 0x2d, 0xffffffe3, 0x3c),
#               f2:(0xfffffffb, 0xb, 0xfffffff1, 0x1f, 0xfffffff9, 0xffffffeb, 0x12, 0xe, 0xffffffdc, 0x59, 0xfffffff1, 0xfffffff2),
#               f3:(0x3, 0xffffffff, 0x1d, 0xfffffff2, 0xffffffd1, 0xfffffff8, 0x69, 0x2a, 0xffffffc6, 0xffffffd1, 0x14, 0x1d),
#               f4:(0xfffffff4, 0xfffffffa, 0x10, 0x1e, 0x3, 0x3, 0x2c, 0x9, 0x26, 0x3b, 0xffffffde, 0x27),
#               f5:(0x1, 0x2, 0x7c, 0x33, 0x52, 0x17, 0xfffffff3, 0x2e, 0x54, 0xffffffbe, 0xffffffeb, 0xfffffff1),
#               f6:(0xffffffe9, 0x3, 0xb, 0x7, 0xffffffdc, 0xffffffe0, 0xffffff81, 0xffffff8b, 0xfffffff3, 0xfffffffb, 0x2b, 0xb)]
# Returned status: 0
#
# Decoder_NO::decode_siho(const int8 Y_N[6x12], int8 V_K[6x12])
# {IN}  Y_N = [f1:(0xfffffffc, 0x17, 0x63, 0xffffffdb, 0x3, 0xffffffff, 0x6c, 0x47, 0xf, 0x2d, 0xffffffe3, 0x3c),
#              f2:(0xfffffffb, 0xb, 0xfffffff1, 0x1f, 0xfffffff9, 0xffffffeb, 0x12, 0xe, 0xffffffdc, 0x59, 0xfffffff1, 0xfffffff2),
#              f3:(0x3, 0xffffffff, 0x1d, 0xfffffff2, 0xffffffd1, 0xfffffff8, 0x69, 0x2a, 0xffffffc6, 0xffffffd1, 0x14, 0x1d),
#              f4:(0xfffffff4, 0xfffffffa, 0x10, 0x1e, 0x3, 0x3, 0x2c, 0x9, 0x26, 0x3b, 0xffffffde, 0x27),
#              f5:(0x1, 0x2, 0x7c, 0x33, 0x52, 0x17, 0xfffffff3, 0x2e, 0x54, 0xffffffbe, 0xffffffeb, 0xfffffff1),
#              f6:(0xffffffe9, 0x3, 0xb, 0x7, 0xffffffdc, 0xffffffe0, 0xffffff81, 0xffffff8b, 0xfffffff3, 0xfffffffb, 0x2b, 0xb)]
# {OUT} V_K = [f1:(0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0),
#              f2:(0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1),
#              f3:(0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0),
#              f4:(0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0),
#              f5:(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1),
#              f6:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0)]
# Returned status: 0
#
# CRC_NO::extract(const int8 V_K1[6x12], int8 V_K2[6x12])
# {IN}  V_K1 = [f1:(0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0),
#               f2:(0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1),
#               f3:(0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0),
#               f4:(0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0),
#               f5:(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1),
#               f6:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0)]
# {OUT} V_K2 = [f1:(0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0),
#               f2:(0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1),
#               f3:(0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0),
#               f4:(0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0),
#               f5:(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1),
#               f6:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0)]
# Returned status: 0
#
# Monitor_BFER::check_errors(const int8 U[6x12], const int8 V[6x12])
# {IN}  U = [f1:(0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0),
#            f2:(0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1),
#            f3:(0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0),
#            f4:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0),
#            f5:(0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1),
#            f6:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0)]
# {IN}  V = [f1:(0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0),
#            f2:(0x1, 0x0, 0x1, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1),
#            f3:(0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0),
#            f4:(0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0),
#            f5:(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1),
#            f6:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0)]
# Returned status: 9
#
# -------------------------------
# New communication (nÂ°23)
# -------------------------------
#
# Source_random::generate(int8 U_K[6x12])
# {OUT} U_K = [f1:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0),
#              f2:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0),
#              f3:(0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1),
#              f4:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#              f5:(0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1),
#              f6:(0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0)]
# Returned status: 0
#
# CRC_NO::build(const int8 U_K1[6x12], int8 U_K2[6x12])
# {IN}  U_K1 = [f1:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0),
#               f2:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0),
#               f3:(0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1),
#               f4:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#               f5:(0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1),
#               f6:(0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0)]
# {OUT} U_K2 = [f1:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0),
#               f2:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0),
#               f3:(0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1),
#               f4:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#               f5:(0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1),
#               f6:(0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0)]
# Returned status: 0
#
# Encoder_NO::encode(const int8 U_K[6x12], int8 X_N[6x12])
# {IN}  U_K = [f1:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0),
#              f2:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0),
#              f3:(0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1),
#              f4:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#              f5:(0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1),
#              f6:(0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0)]
# {OUT} X_N = [f1:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0),
#              f2:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0),
#              f3:(0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1),
#              f4:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#              f5:(0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1),
#              f6:(0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0)]
# Returned status: 0
#
# Puncturer_NO::puncture(const int8 X_N1[6x12], int8 X_N2[6x12])
# {IN}  X_N1 = [f1:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0),
#               f2:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0),
#               f3:(0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1),
#               f4:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#               f5:(0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1),
#               f6:(0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0)]
# {OUT} X_N2 = [f1:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0),
#               f2:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0),
#               f3:(0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1),
#               f4:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#               f5:(0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1),
#               f6:(0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0)]
# Returned status: 0
#
# Modem_SCMA::modulate(const int8 X_N1[6x12], float32 X_N2[6x48])
# {IN}  X_N1 = [f1:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0),
#               f2:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0),
#               f3:(0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1),
#               f4:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#               f5:(0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1),
#               f6:(0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0)]
# {OUT} X_N2 = [f1:(0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0),
#               f2:(-0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0),
#               f3:(-0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1),
#               f5:(0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3),
#               f6:(0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Channel_Rayleigh_LLR::add_noise_wg(const float32 X_N[6x48], float32 H_N[6x48], float32 Y_N[6x48])
# {IN}  X_N = [f1:(0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, 0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0),
#              f2:(-0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, 0x1.0ded28p-3, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, -0x1.0ded28p-3, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, -0x1.d89374p-2, 0x0p+0, 0x0p+0),
#              f3:(-0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, 0x1.3c3612p-6, 0x1.91d14ep-1),
#              f5:(0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.6872bp-8, -0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.452bd4p-1, 0x1.d89374p-2, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.6872bp-8, 0x1.cb295ep-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.452bd4p-1, -0x1.d89374p-2, -0x1.3c3612p-6, -0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.73b646p-3, -0x1.0ded28p-3, 0x1.3c3612p-6, 0x1.91d14ep-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.73b646p-3, 0x1.0ded28p-3),
#              f6:(0x0p+0, 0x0p+0, 0x1.cb5dccp-3, 0x0p+0, -0x1.f2fec6p-2, 0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.91f8ap-1, 0x0p+0, -0x1.1d14e4p-3, 0x1.683e42p-3, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, -0x1.cb5dccp-3, 0x0p+0, 0x1.f2fec6p-2, -0x1.3b2fecp-1, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x1.91f8ap-1, 0x0p+0, 0x1.1d14e4p-3, -0x1.683e42p-3, 0x0p+0, 0x0p+0)]
# {OUT} H_N = [f1:(0x1.a497f8p-1, -0x1.cdb912p-4, 0x1.e7134ep-2, 0x1.83d55ep-1, 0x1.86b096p-2, 0x1.c73bcep-1, -0x1.441ec4p-3, -0x1.207892p-1, -0x1.25acb2p-1, -0x1.30caeap-1, -0x1.b122p-2, 0x1.a0e78cp-2, -0x1.1ff04ep-4, -0x1.1e39acp-2, 0x1.ee3e72p-2, -0x1.217eb6p-1, -0x1.cbb89ep-4, 0x1.95e54p-2, 0x1.202d9ap-1, -0x1.1b069cp+0, -0x1.3072d6p-3, -0x1.23a43p+0, -0x1.ad5612p-1, 0x1.9bf8b2p-3, -0x1.063492p-5, 0x1.df6e0cp-4, -0x1.73a2bap-1, -0x1.220bc8p-1, -0x1.1a833ap+0, 0x1.0a634ap+0, -0x1.a84254p-1, -0x1.07194ep-3, -0x1.9f14b6p+0, -0x1.92e642p+0, 0x1.2dfdcp+0, -0x1.e7c9bap-2, 0x1.48b498p-3, 0x1.464fb8p+0, -0x1.5107fp-1, 0x1.a73c48p+0, -0x1.da96cap-3, -0x1.50dc3p-1, 0x1.2163eep-3, 0x1.57216p-2, 0x1.545654p-2, 0x1.c0e3d6p-1, 0x1.09b2aep-1, -0x1.fd81eep-2),
#              f2:(0x1.0b22eep+0, 0x1.7d86c2p-2, -0x1.ddb60ap-1, -0x1.546c98p-1, 0x1.bb1b24p-5, -0x1.c0a0b6p-1, 0x1.da20e4p-1, -0x1.b2ea32p+0, 0x1.827b4p-1, -0x1.35a02cp-1, -0x1.050586p-1, -0x1.19d416p-1, 0x1.5afa4cp-1, -0x1.57898ap-1, 0x1.cef0d4p-3, -0x1.5becdep-5, 0x1.8c0096p-4, -0x1.7b0acap-1, -0x1.281d8ap-1, 0x1.a7292ap-2, -0x1.18349ep-3, -0x1.8ee7fap-1, -0x1.1d7f9cp-2, 0x1.c3dac2p-2, -0x1.680d6ap-1, -0x1.447f2cp-1, 0x1.15278ap+0, -0x1.0b481p-1, -0x1.9c826p-1, 0x1.07b2acp-1, 0x1.c41c08p-1, -0x1.ac5b1cp-1, -0x1.88eaeap-2, 0x1.51c2ep-2, 0x1.0b62f2p-3, -0x1.a4edd2p-7, -0x1.3251ap-1, 0x1.5f912cp-3, 0x1.48af02p+0, 0x1.e71226p+0, -0x1.f3a18ap-1, 0x1.207b6p+0, -0x1.bf9ca6p-2, -0x1.2538fcp-3, 0x1.5dc26ap-3, 0x1.eb2532p-3, 0x1.db2d28p-1, 0x1.eb9748p-1),
#              f3:(0x1.fe1d9ap-4, 0x1.dafb24p-1, 0x1.b6d244p-2, 0x1.111eaep+0, -0x1.9bd862p+0, 0x1.5bf6ap-1, 0x1.558382p-3, -0x1.80714cp-2, -0x1.15a1a4p-3, 0x1.8151aep-3, 0x1.4585e6p-2, 0x1.265db2p+0, -0x1.2f6b22p+0, -0x1.fbb642p-1, 0x1.031658p+0, 0x1.5d8c0cp-2, -0x1.a05506p-2, -0x1.fa9fa2p-8, -0x1.b8980ap-2, -0x1.f3edc6p-1, -0x1.3d1354p-1, -0x1.e22ec8p-3, 0x1.6a65dap-5, 0x1.03340ap+0, -0x1.6b0b68p-1, -0x1.957b78p-2, -0x1.f85566p-1, -0x1.14a718p-4, 0x1.d111f4p-1, -0x1.0a3f34p+0, 0x1.8da5e6p-1, 0x1.76766cp+0, 0x1.60f00ap-1, 0x1.8e1818p+0, -0x1.a79372p-4, 0x1.9bfc5ap-1, -0x1.313642p-1, -0x1.628788p-1, 0x1.35cde2p-1, -0x1.11422ap-1, 0x1.a3f6f8p-1, 0x1.ea6674p-2, -0x1.d76f8cp-4, -0x1.a6687p+0, 0x1.1b3306p-3, -0x1.4f5f92p+0, -0x1.96f5a4p-7, -0x1.0313bap+0),
#              f4:(0x1.0a361ap-1, -0x1.8db23cp-4, -0x1.5c01fep-1, 0x1.4b4dbep-2, 0x1.059bdep-1, 0x1.44f7a6p-1, 0x1.12281ep-1, -0x1.404916p-2, 0x1.008e58p+0, 0x1.4b0ea4p+0, -0x1.c40ee2p-2, -0x1.ea0294p+0, -0x1.694738p-1, 0x1.088996p+0, 0x1.54f298p+0, 0x1.a1333p-2, 0x1.2c90fcp+0, -0x1.07c3bap-3, 0x1.ef6f58p-2, -0x1.d76994p-2, 0x1.d718f6p-3, 0x1.ba4b68p-4, 0x1.4a0228p-2, -0x1.edc98p-2, 0x1.0a343p-1, -0x1.ea2d7cp-7, 0x1.fbc238p-3, 0x1.47b8p-1, 0x1.4d711cp-2, -0x1.27514p-1, -0x1.6a2b7ap-4, -0x1.b59758p-2, 0x1.621332p-3, 0x1.681ab2p-3, 0x1.bc72fcp-1, 0x1.8e017p-1, 0x1.0b822ep-2, 0x1.133e04p-1, -0x1.3c3736p+0, -0x1.87f41ep-3, 0x1.bc7152p-3, -0x1.4ada2ep-1, 0x1.ab48c6p-3, 0x1.24749p-2, -0x1.8a8dp-4, -0x1.3d8e68p-1, 0x1.4c4cc2p-2, -0x1.1c7358p-2),
#              f5:(0x1.69fa64p-5, -0x1.99f938p-3, -0x1.cf341p-2, -0x1.3c438p-2, 0x1.49dcc8p+0, -0x1.9bc288p-1, 0x1.537162p-1, -0x1.a0a33p-1, 0x1.c3a3d2p-2, -0x1.f5a982p+0, 0x1.13822ap+0, -0x1.91a2f8p+0, -0x1.069e24p+0, 0x1.5f8ad6p-1, -0x1.84b418p-4, 0x1.feaad4p-3, -0x1.e7cd1cp-4, -0x1.ba7ba2p-1, 0x1.14d042p-3, -0x1.4a71d8p+0, 0x1.0bcf8cp-3, 0x1.3e87d8p-1, 0x1.0e939ap-1, 0x1.ced196p-3, -0x1.d4441ep-1, -0x1.039f8cp-2, -0x1.fb7fbcp-1, -0x1.3abd18p-1, -0x1.7325dp-1, 0x1.4f7ef8p-2, -0x1.ba391ep-1, -0x1.2a4576p+0, 0x1.35380cp-1, 0x1.2b9f18p-1, 0x1.96a624p-1, 0x1.2e5588p-1, -0x1.9307d6p+0, 0x1.6428e2p-1, 0x1.218406p+0, 0x1.a70718p-3, -0x1.059662p-4, -0x1.5a8214p-1, 0x1.31c4c6p-2, 0x1.078dap-2, -0x1.3afa24p-1, -0x1.31aaccp+0, 0x1.0685dap-1, -0x1.69b81ep-1),
#              f6:(0x1.545724p-2, -0x1.5b29f8p-2, 0x1.64acf4p-1, -0x1.b31422p-2, -0x1.012db6p-1, 0x1.c4c62cp-2, -0x1.886f24p-4, 0x1.f9ca84p-5, 0x1.981ecap-2, -0x1.914d16p-1, 0x1.8f9aa4p-3, -0x1.d688a8p-4, -0x1.64a1a6p-2, 0x1.15f95cp+0, 0x1.8f8b54p-7, -0x1.8135b2p-1, -0x1.a06f6p-1, -0x1.5bfc8ep-2, -0x1.2d938ap+0, 0x1.77dabcp-5, 0x1.bcc3a2p-1, 0x1.059e9p-1, -0x1.a3e352p-2, 0x1.2fe782p-2, -0x1.1e920ap-1, -0x1.e7788cp-3, -0x1.896074p-1, -0x1.e4a514p-9, 0x1.361b4p+0, -0x1.70a0c4p+0, 0x1.15e99p-1, 0x1.14a9b2p+0, 0x1.759456p-3, -0x1.5216acp-2, 0x1.a155aap-4, -0x1.326418p-2, 0x1.446d7ap-1, 0x1.ded942p-3, -0x1.38704ap-1, 0x1.b06186p-1, -0x1.372f44p+1, -0x1.11b992p-1, -0x1.a06b8cp-2, 0x1.0e1d9ap-2, -0x1.eba5f4p-1, -0x1.b8ee7cp-2, -0x1.b29ceep-1, -0x1.81c9ap-1)]
# {OUT} Y_N = [f1:(-0x1.17c546p+0, -0x1.aba3fap-2, 0x1.4aac96p-2, -0x1.90faacp-2, 0x1.977a22p-3, 0x1.2dc89ep-1, -0x1.50fp-11, -0x1.8b7422p+0, -0x1.40b0dp-4, -0x1.10002p-1, -0x1.3114a2p+0, -0x1.d61dp-4, 0x1.769dbp-4, -0x1.3d957cp+0, -0x1.55a1d4p-3, 0x1.3f956cp-2, -0x1.8f0c28p-3, 0x1.9a12bcp-2, 0x1.6edc08p-4, 0x1.1c060ap-2, 0x1.03a34ep+0, -0x1.c865bp-2, -0x1.f9a23p-2, 0x1.941054p-4, 0x1.887b68p+0, 0x1.fc841p-3, -0x1.4c458ap-3, 0x1.ed9d5p-3, 0x1.82a7p-5, -0x1.d69ca4p-1, -0x1.4026a4p-1, -0x1.8954f8p-5, -0x1.19cfb2p+0, -0x1.44bc44p+0, 0x1.b62268p-1, 0x1.b6a244p-3, 0x1.bc3c7ap-1, -0x1.4d30f6p-2, 0x1.026f58p-4, -0x1.aa9064p-2, 0x1.e0636p-2, -0x1.0c7e92p-2, 0x1.2b1a24p-1, 0x1.b363dap-1, -0x1.7e8f58p-2, -0x1.858d34p-3, 0x1.05d65cp-3, 0x1.7e800ap-1),
#              f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#              f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Modem_SCMA::filter(const float32 Y_N1[6x48], float32 Y_N2[6x48])
# {IN}  Y_N1 = [f1:(-0x1.17c546p+0, -0x1.aba3fap-2, 0x1.4aac96p-2, -0x1.90faacp-2, 0x1.977a22p-3, 0x1.2dc89ep-1, -0x1.50fp-11, -0x1.8b7422p+0, -0x1.40b0dp-4, -0x1.10002p-1, -0x1.3114a2p+0, -0x1.d61dp-4, 0x1.769dbp-4, -0x1.3d957cp+0, -0x1.55a1d4p-3, 0x1.3f956cp-2, -0x1.8f0c28p-3, 0x1.9a12bcp-2, 0x1.6edc08p-4, 0x1.1c060ap-2, 0x1.03a34ep+0, -0x1.c865bp-2, -0x1.f9a23p-2, 0x1.941054p-4, 0x1.887b68p+0, 0x1.fc841p-3, -0x1.4c458ap-3, 0x1.ed9d5p-3, 0x1.82a7p-5, -0x1.d69ca4p-1, -0x1.4026a4p-1, -0x1.8954f8p-5, -0x1.19cfb2p+0, -0x1.44bc44p+0, 0x1.b62268p-1, 0x1.b6a244p-3, 0x1.bc3c7ap-1, -0x1.4d30f6p-2, 0x1.026f58p-4, -0x1.aa9064p-2, 0x1.e0636p-2, -0x1.0c7e92p-2, 0x1.2b1a24p-1, 0x1.b363dap-1, -0x1.7e8f58p-2, -0x1.858d34p-3, 0x1.05d65cp-3, 0x1.7e800ap-1),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# {OUT} Y_N2 = [f1:(-0x1.17c546p+0, -0x1.aba3fap-2, 0x1.4aac96p-2, -0x1.90faacp-2, 0x1.977a22p-3, 0x1.2dc89ep-1, -0x1.50fp-11, -0x1.8b7422p+0, -0x1.40b0dp-4, -0x1.10002p-1, -0x1.3114a2p+0, -0x1.d61dp-4, 0x1.769dbp-4, -0x1.3d957cp+0, -0x1.55a1d4p-3, 0x1.3f956cp-2, -0x1.8f0c28p-3, 0x1.9a12bcp-2, 0x1.6edc08p-4, 0x1.1c060ap-2, 0x1.03a34ep+0, -0x1.c865bp-2, -0x1.f9a23p-2, 0x1.941054p-4, 0x1.887b68p+0, 0x1.fc841p-3, -0x1.4c458ap-3, 0x1.ed9d5p-3, 0x1.82a7p-5, -0x1.d69ca4p-1, -0x1.4026a4p-1, -0x1.8954f8p-5, -0x1.19cfb2p+0, -0x1.44bc44p+0, 0x1.b62268p-1, 0x1.b6a244p-3, 0x1.bc3c7ap-1, -0x1.4d30f6p-2, 0x1.026f58p-4, -0x1.aa9064p-2, 0x1.e0636p-2, -0x1.0c7e92p-2, 0x1.2b1a24p-1, 0x1.b363dap-1, -0x1.7e8f58p-2, -0x1.858d34p-3, 0x1.05d65cp-3, 0x1.7e800ap-1),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# Returned status: 0
#
# Modem_SCMA::demodulate_wg(const float32 H_N[6x48], const float32 Y_N1[6x48], float32 Y_N2[6x12])
# {IN}  H_N  = [f1:(0x1.a497f8p-1, -0x1.cdb912p-4, 0x1.e7134ep-2, 0x1.83d55ep-1, 0x1.86b096p-2, 0x1.c73bcep-1, -0x1.441ec4p-3, -0x1.207892p-1, -0x1.25acb2p-1, -0x1.30caeap-1, -0x1.b122p-2, 0x1.a0e78cp-2, -0x1.1ff04ep-4, -0x1.1e39acp-2, 0x1.ee3e72p-2, -0x1.217eb6p-1, -0x1.cbb89ep-4, 0x1.95e54p-2, 0x1.202d9ap-1, -0x1.1b069cp+0, -0x1.3072d6p-3, -0x1.23a43p+0, -0x1.ad5612p-1, 0x1.9bf8b2p-3, -0x1.063492p-5, 0x1.df6e0cp-4, -0x1.73a2bap-1, -0x1.220bc8p-1, -0x1.1a833ap+0, 0x1.0a634ap+0, -0x1.a84254p-1, -0x1.07194ep-3, -0x1.9f14b6p+0, -0x1.92e642p+0, 0x1.2dfdcp+0, -0x1.e7c9bap-2, 0x1.48b498p-3, 0x1.464fb8p+0, -0x1.5107fp-1, 0x1.a73c48p+0, -0x1.da96cap-3, -0x1.50dc3p-1, 0x1.2163eep-3, 0x1.57216p-2, 0x1.545654p-2, 0x1.c0e3d6p-1, 0x1.09b2aep-1, -0x1.fd81eep-2),
#               f2:(0x1.0b22eep+0, 0x1.7d86c2p-2, -0x1.ddb60ap-1, -0x1.546c98p-1, 0x1.bb1b24p-5, -0x1.c0a0b6p-1, 0x1.da20e4p-1, -0x1.b2ea32p+0, 0x1.827b4p-1, -0x1.35a02cp-1, -0x1.050586p-1, -0x1.19d416p-1, 0x1.5afa4cp-1, -0x1.57898ap-1, 0x1.cef0d4p-3, -0x1.5becdep-5, 0x1.8c0096p-4, -0x1.7b0acap-1, -0x1.281d8ap-1, 0x1.a7292ap-2, -0x1.18349ep-3, -0x1.8ee7fap-1, -0x1.1d7f9cp-2, 0x1.c3dac2p-2, -0x1.680d6ap-1, -0x1.447f2cp-1, 0x1.15278ap+0, -0x1.0b481p-1, -0x1.9c826p-1, 0x1.07b2acp-1, 0x1.c41c08p-1, -0x1.ac5b1cp-1, -0x1.88eaeap-2, 0x1.51c2ep-2, 0x1.0b62f2p-3, -0x1.a4edd2p-7, -0x1.3251ap-1, 0x1.5f912cp-3, 0x1.48af02p+0, 0x1.e71226p+0, -0x1.f3a18ap-1, 0x1.207b6p+0, -0x1.bf9ca6p-2, -0x1.2538fcp-3, 0x1.5dc26ap-3, 0x1.eb2532p-3, 0x1.db2d28p-1, 0x1.eb9748p-1),
#               f3:(0x1.fe1d9ap-4, 0x1.dafb24p-1, 0x1.b6d244p-2, 0x1.111eaep+0, -0x1.9bd862p+0, 0x1.5bf6ap-1, 0x1.558382p-3, -0x1.80714cp-2, -0x1.15a1a4p-3, 0x1.8151aep-3, 0x1.4585e6p-2, 0x1.265db2p+0, -0x1.2f6b22p+0, -0x1.fbb642p-1, 0x1.031658p+0, 0x1.5d8c0cp-2, -0x1.a05506p-2, -0x1.fa9fa2p-8, -0x1.b8980ap-2, -0x1.f3edc6p-1, -0x1.3d1354p-1, -0x1.e22ec8p-3, 0x1.6a65dap-5, 0x1.03340ap+0, -0x1.6b0b68p-1, -0x1.957b78p-2, -0x1.f85566p-1, -0x1.14a718p-4, 0x1.d111f4p-1, -0x1.0a3f34p+0, 0x1.8da5e6p-1, 0x1.76766cp+0, 0x1.60f00ap-1, 0x1.8e1818p+0, -0x1.a79372p-4, 0x1.9bfc5ap-1, -0x1.313642p-1, -0x1.628788p-1, 0x1.35cde2p-1, -0x1.11422ap-1, 0x1.a3f6f8p-1, 0x1.ea6674p-2, -0x1.d76f8cp-4, -0x1.a6687p+0, 0x1.1b3306p-3, -0x1.4f5f92p+0, -0x1.96f5a4p-7, -0x1.0313bap+0),
#               f4:(0x1.0a361ap-1, -0x1.8db23cp-4, -0x1.5c01fep-1, 0x1.4b4dbep-2, 0x1.059bdep-1, 0x1.44f7a6p-1, 0x1.12281ep-1, -0x1.404916p-2, 0x1.008e58p+0, 0x1.4b0ea4p+0, -0x1.c40ee2p-2, -0x1.ea0294p+0, -0x1.694738p-1, 0x1.088996p+0, 0x1.54f298p+0, 0x1.a1333p-2, 0x1.2c90fcp+0, -0x1.07c3bap-3, 0x1.ef6f58p-2, -0x1.d76994p-2, 0x1.d718f6p-3, 0x1.ba4b68p-4, 0x1.4a0228p-2, -0x1.edc98p-2, 0x1.0a343p-1, -0x1.ea2d7cp-7, 0x1.fbc238p-3, 0x1.47b8p-1, 0x1.4d711cp-2, -0x1.27514p-1, -0x1.6a2b7ap-4, -0x1.b59758p-2, 0x1.621332p-3, 0x1.681ab2p-3, 0x1.bc72fcp-1, 0x1.8e017p-1, 0x1.0b822ep-2, 0x1.133e04p-1, -0x1.3c3736p+0, -0x1.87f41ep-3, 0x1.bc7152p-3, -0x1.4ada2ep-1, 0x1.ab48c6p-3, 0x1.24749p-2, -0x1.8a8dp-4, -0x1.3d8e68p-1, 0x1.4c4cc2p-2, -0x1.1c7358p-2),
#               f5:(0x1.69fa64p-5, -0x1.99f938p-3, -0x1.cf341p-2, -0x1.3c438p-2, 0x1.49dcc8p+0, -0x1.9bc288p-1, 0x1.537162p-1, -0x1.a0a33p-1, 0x1.c3a3d2p-2, -0x1.f5a982p+0, 0x1.13822ap+0, -0x1.91a2f8p+0, -0x1.069e24p+0, 0x1.5f8ad6p-1, -0x1.84b418p-4, 0x1.feaad4p-3, -0x1.e7cd1cp-4, -0x1.ba7ba2p-1, 0x1.14d042p-3, -0x1.4a71d8p+0, 0x1.0bcf8cp-3, 0x1.3e87d8p-1, 0x1.0e939ap-1, 0x1.ced196p-3, -0x1.d4441ep-1, -0x1.039f8cp-2, -0x1.fb7fbcp-1, -0x1.3abd18p-1, -0x1.7325dp-1, 0x1.4f7ef8p-2, -0x1.ba391ep-1, -0x1.2a4576p+0, 0x1.35380cp-1, 0x1.2b9f18p-1, 0x1.96a624p-1, 0x1.2e5588p-1, -0x1.9307d6p+0, 0x1.6428e2p-1, 0x1.218406p+0, 0x1.a70718p-3, -0x1.059662p-4, -0x1.5a8214p-1, 0x1.31c4c6p-2, 0x1.078dap-2, -0x1.3afa24p-1, -0x1.31aaccp+0, 0x1.0685dap-1, -0x1.69b81ep-1),
#               f6:(0x1.545724p-2, -0x1.5b29f8p-2, 0x1.64acf4p-1, -0x1.b31422p-2, -0x1.012db6p-1, 0x1.c4c62cp-2, -0x1.886f24p-4, 0x1.f9ca84p-5, 0x1.981ecap-2, -0x1.914d16p-1, 0x1.8f9aa4p-3, -0x1.d688a8p-4, -0x1.64a1a6p-2, 0x1.15f95cp+0, 0x1.8f8b54p-7, -0x1.8135b2p-1, -0x1.a06f6p-1, -0x1.5bfc8ep-2, -0x1.2d938ap+0, 0x1.77dabcp-5, 0x1.bcc3a2p-1, 0x1.059e9p-1, -0x1.a3e352p-2, 0x1.2fe782p-2, -0x1.1e920ap-1, -0x1.e7788cp-3, -0x1.896074p-1, -0x1.e4a514p-9, 0x1.361b4p+0, -0x1.70a0c4p+0, 0x1.15e99p-1, 0x1.14a9b2p+0, 0x1.759456p-3, -0x1.5216acp-2, 0x1.a155aap-4, -0x1.326418p-2, 0x1.446d7ap-1, 0x1.ded942p-3, -0x1.38704ap-1, 0x1.b06186p-1, -0x1.372f44p+1, -0x1.11b992p-1, -0x1.a06b8cp-2, 0x1.0e1d9ap-2, -0x1.eba5f4p-1, -0x1.b8ee7cp-2, -0x1.b29ceep-1, -0x1.81c9ap-1)]
# {IN}  Y_N1 = [f1:(-0x1.17c546p+0, -0x1.aba3fap-2, 0x1.4aac96p-2, -0x1.90faacp-2, 0x1.977a22p-3, 0x1.2dc89ep-1, -0x1.50fp-11, -0x1.8b7422p+0, -0x1.40b0dp-4, -0x1.10002p-1, -0x1.3114a2p+0, -0x1.d61dp-4, 0x1.769dbp-4, -0x1.3d957cp+0, -0x1.55a1d4p-3, 0x1.3f956cp-2, -0x1.8f0c28p-3, 0x1.9a12bcp-2, 0x1.6edc08p-4, 0x1.1c060ap-2, 0x1.03a34ep+0, -0x1.c865bp-2, -0x1.f9a23p-2, 0x1.941054p-4, 0x1.887b68p+0, 0x1.fc841p-3, -0x1.4c458ap-3, 0x1.ed9d5p-3, 0x1.82a7p-5, -0x1.d69ca4p-1, -0x1.4026a4p-1, -0x1.8954f8p-5, -0x1.19cfb2p+0, -0x1.44bc44p+0, 0x1.b62268p-1, 0x1.b6a244p-3, 0x1.bc3c7ap-1, -0x1.4d30f6p-2, 0x1.026f58p-4, -0x1.aa9064p-2, 0x1.e0636p-2, -0x1.0c7e92p-2, 0x1.2b1a24p-1, 0x1.b363dap-1, -0x1.7e8f58p-2, -0x1.858d34p-3, 0x1.05d65cp-3, 0x1.7e800ap-1),
#               f2:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f3:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f4:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f5:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0),
#               f6:(0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0, 0x0p+0)]
# {OUT} Y_N2 = [f1:(0x1.8eee7cp+0, 0x1.e95abap+1, 0x1.fca19p-2, -0x1.0e8a58p+1, 0x1.c01e08p-1, 0x1.52d63ep+1, -0x1.c20de8p-1, 0x1.501b4p-3, 0x1.2212d8p+0, -0x1.96e42ap+2, -0x1.0937fp-1, -0x1.9fa98p-2),
#               f2:(-0x1.420de4p+2, -0x1.60b87p-2, 0x1.9fa96p+1, 0x1.3edbe8p+1, -0x1.284bc8p+0, -0x1.b841ccp+1, -0x1.1748dcp+3, -0x1.076e94p+1, -0x1.bafep-2, 0x1.1df724p+1, -0x1.189d4p+1, 0x1.0ef544p+0),
#               f3:(0x1.34926cp+1, 0x1.569774p+1, 0x1.554448p+0, -0x1.41e85p+2, 0x1.3018cp-4, -0x1.d12d28p-1, 0x1.7a54e8p+2, 0x1.dded68p+0, 0x1.39a128p+4, 0x1.0c5ae4p+3, 0x1.9aedbcp+0, -0x1.2223ap+3),
#               f4:(0x1.d11238p-1, 0x1.6a2p+1, -0x1.6a8bcp+1, -0x1.a2b3ep+2, 0x1.d3334p-2, 0x1.57ae88p-1, 0x1.6c4028p-1, 0x1.e1b58p-1, 0x1.3c1f2p-3, -0x1.26fae8p+0, 0x1.e55086p+0, -0x1.f02ad8p-1),
#               f5:(-0x1.893ed8p+2, -0x1.19a7bap+1, 0x1.7b9f84p+1, 0x1.d8011p+1, -0x1.a9d58p-5, 0x1.d6b828p-2, -0x1.e560ep-1, -0x1.ede76p+1, -0x1.c668ccp+0, 0x1.87a3e8p+1, 0x1.68fdbp+1, -0x1.8f8f8p-3),
#               f6:(0x1.6f29cp-3, 0x1.0b2458p-1, -0x1.b9abp-2, -0x1.cd28e2p+1, -0x1.47b75cp+1, 0x1.1f522p+2, 0x1.39aa7p-1, 0x1.1e904cp+2, -0x1.50342cp+0, 0x1.de3c44p+1, 0x1.8f7d68p+0, 0x1.b509ap+1)]
# Returned status: 0
#
# Quantizer_standard::process(const float32 Y_N1[6x12], int8 Y_N2[6x12])
# {IN}  Y_N1 = [f1:(0x1.8eee7cp+0, 0x1.e95abap+1, 0x1.fca19p-2, -0x1.0e8a58p+1, 0x1.c01e08p-1, 0x1.52d63ep+1, -0x1.c20de8p-1, 0x1.501b4p-3, 0x1.2212d8p+0, -0x1.96e42ap+2, -0x1.0937fp-1, -0x1.9fa98p-2),
#               f2:(-0x1.420de4p+2, -0x1.60b87p-2, 0x1.9fa96p+1, 0x1.3edbe8p+1, -0x1.284bc8p+0, -0x1.b841ccp+1, -0x1.1748dcp+3, -0x1.076e94p+1, -0x1.bafep-2, 0x1.1df724p+1, -0x1.189d4p+1, 0x1.0ef544p+0),
#               f3:(0x1.34926cp+1, 0x1.569774p+1, 0x1.554448p+0, -0x1.41e85p+2, 0x1.3018cp-4, -0x1.d12d28p-1, 0x1.7a54e8p+2, 0x1.dded68p+0, 0x1.39a128p+4, 0x1.0c5ae4p+3, 0x1.9aedbcp+0, -0x1.2223ap+3),
#               f4:(0x1.d11238p-1, 0x1.6a2p+1, -0x1.6a8bcp+1, -0x1.a2b3ep+2, 0x1.d3334p-2, 0x1.57ae88p-1, 0x1.6c4028p-1, 0x1.e1b58p-1, 0x1.3c1f2p-3, -0x1.26fae8p+0, 0x1.e55086p+0, -0x1.f02ad8p-1),
#               f5:(-0x1.893ed8p+2, -0x1.19a7bap+1, 0x1.7b9f84p+1, 0x1.d8011p+1, -0x1.a9d58p-5, 0x1.d6b828p-2, -0x1.e560ep-1, -0x1.ede76p+1, -0x1.c668ccp+0, 0x1.87a3e8p+1, 0x1.68fdbp+1, -0x1.8f8f8p-3),
#               f6:(0x1.6f29cp-3, 0x1.0b2458p-1, -0x1.b9abp-2, -0x1.cd28e2p+1, -0x1.47b75cp+1, 0x1.1f522p+2, 0x1.39aa7p-1, 0x1.1e904cp+2, -0x1.50342cp+0, 0x1.de3c44p+1, 0x1.8f7d68p+0, 0x1.b509ap+1)]
# {OUT} Y_N2 = [f1:(0xc, 0x1f, 0x4, 0xffffffef, 0x7, 0x15, 0xfffffff9, 0x1, 0x9, 0xffffffcd, 0xfffffffc, 0xfffffffd),
#               f2:(0xffffffd8, 0xfffffffd, 0x1a, 0x14, 0xfffffff7, 0xffffffe4, 0xffffffba, 0xfffffff0, 0xfffffffd, 0x12, 0xffffffee, 0x8),
#               f3:(0x13, 0x15, 0xb, 0xffffffd8, 0x1, 0xfffffff9, 0x2f, 0xf, 0x7f, 0x43, 0xd, 0xffffffb7),
#               f4:(0x7, 0x17, 0xffffffe9, 0xffffffcc, 0x4, 0x5, 0x6, 0x8, 0x1, 0xfffffff7, 0xf, 0xfffffff8),
#               f5:(0xffffffcf, 0xffffffee, 0x18, 0x1e, 0x0, 0x4, 0xfffffff8, 0xffffffe1, 0xfffffff2, 0x18, 0x17, 0xfffffffe),
#               f6:(0x1, 0x4, 0xfffffffd, 0xffffffe3, 0xffffffec, 0x24, 0x5, 0x24, 0xfffffff5, 0x1e, 0xc, 0x1b)]
# Returned status: 0
#
# Puncturer_NO::depuncture(const int8 Y_N1[6x12], int8 Y_N2[6x12])
# {IN}  Y_N1 = [f1:(0xc, 0x1f, 0x4, 0xffffffef, 0x7, 0x15, 0xfffffff9, 0x1, 0x9, 0xffffffcd, 0xfffffffc, 0xfffffffd),
#               f2:(0xffffffd8, 0xfffffffd, 0x1a, 0x14, 0xfffffff7, 0xffffffe4, 0xffffffba, 0xfffffff0, 0xfffffffd, 0x12, 0xffffffee, 0x8),
#               f3:(0x13, 0x15, 0xb, 0xffffffd8, 0x1, 0xfffffff9, 0x2f, 0xf, 0x7f, 0x43, 0xd, 0xffffffb7),
#               f4:(0x7, 0x17, 0xffffffe9, 0xffffffcc, 0x4, 0x5, 0x6, 0x8, 0x1, 0xfffffff7, 0xf, 0xfffffff8),
#               f5:(0xffffffcf, 0xffffffee, 0x18, 0x1e, 0x0, 0x4, 0xfffffff8, 0xffffffe1, 0xfffffff2, 0x18, 0x17, 0xfffffffe),
#               f6:(0x1, 0x4, 0xfffffffd, 0xffffffe3, 0xffffffec, 0x24, 0x5, 0x24, 0xfffffff5, 0x1e, 0xc, 0x1b)]
# {OUT} Y_N2 = [f1:(0xc, 0x1f, 0x4, 0xffffffef, 0x7, 0x15, 0xfffffff9, 0x1, 0x9, 0xffffffcd, 0xfffffffc, 0xfffffffd),
#               f2:(0xffffffd8, 0xfffffffd, 0x1a, 0x14, 0xfffffff7, 0xffffffe4, 0xffffffba, 0xfffffff0, 0xfffffffd, 0x12, 0xffffffee, 0x8),
#               f3:(0x13, 0x15, 0xb, 0xffffffd8, 0x1, 0xfffffff9, 0x2f, 0xf, 0x7f, 0x43, 0xd, 0xffffffb7),
#               f4:(0x7, 0x17, 0xffffffe9, 0xffffffcc, 0x4, 0x5, 0x6, 0x8, 0x1, 0xfffffff7, 0xf, 0xfffffff8),
#               f5:(0xffffffcf, 0xffffffee, 0x18, 0x1e, 0x0, 0x4, 0xfffffff8, 0xffffffe1, 0xfffffff2, 0x18, 0x17, 0xfffffffe),
#               f6:(0x1, 0x4, 0xfffffffd, 0xffffffe3, 0xffffffec, 0x24, 0x5, 0x24, 0xfffffff5, 0x1e, 0xc, 0x1b)]
# Returned status: 0
#
# Decoder_NO::decode_siho(const int8 Y_N[6x12], int8 V_K[6x12])
# {IN}  Y_N = [f1:(0xc, 0x1f, 0x4, 0xffffffef, 0x7, 0x15, 0xfffffff9, 0x1, 0x9, 0xffffffcd, 0xfffffffc, 0xfffffffd),
#              f2:(0xffffffd8, 0xfffffffd, 0x1a, 0x14, 0xfffffff7, 0xffffffe4, 0xffffffba, 0xfffffff0, 0xfffffffd, 0x12, 0xffffffee, 0x8),
#              f3:(0x13, 0x15, 0xb, 0xffffffd8, 0x1, 0xfffffff9, 0x2f, 0xf, 0x7f, 0x43, 0xd, 0xffffffb7),
#              f4:(0x7, 0x17, 0xffffffe9, 0xffffffcc, 0x4, 0x5, 0x6, 0x8, 0x1, 0xfffffff7, 0xf, 0xfffffff8),
#              f5:(0xffffffcf, 0xffffffee, 0x18, 0x1e, 0x0, 0x4, 0xfffffff8, 0xffffffe1, 0xfffffff2, 0x18, 0x17, 0xfffffffe),
#              f6:(0x1, 0x4, 0xfffffffd, 0xffffffe3, 0xffffffec, 0x24, 0x5, 0x24, 0xfffffff5, 0x1e, 0xc, 0x1b)]
# {OUT} V_K = [f1:(0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1),
#              f2:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0),
#              f3:(0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1),
#              f4:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1),
#              f5:(0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1),
#              f6:(0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0)]
# Returned status: 0
#
# CRC_NO::extract(const int8 V_K1[6x12], int8 V_K2[6x12])
# {IN}  V_K1 = [f1:(0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1),
#               f2:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0),
#               f3:(0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1),
#               f4:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1),
#               f5:(0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1),
#               f6:(0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0)]
# {OUT} V_K2 = [f1:(0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1),
#               f2:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0),
#               f3:(0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1),
#               f4:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1),
#               f5:(0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1),
#               f6:(0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0)]
# Returned status: 0
#
# Monitor_BFER::check_errors(const int8 U[6x12], const int8 V[6x12])
# {IN}  U = [f1:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x1, 0x1, 0x0),
#            f2:(0x1, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0),
#            f3:(0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1),
#            f4:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1),
#            f5:(0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1),
#            f6:(0x0, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0)]
# {IN}  V = [f1:(0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1),
#            f2:(0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x0),
#            f3:(0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1),
#            f4:(0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1),
#            f5:(0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1),
#            f6:(0x0, 0x0, 0x1, 0x1, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0)]
# Returned status: 10
#
# ----------------------------------------------------------------------||---------------------
#       Bit Error Rate (BER) and Frame Error Rate (FER) depending       ||  Global throughput
#                    on the Signal Noise Ratio (SNR)                    ||  and elapsed time
# ----------------------------------------------------------------------||---------------------
# -------|-------|----------|----------|----------|----------|----------||----------|----------
#  Es/N0 | Eb/N0 |      FRA |       BE |       FE |      BER |      FER ||  SIM_THR |    ET/RT
#   (dB) |  (dB) |          |          |          |          |          ||   (Mb/s) | (hhmmss)
# -------|-------|----------|----------|----------|----------|----------||----------|----------
    9.77 |  5.00 |      144 |      175 |      102 | 1.01e-01 | 7.08e-01 ||     0.05 | 00h00'00
# End of the simulation.
